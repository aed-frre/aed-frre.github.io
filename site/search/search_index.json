{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenidos! \u00b6 Objetivo \u00b6 El objetivo de este sitio es brindar una experiencia mas flexible y agradable a los estudiantes en las clases pr\u00e1cticas de la c\u00e1tedra Algoritmos y Estructura de Datos. Aqu\u00ed se podr\u00e1 encontrar el mismo contenido que en la Gu\u00eda de Trabajos Pr\u00e1cticos impresa publicada por la c\u00e1tedra, por lo tanto el uso del sitio no es obligatorio y pueden obtener la Gu\u00eda impresa aqu\u00ed Numeraci\u00f3n Ejercicios \u00b6 Durante las clases pr\u00e1cticas los profesores haran referencia a los ejercicios por su numeraci\u00f3n. Para poder ubicar rapidamente el mismo es importante conocer dos cosas Trabajo Pr\u00e1ctico El estudiante tiene que tener claro que trabajo pr\u00e1ctico se est\u00e1 tratando durante el dictado de la asignatura. N\u00famero de ejercicio Dato brindado por el profesor Para poder ubicar el ejercicio en la gu\u00eda impresa deber\u00e1n dirigirse al Trabajo Pr\u00e1ctico correspondiente y luego ubicar el ejercicio por su valor num\u00e9rico Para poder ubicar el ejercicio en la gu\u00eda web podr\u00e1n ubicar el Trabajo Pr\u00e1ctico correspondiente a partir del men\u00fa de la secci\u00f3n Pr\u00e1ctica y luego la numeraci\u00f3n del ejercicio se formar\u00e1 anteponiendo al mismo el valor n\u00famerico del trabajo pr\u00e1ctico. Asi si se informa el ejercicio 15 del Trabajo Pr\u00e1ctico 5, su valor ser\u00e1 3.15","title":"Bienvenidos!"},{"location":"#bienvenidos","text":"","title":"Bienvenidos!"},{"location":"#objetivo","text":"El objetivo de este sitio es brindar una experiencia mas flexible y agradable a los estudiantes en las clases pr\u00e1cticas de la c\u00e1tedra Algoritmos y Estructura de Datos. Aqu\u00ed se podr\u00e1 encontrar el mismo contenido que en la Gu\u00eda de Trabajos Pr\u00e1cticos impresa publicada por la c\u00e1tedra, por lo tanto el uso del sitio no es obligatorio y pueden obtener la Gu\u00eda impresa aqu\u00ed","title":"Objetivo"},{"location":"#numeracion-ejercicios","text":"Durante las clases pr\u00e1cticas los profesores haran referencia a los ejercicios por su numeraci\u00f3n. Para poder ubicar rapidamente el mismo es importante conocer dos cosas Trabajo Pr\u00e1ctico El estudiante tiene que tener claro que trabajo pr\u00e1ctico se est\u00e1 tratando durante el dictado de la asignatura. N\u00famero de ejercicio Dato brindado por el profesor Para poder ubicar el ejercicio en la gu\u00eda impresa deber\u00e1n dirigirse al Trabajo Pr\u00e1ctico correspondiente y luego ubicar el ejercicio por su valor num\u00e9rico Para poder ubicar el ejercicio en la gu\u00eda web podr\u00e1n ubicar el Trabajo Pr\u00e1ctico correspondiente a partir del men\u00fa de la secci\u00f3n Pr\u00e1ctica y luego la numeraci\u00f3n del ejercicio se formar\u00e1 anteponiendo al mismo el valor n\u00famerico del trabajo pr\u00e1ctico. Asi si se informa el ejercicio 15 del Trabajo Pr\u00e1ctico 5, su valor ser\u00e1 3.15","title":"Numeraci\u00f3n Ejercicios"},{"location":"complementarios/1/","text":"1. Datos y Estructuras Elementales \u00b6 Datos Elementales \u00b6 Ejercicio 1.1 \u00b6 La Mutual del personal del Banco, a pedido de un socio canjea un plazo fijo, pag\u00e1ndole el capital inicial. Luego, al cobrarse el plazo fijo, le paga los intereses, descontando los d\u00edas correspondientes y $5 por gastos. Se desea liquidar el pago de la diferencia entre el capital inicial y capital con intereses, sabiendo que el inter\u00e9s es el 5% a 30 d\u00edas y teniendo como datos el capital inicial, capital con intereses y los d\u00edas de anticipo. Ejercicio 1.2 \u00b6 Se desea ingresar dos n\u00fameros X, Y. Hallar la media aritm\u00e9tica y la geom\u00e9trica de ambos valores. Dise\u00f1e un algoritmo que sea capaz de hallar el m\u00e1ximo entre los dos valores. Ejercicio 1.3 \u00b6 Escriba un algoritmo que determine si un valor entero es par o impar. Ejercicio 1.4 \u00b6 Genere un algoritmo que determine el factorial de un n\u00famero dado N. Ejercicio 1.5 \u00b6 Se desea determinar si un estudiante aprob\u00f3 una materia. Para ello se le toman 5 ex\u00e1menes (E1, E2, E3, E4, E5). Se considera aprobada la materia a aquellos alumnos que aprobaron los 5 ex\u00e1menes: deber\u00e1n rendir un examen de complemento aquellos que aprobaron 3 ex\u00e1menes, siempre que uno de estos tres sea el \u00faltimo. Tendr\u00e1n la posibilidad de volver a rendir el \u00faltimo examen aquellos alumnos que no lo aprobaron, pero aprobaron por lo menos el 3ro. y el 4to. Ejercicio 1.6 \u00b6 Las medidas de las tablas de surf, como invento norteamericano que son, se expresan en el sistema m\u00e9trico anglosaj\u00f3n, es decir, en pies y en pulgadas. De esta manera si decimos que nuestra tabla es una 6\u20192\u201d estaremos diciendo que su longitud es de 1,88 m. Escriba un algoritmo que calcule la longitud de una tabla en metros, conociendo la misma en formato anglosaj\u00f3n. Las equivalencias con nuestro sistema m\u00e9trico ser\u00edan las siguientes: 1 pie = 12 plg, 1 plg = 2,54 cm, 1 m = 100cm. Ejercicio 1.7 \u00b6 Se desea obtener una tabla con 5 valores de e^X, usando para ello la siguiente f\u00f3rmula: $e^x = 1 - (x/1)! + (x^2/2)! - (x^3/3)! + ... + (x^{20}/20)!$ Ejercicio 1.8 \u00b6 Se desea realizar el c\u00e1lculo de una serie e^X que se detiene cuando un t\u00e9rmino es menor o igual que 0,000001. Ejercicio 1.9 \u00b6 Realizar un algoritmo que muestre el cambio en billetes de \\$100, \\$50, \\$20, \\$10, \\$5; \\$2 y monedas de \\$1, de un monto ingresado por teclado. Considere que este monto siempre sera entero. Ej: ingresa \u2192 377 muestra \u2192 3 billetes de \\$100, 1 billete de \\$50, 1 billete \\$20, 1 billete \\$5, 1 billete \\$2","title":"1. Datos y Estructuras Elementales"},{"location":"complementarios/1/#1-datos-y-estructuras-elementales","text":"","title":"1. Datos y Estructuras Elementales"},{"location":"complementarios/1/#datos-elementales","text":"","title":"Datos Elementales"},{"location":"complementarios/1/#ejercicio-11","text":"La Mutual del personal del Banco, a pedido de un socio canjea un plazo fijo, pag\u00e1ndole el capital inicial. Luego, al cobrarse el plazo fijo, le paga los intereses, descontando los d\u00edas correspondientes y $5 por gastos. Se desea liquidar el pago de la diferencia entre el capital inicial y capital con intereses, sabiendo que el inter\u00e9s es el 5% a 30 d\u00edas y teniendo como datos el capital inicial, capital con intereses y los d\u00edas de anticipo.","title":"Ejercicio 1.1"},{"location":"complementarios/1/#ejercicio-12","text":"Se desea ingresar dos n\u00fameros X, Y. Hallar la media aritm\u00e9tica y la geom\u00e9trica de ambos valores. Dise\u00f1e un algoritmo que sea capaz de hallar el m\u00e1ximo entre los dos valores.","title":"Ejercicio 1.2"},{"location":"complementarios/1/#ejercicio-13","text":"Escriba un algoritmo que determine si un valor entero es par o impar.","title":"Ejercicio 1.3"},{"location":"complementarios/1/#ejercicio-14","text":"Genere un algoritmo que determine el factorial de un n\u00famero dado N.","title":"Ejercicio 1.4"},{"location":"complementarios/1/#ejercicio-15","text":"Se desea determinar si un estudiante aprob\u00f3 una materia. Para ello se le toman 5 ex\u00e1menes (E1, E2, E3, E4, E5). Se considera aprobada la materia a aquellos alumnos que aprobaron los 5 ex\u00e1menes: deber\u00e1n rendir un examen de complemento aquellos que aprobaron 3 ex\u00e1menes, siempre que uno de estos tres sea el \u00faltimo. Tendr\u00e1n la posibilidad de volver a rendir el \u00faltimo examen aquellos alumnos que no lo aprobaron, pero aprobaron por lo menos el 3ro. y el 4to.","title":"Ejercicio 1.5"},{"location":"complementarios/1/#ejercicio-16","text":"Las medidas de las tablas de surf, como invento norteamericano que son, se expresan en el sistema m\u00e9trico anglosaj\u00f3n, es decir, en pies y en pulgadas. De esta manera si decimos que nuestra tabla es una 6\u20192\u201d estaremos diciendo que su longitud es de 1,88 m. Escriba un algoritmo que calcule la longitud de una tabla en metros, conociendo la misma en formato anglosaj\u00f3n. Las equivalencias con nuestro sistema m\u00e9trico ser\u00edan las siguientes: 1 pie = 12 plg, 1 plg = 2,54 cm, 1 m = 100cm.","title":"Ejercicio 1.6"},{"location":"complementarios/1/#ejercicio-17","text":"Se desea obtener una tabla con 5 valores de e^X, usando para ello la siguiente f\u00f3rmula: $e^x = 1 - (x/1)! + (x^2/2)! - (x^3/3)! + ... + (x^{20}/20)!$","title":"Ejercicio 1.7"},{"location":"complementarios/1/#ejercicio-18","text":"Se desea realizar el c\u00e1lculo de una serie e^X que se detiene cuando un t\u00e9rmino es menor o igual que 0,000001.","title":"Ejercicio 1.8"},{"location":"complementarios/1/#ejercicio-19","text":"Realizar un algoritmo que muestre el cambio en billetes de \\$100, \\$50, \\$20, \\$10, \\$5; \\$2 y monedas de \\$1, de un monto ingresado por teclado. Considere que este monto siempre sera entero. Ej: ingresa \u2192 377 muestra \u2192 3 billetes de \\$100, 1 billete de \\$50, 1 billete \\$20, 1 billete \\$5, 1 billete \\$2","title":"Ejercicio 1.9"},{"location":"complementarios/2.1/","text":"2.1. Secuencias de datos elementales \u00b6 Ejercicio 2.1.1 \u00b6 Dada una secuencia TEXTO construir un algoritmo que cuente e informe por oraci\u00f3n cu\u00e1ntas palabras terminan con la s\u00edlaba \"LA\". Ejercicio 2.1.2 \u00b6 Dada una secuencia de caracteres que contiene un texto compuesto por oraciones, crear una secuencia de salida que contenga s\u00f3lo las palabras que comiencen con la s\u00edlaba \"MA\". Informar para cada oraci\u00f3n cu\u00e1ntas palabras cumplen con la condici\u00f3n. Ejercicio 2.1.3 \u00b6 Dada una secuencia de caracteres que contiene un texto compuesto por oraciones; crear una secuencia de salida que contenga solo las palabras con 4 letras, informar para cada oraci\u00f3n cuantas palabras cumplen con la condici\u00f3n. El fin de cada oraci\u00f3n esta dado por un \".\" Ejercicio 2.1.4 \u00b6 Dada una secuencia de texto de entrada, desarrollar un algoritmo que produzca una secuencia oraci\u00f3n de salida; la que contendr\u00e1 palabras num\u00e9ricas formadas con los d\u00edgitos impares que contenga la palabra correspondiente de entrada . Ej. Si la entrada viniera \"A125EB%\" en la salida deber\u00eda ir \"15\". Al final del proceso informar cu\u00e1l es el promedio de palabras por oraci\u00f3n encontradas en la secuencia de entrada. Ejercicio 2.1.5 \u00b6 Escribir un algoritmo que: dado un fichero de texto que contiene letras y n\u00fameros, permita distinguir palabras de enteros de hasta 5 cifras y desglosarlos en dos secuencias que contengan respectivamente las palabras pares y las impares. Ejercicio 2.1.6 \u00b6 Escribir un algoritmo que permita desglosar una secuencia que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra. Ejercicio 2.1.7 \u00b6 Dada una secuencia texto de entrada, desarrollar un algoritmo que produzca una secuencia oraci\u00f3n de salida; la que contendr\u00e1 palabras num\u00e9ricas formadas con los d\u00edgitos pares que contenga las palabras correspondientes de entrada. Ej.: entrada (q12w34e58) \u2192 salida (248). Al final del proceso informar cual es el promedio de palabras por oraci\u00f3n encontradas en la secuencia de entrada. Ejercicio 2.1.8 \u00b6 Escribir un algoritmo que a partir de una secuencia de palabras dada, genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las longitudes de las palabras que cumplieron tal condici\u00f3n. Por final de proceso se deber\u00e1 informar la cantidad de palabras de ambas secuencias de palabras y la longitud de la palabra m\u00e1s larga que cumpli\u00f3 la condici\u00f3n enunciada. Ejercicio 2.1.9 \u00b6 Escribir un algoritmo que a partir de una secuencia de palabras dada, genere una secuencia de igual tipo conteniendo solo las palabras de la secuencia original que NO comienzan con vocal . Por final de proceso se deber\u00e1 informar la cantidad de palabras de ambas secuencias de palabras y el porcentaje de palabras que no cumplieron con la condici\u00f3n enunciada. Ejercicio 2.1.10 \u00b6 Escribir un algoritmo que permita efectuar la operaci\u00f3n de diferencia entre dos secuencias (ordenadas crecientes), esto es, que genere el conjunto de los elementos no comunes a las dos secuencias. Ejercicio 2.1.11 \u00b6 Escribir un algoritmo que dado dos ficheros de texto (caracter, palabra, oraciones) denominadas TEX1 y TEX2 genere otro fichero oraci\u00f3n, mediante la composici\u00f3n de palabras en posiciones pares dentro de las oraciones del TEX1 y palabras en posiciones impares dentro del TEX2. Al final del proceso emitir los siguientes contadores: Cantidad de palabras del archivo de salida. Promedio de palabras por oraci\u00f3n de TEX1 Y TEX2. Ejercicio 2.1.12 \u00b6 Dada una secuencia de caracteres con datos de personas con el siguiente formato: Nombre | Domicilio | DNI (8 caracteres) Regi\u00f3n (1-2-3) Nombre | Domicilio | DNI (8 caracteres) Regi\u00f3n (1-2-3).......\\*(marca de fin) DNI, Regi\u00f3n y Nombre de la siguiente persona no est\u00e1n separados por ning\u00fan car\u00e1cter, Regi\u00f3n tiene un solo car\u00e1cter. Generar una secuencia de caracteres de salida que contenga todos los DNI que comiencen con d\u00edgito par y pertenezcan a la Regi\u00f3n 1. Al final informar cantidad de personas de cada regi\u00f3n y porcentaje de las mismas sobre el total de personas Ejercicio 2.1.13 \u00b6 Se tiene una secuencia de caracteres que finaliza con el car\u00e1cter \"*\", el problema es que este car\u00e1cter puede aparecer dentro de la secuencia, para poder distinguirlo con el fin de secuencia se utiliza otro s\u00edmbolo especial \"\\\" (car\u00e1cter de escape). Se pide realizar un algoritmo que permita escribir en una secuencia de salida todos los caracteres excepto los de escape, y contar la cantidad de escapes que existen. Ejercicio 2.1.14 \u00b6 Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca una secuencia de salida de caracteres; la que contendr\u00e1 s\u00f3lo los caracteres \u201cnum\u00e9ricos\u201d correspondientes a d\u00edgitos impares encontrados en la secuencia de entrada. Al final del proceso informar total de caracteres \u201cnum\u00e9ricos\u201d (d\u00edgitos) y porcentaje de pares e impares sobre el total de caracteres num\u00e9ricos Ejercicio 2.1.15 \u00b6 Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca dos secuencias de salida de caracteres. La primera secuencia de salida contendr\u00e1 los caracteres num\u00e9ricos pares y la segunda secuencia de salida contendr\u00e1 los caracteres num\u00e9ricos impares. Al final del proceso calcular e informar el porcentaje de caracteres numericos pares e impares sobre el total de caracteres numericos. Ejercicio 2.1.16 \u00b6 Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca dos secuencias de salida de caracteres; en donde la primera contendr\u00e1 todos los caracteres num\u00e9ricos y la segunda los dem\u00e1s. Al final del proceso calcular e informar el porcentaje de caracteres num\u00e9ricos sobre el total. Ejercicio 2.1.17 \u00b6 Escribir un algoritmo que permita desglosar una secuencia de enteros que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra. Ejemplo secuencia de entrada 2, 5, 8, 11, 14, 17, 15, 10, 11, 20, 44, 12, 14, 16, ... Secuencia de salida 1 2, 5, 8, 11, 14, 17, 10, 11, 20, 44, ... Secuencia de salida 2 15, 12, 14, 16, ... Obtener la suma de cada monotonia e informar aquella de mayor valor. Ejercicio 2.1.18 \u00b6 Se dispone de 2 secuencias de caracteres, una contiene caracteres, incluidos espacios y otra contiene caracteres \u201cnum\u00e9ricos\u201d. Se pide crear una nueva secuencia de salida de caracteres donde se copien los caracteres de ambas secuencias en forma alternada, o sea un car\u00e1cter, un d\u00edgito, un car\u00e1cter, un d\u00edgito, etc. Ejemplo: Sec1: Para habilitar la funci\u00f3n de Salas para grupos peque\u00f1os para su uso* Sec2: 13481460918460846161334868461086* Salida: P1a3r4a8 1h4... Analice y responda: Que pasar\u00eda en el caso de que una secuencia de entrada termine antes que la otra? se podr\u00eda cumplir con la consigna? Como modificar\u00eda el algoritmo en el caso de que solicite contar la cantidad de caracteres de cada secuencia y mostrar por pantalla al final del proceso?","title":"2.1. Secuencias de datos elementales"},{"location":"complementarios/2.1/#21-secuencias-de-datos-elementales","text":"","title":"2.1. Secuencias de datos elementales"},{"location":"complementarios/2.1/#ejercicio-211","text":"Dada una secuencia TEXTO construir un algoritmo que cuente e informe por oraci\u00f3n cu\u00e1ntas palabras terminan con la s\u00edlaba \"LA\".","title":"Ejercicio 2.1.1"},{"location":"complementarios/2.1/#ejercicio-212","text":"Dada una secuencia de caracteres que contiene un texto compuesto por oraciones, crear una secuencia de salida que contenga s\u00f3lo las palabras que comiencen con la s\u00edlaba \"MA\". Informar para cada oraci\u00f3n cu\u00e1ntas palabras cumplen con la condici\u00f3n.","title":"Ejercicio 2.1.2"},{"location":"complementarios/2.1/#ejercicio-213","text":"Dada una secuencia de caracteres que contiene un texto compuesto por oraciones; crear una secuencia de salida que contenga solo las palabras con 4 letras, informar para cada oraci\u00f3n cuantas palabras cumplen con la condici\u00f3n. El fin de cada oraci\u00f3n esta dado por un \".\"","title":"Ejercicio 2.1.3"},{"location":"complementarios/2.1/#ejercicio-214","text":"Dada una secuencia de texto de entrada, desarrollar un algoritmo que produzca una secuencia oraci\u00f3n de salida; la que contendr\u00e1 palabras num\u00e9ricas formadas con los d\u00edgitos impares que contenga la palabra correspondiente de entrada . Ej. Si la entrada viniera \"A125EB%\" en la salida deber\u00eda ir \"15\". Al final del proceso informar cu\u00e1l es el promedio de palabras por oraci\u00f3n encontradas en la secuencia de entrada.","title":"Ejercicio 2.1.4"},{"location":"complementarios/2.1/#ejercicio-215","text":"Escribir un algoritmo que: dado un fichero de texto que contiene letras y n\u00fameros, permita distinguir palabras de enteros de hasta 5 cifras y desglosarlos en dos secuencias que contengan respectivamente las palabras pares y las impares.","title":"Ejercicio 2.1.5"},{"location":"complementarios/2.1/#ejercicio-216","text":"Escribir un algoritmo que permita desglosar una secuencia que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra.","title":"Ejercicio 2.1.6"},{"location":"complementarios/2.1/#ejercicio-217","text":"Dada una secuencia texto de entrada, desarrollar un algoritmo que produzca una secuencia oraci\u00f3n de salida; la que contendr\u00e1 palabras num\u00e9ricas formadas con los d\u00edgitos pares que contenga las palabras correspondientes de entrada. Ej.: entrada (q12w34e58) \u2192 salida (248). Al final del proceso informar cual es el promedio de palabras por oraci\u00f3n encontradas en la secuencia de entrada.","title":"Ejercicio 2.1.7"},{"location":"complementarios/2.1/#ejercicio-218","text":"Escribir un algoritmo que a partir de una secuencia de palabras dada, genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las longitudes de las palabras que cumplieron tal condici\u00f3n. Por final de proceso se deber\u00e1 informar la cantidad de palabras de ambas secuencias de palabras y la longitud de la palabra m\u00e1s larga que cumpli\u00f3 la condici\u00f3n enunciada.","title":"Ejercicio 2.1.8"},{"location":"complementarios/2.1/#ejercicio-219","text":"Escribir un algoritmo que a partir de una secuencia de palabras dada, genere una secuencia de igual tipo conteniendo solo las palabras de la secuencia original que NO comienzan con vocal . Por final de proceso se deber\u00e1 informar la cantidad de palabras de ambas secuencias de palabras y el porcentaje de palabras que no cumplieron con la condici\u00f3n enunciada.","title":"Ejercicio 2.1.9"},{"location":"complementarios/2.1/#ejercicio-2110","text":"Escribir un algoritmo que permita efectuar la operaci\u00f3n de diferencia entre dos secuencias (ordenadas crecientes), esto es, que genere el conjunto de los elementos no comunes a las dos secuencias.","title":"Ejercicio 2.1.10"},{"location":"complementarios/2.1/#ejercicio-2111","text":"Escribir un algoritmo que dado dos ficheros de texto (caracter, palabra, oraciones) denominadas TEX1 y TEX2 genere otro fichero oraci\u00f3n, mediante la composici\u00f3n de palabras en posiciones pares dentro de las oraciones del TEX1 y palabras en posiciones impares dentro del TEX2. Al final del proceso emitir los siguientes contadores: Cantidad de palabras del archivo de salida. Promedio de palabras por oraci\u00f3n de TEX1 Y TEX2.","title":"Ejercicio 2.1.11"},{"location":"complementarios/2.1/#ejercicio-2112","text":"Dada una secuencia de caracteres con datos de personas con el siguiente formato: Nombre | Domicilio | DNI (8 caracteres) Regi\u00f3n (1-2-3) Nombre | Domicilio | DNI (8 caracteres) Regi\u00f3n (1-2-3).......\\*(marca de fin) DNI, Regi\u00f3n y Nombre de la siguiente persona no est\u00e1n separados por ning\u00fan car\u00e1cter, Regi\u00f3n tiene un solo car\u00e1cter. Generar una secuencia de caracteres de salida que contenga todos los DNI que comiencen con d\u00edgito par y pertenezcan a la Regi\u00f3n 1. Al final informar cantidad de personas de cada regi\u00f3n y porcentaje de las mismas sobre el total de personas","title":"Ejercicio 2.1.12"},{"location":"complementarios/2.1/#ejercicio-2113","text":"Se tiene una secuencia de caracteres que finaliza con el car\u00e1cter \"*\", el problema es que este car\u00e1cter puede aparecer dentro de la secuencia, para poder distinguirlo con el fin de secuencia se utiliza otro s\u00edmbolo especial \"\\\" (car\u00e1cter de escape). Se pide realizar un algoritmo que permita escribir en una secuencia de salida todos los caracteres excepto los de escape, y contar la cantidad de escapes que existen.","title":"Ejercicio 2.1.13"},{"location":"complementarios/2.1/#ejercicio-2114","text":"Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca una secuencia de salida de caracteres; la que contendr\u00e1 s\u00f3lo los caracteres \u201cnum\u00e9ricos\u201d correspondientes a d\u00edgitos impares encontrados en la secuencia de entrada. Al final del proceso informar total de caracteres \u201cnum\u00e9ricos\u201d (d\u00edgitos) y porcentaje de pares e impares sobre el total de caracteres num\u00e9ricos","title":"Ejercicio 2.1.14"},{"location":"complementarios/2.1/#ejercicio-2115","text":"Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca dos secuencias de salida de caracteres. La primera secuencia de salida contendr\u00e1 los caracteres num\u00e9ricos pares y la segunda secuencia de salida contendr\u00e1 los caracteres num\u00e9ricos impares. Al final del proceso calcular e informar el porcentaje de caracteres numericos pares e impares sobre el total de caracteres numericos.","title":"Ejercicio 2.1.15"},{"location":"complementarios/2.1/#ejercicio-2116","text":"Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca dos secuencias de salida de caracteres; en donde la primera contendr\u00e1 todos los caracteres num\u00e9ricos y la segunda los dem\u00e1s. Al final del proceso calcular e informar el porcentaje de caracteres num\u00e9ricos sobre el total.","title":"Ejercicio 2.1.16"},{"location":"complementarios/2.1/#ejercicio-2117","text":"Escribir un algoritmo que permita desglosar una secuencia de enteros que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra. Ejemplo secuencia de entrada 2, 5, 8, 11, 14, 17, 15, 10, 11, 20, 44, 12, 14, 16, ... Secuencia de salida 1 2, 5, 8, 11, 14, 17, 10, 11, 20, 44, ... Secuencia de salida 2 15, 12, 14, 16, ... Obtener la suma de cada monotonia e informar aquella de mayor valor.","title":"Ejercicio 2.1.17"},{"location":"complementarios/2.1/#ejercicio-2118","text":"Se dispone de 2 secuencias de caracteres, una contiene caracteres, incluidos espacios y otra contiene caracteres \u201cnum\u00e9ricos\u201d. Se pide crear una nueva secuencia de salida de caracteres donde se copien los caracteres de ambas secuencias en forma alternada, o sea un car\u00e1cter, un d\u00edgito, un car\u00e1cter, un d\u00edgito, etc. Ejemplo: Sec1: Para habilitar la funci\u00f3n de Salas para grupos peque\u00f1os para su uso* Sec2: 13481460918460846161334868461086* Salida: P1a3r4a8 1h4... Analice y responda: Que pasar\u00eda en el caso de que una secuencia de entrada termine antes que la otra? se podr\u00eda cumplir con la consigna? Como modificar\u00eda el algoritmo en el caso de que solicite contar la cantidad de caracteres de cada secuencia y mostrar por pantalla al final del proceso?","title":"Ejercicio 2.1.18"},{"location":"complementarios/2.2/","text":"2.2. Archivos Secuenciales \u00b6 Corte de Control \u00b6 Ejercicio 2.2.0 \u00b6 Una empresa dispone de un archivo de registros con los siguientes datos de sus empleados ordenados por planta: Nombre Categor\u00eda Planta La categor\u00eda est\u00e1 codificada del 1 al 4. La f\u00e1brica cuenta con dos plantas A y B. A continuaci\u00f3n se presenta el listado de empleados con su categor\u00eda y lugar de trabajo: Nombre Categoria Planta Nombre Categoria Planta Perez 3 A Cassas 2 B Gutierrez 2 A Portales 2 B Aranda 1 A Morales 3 B Molina 1 A Arce 2 B Salerno 1 A Cortez 1 B Mendez 4 A Milan 4 B Corrales 4 A Davis 1 B Derqui 3 A Diaz 1 B Biondi 4 A Vera 2 B Nogueria 1 A Basualdo 1 B Ejercicio 2.2.1 \u00b6 Una empresa dispone de un archivo de registros con datos de sus empleados Nombre Categor\u00eda El archivo est\u00e1 ordenado por categor\u00eda Obtener el listado con el siguiente dise\u00f1o: Lista del Personal Categoria 1 Aranda Molina Salerno ----- Categoria 2 Gutierrez Cassas Ejercicio 2.2.2 \u00b6 Una empresa dispone de un archivo de registros con datos de sus empleados: Reg Nombre Categor\u00eda Planta Tomar los datos del comienzo del trabajo El archivo est\u00e1 ordenado por categor\u00edas. Imprimir el siguiente Listado: Lista del Personal Categoria 1 Nombre Planta Aranda B Molina A Salerno A ----- ----- Categoria 2 Nombre Planta Gutierrez B Cassas B ----- ----- Ejercicio 2.2.3 \u00b6 El archivo de la empresa est\u00e1 ahora ordenado por planta. Los empleados cobran los siguientes sueldos seg\u00fan la categor\u00eda. \\$1.500 \\$2.000 \\$3.500 \\$5.000 Imprimir el siguiente listado considerando la categor\u00eda de cada empleado: Lista de sueldos Planta A Nombre Sueldo Aranda 1500 Molina 1500 Salerno 5000 ----- ----- Categoria 2 Nombre Sueldo Perez 3500 Gutierrez 2000 Aranda 1500 ----- ----- Ejercicio 2.2.4 \u00b6 El archivo se encuentra ordenado por planta y dentro de cada planta ordenado por categor\u00eda. Se supone en este caso que los sueldos que corresponden a cada categor\u00eda deben ser introducidos como dato por el teclado Planilla de Empleados Planta A Categoria 1 Sueldo: _ ___ Molinari Salerno ----- Categoria 2 Sueldo: _ ___ Arce ----- ----- ----- Planta B Categoria 1 Sueldo: _ ___ Aranda Davis ----- Ejercicio 2.2.5 \u00b6 Una escuela dispone de un archivo con los registros de sus alumnos: Nombre A\u00f1o 1..5 Divisi\u00f3n A..D Nota1 0..10 Nota2 0..10 Nota3 0..10 Estos registros est\u00e1n ordenados en forma decreciente por el A\u00d1O y dentro de cada a\u00f1o est\u00e1n ordenados en forma creciente por la divisi\u00f3n. Obtener el siguiente listado: Lista de Promedios 5to A\u00f1o Division A Nombre Promedio: ------ ------ ------ ------ Division B Nombre Promedio: ------ ------ ------ ------ 4to A\u00f1o Division A Nombre Promedio: ------ ------ ------ ------ Division B Nombre Promedio: ------ ------ ------ ------ ------ ------ ------ Totales y Subtotales \u00b6 Ejercicio 2.2.6 \u00b6 Una empresa dispone de un archivo de registros con los siguientes datos de los pasajeros que volaron en el d\u00eda: Nombre Nro de Vuelo El archivo est\u00e1 ordenado por n\u00b0 de vuelo. Imprimir la cantidad De pasajeros que viajaron en cada vuelo y la cantidad total de pasajeros que viajaron ese d\u00eda por la compa\u00f1\u00eda: Cantidad de Pasajeros Vuelo 067 83 Vuelo 123 123 Vuelo 451 321 ------- ------- ------- ------- Total 1432 Ejercicio 2.2.7 \u00b6 Reconsidere el problema 2.2.1 . Obtener la salida: Cantidad de Empleados Categoria 1 ------- Categoria 2 ------- Categoria 3 ------- Categoria 4 ------- Total ------- Ejercicio 2.2.8 \u00b6 Reconsidere el problema 2.2.3 . La compa\u00f1\u00eda debe enviar a cada planta el dinero para abonar los sueldos. Para ello requiere el siguiente listado Totales de Sueldo por Planta Planta A $ ------- Planta B $ ------- Planta C $ ------- -------- ------- Total $ ------- Ejercicio 2.2.9 \u00b6 Reconsidere el problema 2.2.4 . La compa\u00f1\u00eda desea conocer los totales de los sueldos por planta discriminados por categor\u00eda, para ello se requiere el siguiente listado: Totales de Sueldo por Planta y Categoria Planta A $ ------- Categoria 1 $ ------- Categoria 2 $ ------- -------- ------- Total planta A $ ------- Planta B $ ------- Categoria 1 $ ------- Categoria 2 $ ------- -------- ------- Total planta B $ ------- ------- ------- ------- ------- Total de Sueldos $ ------- Emisi\u00f3n de informes por corte de control \u00b6 Ejercicio 2.2.10 \u00b6 Una empresa con varias sucursales que dispone de un archivo de registros de sus empleados con los siguientes datos: CodSuc CodEmpl HorasDia CodSuc : c\u00f3digo de sucursal CodEmpl : c\u00f3digo de empleado HorasD\u00eda : horas trabajadas en el d\u00eda Teniendo en cuenta que se abona un premio a aquellos empleados que hayan trabajado durante el mes m\u00e1s de 20 d\u00edas y que cumplan simult\u00e1neamente con: No menos de 180 horas trabajadas, el premio ser\u00e1 de $200. M\u00e1s de 170 horas y menos de 180 horas, el premio ser\u00e1 de $150. Realizar el diagrama que leyendo el archivo de datos determine e imprima: C\u00f3digo de sucursal, C\u00f3digo de empleado y premio de los empleados que cumplan con las disposiciones anteriores Importe total de los premios que deben pagar cada sucursal Importe total que la empresa pagar\u00e1. Ejercicio 2.2.11 \u00b6 Una empresa que vende lubricantes registra en un archivo de registros: NroCli NroLubr CantVen PU NroCli : N\u00b0 de Cliente NroLubr : N\u00b0 de Lubricantes CantVen : Cantidad vendida PU : Precio por Unidad Toda est\u00e1 informaci\u00f3n est\u00e1 ordenada por N\u00b0 de Cliente. Determinar e imprimir: El N\u00b0 de Cliente que compr\u00f3 m\u00e1s en pesos Cuantos Clientes compraron m\u00e1s de 100 latas en total Cantidad de latas vendidas de lubricante 31667 entre todos los clientes. Ejercicio 2.2.12 \u00b6 Se realiza una encuesta en distintas provincias. Por cada persona que responde se genera un registro con: C\u00f3digo de la provincia Edad C\u00f3digo de los estudios cursados: 1.Primarios; 2.Secundarios; 3.Universitarios; 4.Terciarios; 5.Ninguno La informaci\u00f3n se ordena por provincia y se graba en un archivo. Se pide: Cantidad de personas con estudios primarios Cantidad de personas con estudios secundarios Para cada provincia: C\u00f3digo de la provincia Total de encuestados C\u00f3digo de la provincia que tuvo mayor cantidad de personas sin ning\u00fan estudio Ejercicio 2.2.13 \u00b6 En una empresa se preparan registros por cada venta individual seg\u00fan se indica: Mes Importe Estos registros, est\u00e1n grabados en un archivo, y est\u00e1n ordenados por mes. Se pide calcular: Total y promedio de ventas de cada mes Promedio anual de ventas Total anual de ventas Imprimir adem\u00e1s la siguiente planilla con los t\u00edtulos que se indican: Empresa NNN Mes Total Promedio Xx Xx Xxx.xx Xx Xx Xxx.xx Promedio Anual Xxx.xx Total Anual Xxx.xx Ejercicio 2.2.14 \u00b6 En una empresa se emiten comprobantes por cada venta que se realiza. Cada comprobante da origen a un registro de un archivo con la siguiente informaci\u00f3n: A\u00f1o Mes D\u00eda Importe A fin de a\u00f1o se procesa el archivo que est\u00e1 ordenado secuencialmente por mes y por d\u00eda. Se pide la planilla siguiente: Empresa NNN A\u00f1o Mes D\u00eda Importe Xx Xx Xxx.xx Xxx.xx Xx Xx Xxx.xx Xxx.xx Total Diario Xxx.xx ----- ----- ----- ----- Total Mensual Xxx.xx ----- ----- ----- ----- Total Anual Xxx.xx Cuando se produce el corte Por d\u00eda: dar el total diario. Por cambio de mes: dar el total mensual. Al final: total diario, mensual y anual. Ejercicio 2.2.15 \u00b6 Un banco tiene varias sucursales, cada una de las cuales tiene un gran n\u00famero de cuentas corrientes. Al final de cada mes se desea conocer el capital existente en: Sucursal CtaCte Importe Codigo Cada cuenta corriente Cada sucursal Total en el banco Para ello se prepara un archivo de registros clasificado por sucursal y por n\u00famero de cuenta corriente: Puede haber m\u00e1s de un registro con el mismo n\u00famero de cuenta corriente. CODIGO puede tomar dos valores: D - dep\u00f3sito, E - Extracci\u00f3n. La planilla que se pide es la siguiente Empresa NNN Sucursal Cuenta Corriente Importe Codigo Xx Xx Xxx.xx Xxx.xx Xx Xx Xxx.xx Xxx.xx Total Cta Cte Xxx.xx ----- ----- ----- ----- Total Sucursal Xxx.xx ----- ----- ----- ----- Total Banco Xxx.xx Ejercicio 2.2.16 \u00b6 Una empresa de venta de accesorios de autom\u00f3viles comercializa 100 art\u00edculos como m\u00e1ximo. Para controlar sus exigencias y sus ventas genera un archivo con la siguiente informaci\u00f3n por cada art\u00edculo: Un primer registro por cada art\u00edculo con: NroArt Cant NroArt : n\u00famero de art\u00edculo Cant : cantidad de unidades en existencia A continuaci\u00f3n un lote de registros, uno por cada venta, con: NroArt Cant NroArt : n\u00famero de art\u00edculo Cant : cantidad de unidades de cada venta. Habr\u00e1, por lo menos, un art\u00edculo con sus ventas. Puede ser que de alg\u00fan art\u00edculo no haya ventas. Imprimir: Saldo final de cada art\u00edculo y su n\u00famero Al final del proceso indicar el N\u00b0 de art\u00edculo Si de alg\u00fan art\u00edculo se vende m\u00e1s de lo que hay en existencia detener el proceso con un texto aclaratorio (sin imprimir el m\u00ednimo) Indicar si se procesaron m\u00e1s de 100 art\u00edculos Calcular el promedio de las cantidades vendidas por art\u00edculo exclusivamente para los art\u00edculos que tienen ventas Ejercicio 2.2.17 \u00b6 Se conocen Las tarifas particular y comercial del KW El consumo m\u00ednimo de ambas categor\u00edas Adem\u00e1s se dispone de un archivo de usuarios en el que cada registro contiene NroZona Nombre Calle Nro TipoUsuario Consumo Los usuarios est\u00e1n ordenados por zona \"P\" o \"C\". Se pide: Listar para cada zona de aquellos usuarios que superen el consumo m\u00ednimo lo siguiente Tipo de Usuario Nombre Calle y N\u00famero Consumo e importe Informar para cada zona Nombre y consumo promedio de los usuarios particulares La direcci\u00f3n del usuario comercial cuyo consumo haya sido el m\u00e1ximo registrado en esa zona. El total facturado y la cant. De usuarios de cada categor\u00eda que abonen el m\u00ednimo. Informar adem\u00e1s al final del listado Zona con mayor cantidad de usuarios comerciales Zona que registra el menor consumo. Ejercicio 2.2.18 \u00b6 Dado un Archivo Maestro secuencial con datos de usuarios de una empresa proveedora de energ\u00eda el\u00e9ctrica con la siguiente estructura: Nro_U Nombre Domicilio Tipo_U a,b,c Cosumo_Prom El cual se actualiza, mes a mes, a partir de las novedades (altas, modificaciones y bajas) almacenadas en otro archivo secuencial de Movimientos. Puede haber m\u00e1s de una novedad para cada usuario y las bajas son f\u00edsicas. Dise\u00f1e el ambiente, con todas las estructuras de datos necesarias para realizar el proceso de actualizaci\u00f3n. Tenga en cuenta que los nombres de variables se ajusten al algoritmo del punto 2. Dado los siguientes algoritmos, marque los errores que encuentre y desarrolle las subacciones usadas en el mismo que est\u00e1n subrayadas. Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (Reg_Mae.Nro_U <> High Value) o (Reg_Mov. Nro_U <> High Value) HACER SI Reg_Mae. Nro_U < Reg_Mov. Nro_U ENTONCES ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO SI (Reg_Mae.Nro_U = Reg_Mov.Nro_U) ENTONCES MIENTRAS (Reg_Mae.Nro_U = Reg_Mov.Nro_U) HACER Proceso_Movim Leer_Movimiento FMIENTRAS Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO Aux.Nro_U:= Reg_Mov.Nro_U Aux.Nombre:= Reg_Mov.Nombre Aux.Domicilio:= Reg_Mov.Domicilio Aux.Tipo_U:= Reg_Mov.Tipo_U Aux.Consumo_Prom:= Reg_Mov.Consumo_prom Leer_Movimiento MIENTRAS (Aux = Reg_Mov.Nro_U) HACER Proceso_Movim FMIENTRAS Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) FSI FSI FMIENTRAS Cerrar(Arch_sal) 2. Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (Reg_Mae.Nro_U <> High_Value) o (Reg_Mov.Nro_U <> High_Value) HACER SI (Reg_Mae.Nro_U < Reg_Mov.Nro_U) ENTONCES Reg_sal:= Reg_mae ESCRIBIR(Arch_sal, Reg_sal) SINO SI (Reg_Mae.Nro_U = Reg_Mov.Nro_U) ENTONCES Aux:= Reg_mae MIENTRAS (Reg_Mae.Nro_U = Reg_Mov) HACER Proceso_Movim FMientras Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO Leer_Movimiento MIENTRAS (Aux.Nro_U = Reg_Mov.Nro_U) HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) FSI FSI Fmientras; Cerrar(Arch_sal) Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS ( ____________ <> High_Value) o (Reg_Mov.Nro_U <> High_Value) HACER SI Reg_Mae.Nro_U < Reg_Mov.Nro_U ENTONCES Reg_sal:= Reg_mae RE-ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO SI Reg_Mae.Nro_U = Reg_Mov. Nro_U ENTONCES Aux : = Reg_mae MIENTRAS Reg_Mae.Nro_U = Reg_Mov.nro_U HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal : = Aux ESCRIBIR(Arch_sal, Reg_sal) SINO Aux.Nro_U : = Reg_Mov.Nro_U Aux.Nombre : = Reg_Mov.Nombre Aux.Domicilio : = Reg_Mov.Domicilio Aux.Tipo_U : = Reg_Mov.Tipo_U Aux.Consumo_Prom : = Reg_Mov.Consumo_prom Leer_Movimiento MIENTRAS Aux = Reg_Mov.Nro_U HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal : = Aux ESCRIBIR(......................, Reg_sal) Leer_Maestro FSI; FSI; Fmientras; Cerrar(Arch_sal) Ejercicio 2.2.18 \u00b6 Suponer que los datos del ejercicio 2.01 se encuentran en 3 secuencias por separado, correspondientes a ISI, IQ y IEM, todas ordenadas por Nro. de Legajo. Generar un algoritmo que permita fusionar estas en una sola secuencia, respetando el orden y la estructura.","title":"2.2. Archivos Secuenciales"},{"location":"complementarios/2.2/#22-archivos-secuenciales","text":"","title":"2.2. Archivos Secuenciales"},{"location":"complementarios/2.2/#corte-de-control","text":"","title":"Corte de Control"},{"location":"complementarios/2.2/#ejercicio-220","text":"Una empresa dispone de un archivo de registros con los siguientes datos de sus empleados ordenados por planta: Nombre Categor\u00eda Planta La categor\u00eda est\u00e1 codificada del 1 al 4. La f\u00e1brica cuenta con dos plantas A y B. A continuaci\u00f3n se presenta el listado de empleados con su categor\u00eda y lugar de trabajo: Nombre Categoria Planta Nombre Categoria Planta Perez 3 A Cassas 2 B Gutierrez 2 A Portales 2 B Aranda 1 A Morales 3 B Molina 1 A Arce 2 B Salerno 1 A Cortez 1 B Mendez 4 A Milan 4 B Corrales 4 A Davis 1 B Derqui 3 A Diaz 1 B Biondi 4 A Vera 2 B Nogueria 1 A Basualdo 1 B","title":"Ejercicio 2.2.0"},{"location":"complementarios/2.2/#ejercicio-221","text":"Una empresa dispone de un archivo de registros con datos de sus empleados Nombre Categor\u00eda El archivo est\u00e1 ordenado por categor\u00eda Obtener el listado con el siguiente dise\u00f1o: Lista del Personal Categoria 1 Aranda Molina Salerno ----- Categoria 2 Gutierrez Cassas","title":"Ejercicio 2.2.1"},{"location":"complementarios/2.2/#ejercicio-222","text":"Una empresa dispone de un archivo de registros con datos de sus empleados: Reg Nombre Categor\u00eda Planta Tomar los datos del comienzo del trabajo El archivo est\u00e1 ordenado por categor\u00edas. Imprimir el siguiente Listado: Lista del Personal Categoria 1 Nombre Planta Aranda B Molina A Salerno A ----- ----- Categoria 2 Nombre Planta Gutierrez B Cassas B ----- -----","title":"Ejercicio 2.2.2"},{"location":"complementarios/2.2/#ejercicio-223","text":"El archivo de la empresa est\u00e1 ahora ordenado por planta. Los empleados cobran los siguientes sueldos seg\u00fan la categor\u00eda. \\$1.500 \\$2.000 \\$3.500 \\$5.000 Imprimir el siguiente listado considerando la categor\u00eda de cada empleado: Lista de sueldos Planta A Nombre Sueldo Aranda 1500 Molina 1500 Salerno 5000 ----- ----- Categoria 2 Nombre Sueldo Perez 3500 Gutierrez 2000 Aranda 1500 ----- -----","title":"Ejercicio 2.2.3"},{"location":"complementarios/2.2/#ejercicio-224","text":"El archivo se encuentra ordenado por planta y dentro de cada planta ordenado por categor\u00eda. Se supone en este caso que los sueldos que corresponden a cada categor\u00eda deben ser introducidos como dato por el teclado Planilla de Empleados Planta A Categoria 1 Sueldo: _ ___ Molinari Salerno ----- Categoria 2 Sueldo: _ ___ Arce ----- ----- ----- Planta B Categoria 1 Sueldo: _ ___ Aranda Davis -----","title":"Ejercicio 2.2.4"},{"location":"complementarios/2.2/#ejercicio-225","text":"Una escuela dispone de un archivo con los registros de sus alumnos: Nombre A\u00f1o 1..5 Divisi\u00f3n A..D Nota1 0..10 Nota2 0..10 Nota3 0..10 Estos registros est\u00e1n ordenados en forma decreciente por el A\u00d1O y dentro de cada a\u00f1o est\u00e1n ordenados en forma creciente por la divisi\u00f3n. Obtener el siguiente listado: Lista de Promedios 5to A\u00f1o Division A Nombre Promedio: ------ ------ ------ ------ Division B Nombre Promedio: ------ ------ ------ ------ 4to A\u00f1o Division A Nombre Promedio: ------ ------ ------ ------ Division B Nombre Promedio: ------ ------ ------ ------ ------ ------ ------","title":"Ejercicio 2.2.5"},{"location":"complementarios/2.2/#totales-y-subtotales","text":"","title":"Totales y Subtotales"},{"location":"complementarios/2.2/#ejercicio-226","text":"Una empresa dispone de un archivo de registros con los siguientes datos de los pasajeros que volaron en el d\u00eda: Nombre Nro de Vuelo El archivo est\u00e1 ordenado por n\u00b0 de vuelo. Imprimir la cantidad De pasajeros que viajaron en cada vuelo y la cantidad total de pasajeros que viajaron ese d\u00eda por la compa\u00f1\u00eda: Cantidad de Pasajeros Vuelo 067 83 Vuelo 123 123 Vuelo 451 321 ------- ------- ------- ------- Total 1432","title":"Ejercicio 2.2.6"},{"location":"complementarios/2.2/#ejercicio-227","text":"Reconsidere el problema 2.2.1 . Obtener la salida: Cantidad de Empleados Categoria 1 ------- Categoria 2 ------- Categoria 3 ------- Categoria 4 ------- Total -------","title":"Ejercicio 2.2.7"},{"location":"complementarios/2.2/#ejercicio-228","text":"Reconsidere el problema 2.2.3 . La compa\u00f1\u00eda debe enviar a cada planta el dinero para abonar los sueldos. Para ello requiere el siguiente listado Totales de Sueldo por Planta Planta A $ ------- Planta B $ ------- Planta C $ ------- -------- ------- Total $ -------","title":"Ejercicio 2.2.8"},{"location":"complementarios/2.2/#ejercicio-229","text":"Reconsidere el problema 2.2.4 . La compa\u00f1\u00eda desea conocer los totales de los sueldos por planta discriminados por categor\u00eda, para ello se requiere el siguiente listado: Totales de Sueldo por Planta y Categoria Planta A $ ------- Categoria 1 $ ------- Categoria 2 $ ------- -------- ------- Total planta A $ ------- Planta B $ ------- Categoria 1 $ ------- Categoria 2 $ ------- -------- ------- Total planta B $ ------- ------- ------- ------- ------- Total de Sueldos $ -------","title":"Ejercicio 2.2.9"},{"location":"complementarios/2.2/#emision-de-informes-por-corte-de-control","text":"","title":"Emisi\u00f3n de informes por corte de control"},{"location":"complementarios/2.2/#ejercicio-2210","text":"Una empresa con varias sucursales que dispone de un archivo de registros de sus empleados con los siguientes datos: CodSuc CodEmpl HorasDia CodSuc : c\u00f3digo de sucursal CodEmpl : c\u00f3digo de empleado HorasD\u00eda : horas trabajadas en el d\u00eda Teniendo en cuenta que se abona un premio a aquellos empleados que hayan trabajado durante el mes m\u00e1s de 20 d\u00edas y que cumplan simult\u00e1neamente con: No menos de 180 horas trabajadas, el premio ser\u00e1 de $200. M\u00e1s de 170 horas y menos de 180 horas, el premio ser\u00e1 de $150. Realizar el diagrama que leyendo el archivo de datos determine e imprima: C\u00f3digo de sucursal, C\u00f3digo de empleado y premio de los empleados que cumplan con las disposiciones anteriores Importe total de los premios que deben pagar cada sucursal Importe total que la empresa pagar\u00e1.","title":"Ejercicio 2.2.10"},{"location":"complementarios/2.2/#ejercicio-2211","text":"Una empresa que vende lubricantes registra en un archivo de registros: NroCli NroLubr CantVen PU NroCli : N\u00b0 de Cliente NroLubr : N\u00b0 de Lubricantes CantVen : Cantidad vendida PU : Precio por Unidad Toda est\u00e1 informaci\u00f3n est\u00e1 ordenada por N\u00b0 de Cliente. Determinar e imprimir: El N\u00b0 de Cliente que compr\u00f3 m\u00e1s en pesos Cuantos Clientes compraron m\u00e1s de 100 latas en total Cantidad de latas vendidas de lubricante 31667 entre todos los clientes.","title":"Ejercicio 2.2.11"},{"location":"complementarios/2.2/#ejercicio-2212","text":"Se realiza una encuesta en distintas provincias. Por cada persona que responde se genera un registro con: C\u00f3digo de la provincia Edad C\u00f3digo de los estudios cursados: 1.Primarios; 2.Secundarios; 3.Universitarios; 4.Terciarios; 5.Ninguno La informaci\u00f3n se ordena por provincia y se graba en un archivo. Se pide: Cantidad de personas con estudios primarios Cantidad de personas con estudios secundarios Para cada provincia: C\u00f3digo de la provincia Total de encuestados C\u00f3digo de la provincia que tuvo mayor cantidad de personas sin ning\u00fan estudio","title":"Ejercicio 2.2.12"},{"location":"complementarios/2.2/#ejercicio-2213","text":"En una empresa se preparan registros por cada venta individual seg\u00fan se indica: Mes Importe Estos registros, est\u00e1n grabados en un archivo, y est\u00e1n ordenados por mes. Se pide calcular: Total y promedio de ventas de cada mes Promedio anual de ventas Total anual de ventas Imprimir adem\u00e1s la siguiente planilla con los t\u00edtulos que se indican: Empresa NNN Mes Total Promedio Xx Xx Xxx.xx Xx Xx Xxx.xx Promedio Anual Xxx.xx Total Anual Xxx.xx","title":"Ejercicio 2.2.13"},{"location":"complementarios/2.2/#ejercicio-2214","text":"En una empresa se emiten comprobantes por cada venta que se realiza. Cada comprobante da origen a un registro de un archivo con la siguiente informaci\u00f3n: A\u00f1o Mes D\u00eda Importe A fin de a\u00f1o se procesa el archivo que est\u00e1 ordenado secuencialmente por mes y por d\u00eda. Se pide la planilla siguiente: Empresa NNN A\u00f1o Mes D\u00eda Importe Xx Xx Xxx.xx Xxx.xx Xx Xx Xxx.xx Xxx.xx Total Diario Xxx.xx ----- ----- ----- ----- Total Mensual Xxx.xx ----- ----- ----- ----- Total Anual Xxx.xx Cuando se produce el corte Por d\u00eda: dar el total diario. Por cambio de mes: dar el total mensual. Al final: total diario, mensual y anual.","title":"Ejercicio 2.2.14"},{"location":"complementarios/2.2/#ejercicio-2215","text":"Un banco tiene varias sucursales, cada una de las cuales tiene un gran n\u00famero de cuentas corrientes. Al final de cada mes se desea conocer el capital existente en: Sucursal CtaCte Importe Codigo Cada cuenta corriente Cada sucursal Total en el banco Para ello se prepara un archivo de registros clasificado por sucursal y por n\u00famero de cuenta corriente: Puede haber m\u00e1s de un registro con el mismo n\u00famero de cuenta corriente. CODIGO puede tomar dos valores: D - dep\u00f3sito, E - Extracci\u00f3n. La planilla que se pide es la siguiente Empresa NNN Sucursal Cuenta Corriente Importe Codigo Xx Xx Xxx.xx Xxx.xx Xx Xx Xxx.xx Xxx.xx Total Cta Cte Xxx.xx ----- ----- ----- ----- Total Sucursal Xxx.xx ----- ----- ----- ----- Total Banco Xxx.xx","title":"Ejercicio 2.2.15"},{"location":"complementarios/2.2/#ejercicio-2216","text":"Una empresa de venta de accesorios de autom\u00f3viles comercializa 100 art\u00edculos como m\u00e1ximo. Para controlar sus exigencias y sus ventas genera un archivo con la siguiente informaci\u00f3n por cada art\u00edculo: Un primer registro por cada art\u00edculo con: NroArt Cant NroArt : n\u00famero de art\u00edculo Cant : cantidad de unidades en existencia A continuaci\u00f3n un lote de registros, uno por cada venta, con: NroArt Cant NroArt : n\u00famero de art\u00edculo Cant : cantidad de unidades de cada venta. Habr\u00e1, por lo menos, un art\u00edculo con sus ventas. Puede ser que de alg\u00fan art\u00edculo no haya ventas. Imprimir: Saldo final de cada art\u00edculo y su n\u00famero Al final del proceso indicar el N\u00b0 de art\u00edculo Si de alg\u00fan art\u00edculo se vende m\u00e1s de lo que hay en existencia detener el proceso con un texto aclaratorio (sin imprimir el m\u00ednimo) Indicar si se procesaron m\u00e1s de 100 art\u00edculos Calcular el promedio de las cantidades vendidas por art\u00edculo exclusivamente para los art\u00edculos que tienen ventas","title":"Ejercicio 2.2.16"},{"location":"complementarios/2.2/#ejercicio-2217","text":"Se conocen Las tarifas particular y comercial del KW El consumo m\u00ednimo de ambas categor\u00edas Adem\u00e1s se dispone de un archivo de usuarios en el que cada registro contiene NroZona Nombre Calle Nro TipoUsuario Consumo Los usuarios est\u00e1n ordenados por zona \"P\" o \"C\". Se pide: Listar para cada zona de aquellos usuarios que superen el consumo m\u00ednimo lo siguiente Tipo de Usuario Nombre Calle y N\u00famero Consumo e importe Informar para cada zona Nombre y consumo promedio de los usuarios particulares La direcci\u00f3n del usuario comercial cuyo consumo haya sido el m\u00e1ximo registrado en esa zona. El total facturado y la cant. De usuarios de cada categor\u00eda que abonen el m\u00ednimo. Informar adem\u00e1s al final del listado Zona con mayor cantidad de usuarios comerciales Zona que registra el menor consumo.","title":"Ejercicio 2.2.17"},{"location":"complementarios/2.2/#ejercicio-2218","text":"Dado un Archivo Maestro secuencial con datos de usuarios de una empresa proveedora de energ\u00eda el\u00e9ctrica con la siguiente estructura: Nro_U Nombre Domicilio Tipo_U a,b,c Cosumo_Prom El cual se actualiza, mes a mes, a partir de las novedades (altas, modificaciones y bajas) almacenadas en otro archivo secuencial de Movimientos. Puede haber m\u00e1s de una novedad para cada usuario y las bajas son f\u00edsicas. Dise\u00f1e el ambiente, con todas las estructuras de datos necesarias para realizar el proceso de actualizaci\u00f3n. Tenga en cuenta que los nombres de variables se ajusten al algoritmo del punto 2. Dado los siguientes algoritmos, marque los errores que encuentre y desarrolle las subacciones usadas en el mismo que est\u00e1n subrayadas. Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (Reg_Mae.Nro_U <> High Value) o (Reg_Mov. Nro_U <> High Value) HACER SI Reg_Mae. Nro_U < Reg_Mov. Nro_U ENTONCES ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO SI (Reg_Mae.Nro_U = Reg_Mov.Nro_U) ENTONCES MIENTRAS (Reg_Mae.Nro_U = Reg_Mov.Nro_U) HACER Proceso_Movim Leer_Movimiento FMIENTRAS Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO Aux.Nro_U:= Reg_Mov.Nro_U Aux.Nombre:= Reg_Mov.Nombre Aux.Domicilio:= Reg_Mov.Domicilio Aux.Tipo_U:= Reg_Mov.Tipo_U Aux.Consumo_Prom:= Reg_Mov.Consumo_prom Leer_Movimiento MIENTRAS (Aux = Reg_Mov.Nro_U) HACER Proceso_Movim FMIENTRAS Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) FSI FSI FMIENTRAS Cerrar(Arch_sal) 2. Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (Reg_Mae.Nro_U <> High_Value) o (Reg_Mov.Nro_U <> High_Value) HACER SI (Reg_Mae.Nro_U < Reg_Mov.Nro_U) ENTONCES Reg_sal:= Reg_mae ESCRIBIR(Arch_sal, Reg_sal) SINO SI (Reg_Mae.Nro_U = Reg_Mov.Nro_U) ENTONCES Aux:= Reg_mae MIENTRAS (Reg_Mae.Nro_U = Reg_Mov) HACER Proceso_Movim FMientras Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO Leer_Movimiento MIENTRAS (Aux.Nro_U = Reg_Mov.Nro_U) HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal:= Aux ESCRIBIR(Arch_sal, Reg_sal) FSI FSI Fmientras; Cerrar(Arch_sal) Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS ( ____________ <> High_Value) o (Reg_Mov.Nro_U <> High_Value) HACER SI Reg_Mae.Nro_U < Reg_Mov.Nro_U ENTONCES Reg_sal:= Reg_mae RE-ESCRIBIR(Arch_sal, Reg_sal) Leer_Maestro SINO SI Reg_Mae.Nro_U = Reg_Mov. Nro_U ENTONCES Aux : = Reg_mae MIENTRAS Reg_Mae.Nro_U = Reg_Mov.nro_U HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal : = Aux ESCRIBIR(Arch_sal, Reg_sal) SINO Aux.Nro_U : = Reg_Mov.Nro_U Aux.Nombre : = Reg_Mov.Nombre Aux.Domicilio : = Reg_Mov.Domicilio Aux.Tipo_U : = Reg_Mov.Tipo_U Aux.Consumo_Prom : = Reg_Mov.Consumo_prom Leer_Movimiento MIENTRAS Aux = Reg_Mov.Nro_U HACER Proceso_Movim Leer_Movimiento FMientras Reg_sal : = Aux ESCRIBIR(......................, Reg_sal) Leer_Maestro FSI; FSI; Fmientras; Cerrar(Arch_sal)","title":"Ejercicio 2.2.18"},{"location":"complementarios/2.2/#ejercicio-2218_1","text":"Suponer que los datos del ejercicio 2.01 se encuentran en 3 secuencias por separado, correspondientes a ISI, IQ y IEM, todas ordenadas por Nro. de Legajo. Generar un algoritmo que permita fusionar estas en una sola secuencia, respetando el orden y la estructura.","title":"Ejercicio 2.2.18"},{"location":"complementarios/3/","text":"3. Tratamiento de Arreglos \u00b6 Ejercicio 3.1 \u00b6 Escribir un algoritmo que tome como entrada 2 arreglos A y B de enteros, de longitud n y devuelva como salida otro vector C, conteniendo los componentes de B para los que los correspondientes de A sean negativos. Adem\u00e1s emitir el vector C e informar el valor y la posici\u00f3n del elemento mayor de C. Ejercicio 3.2 \u00b6 Dado un vector con los siguientes datos de libros: Autor, T\u00edtulo, Cantidad de hojas, en donde un autor puede tener varios libros, determinar cu\u00e1l es el T\u00edtulo del libro con mayor cantidad de hojas, para cada Autor, generando el siguiente listado: Autor T\u00edtulo Cant. de hojas Considerar que el arreglo est\u00e1 ordenado por Autor y posee 50 elementos. Ejercicio 3.3 \u00b6 En el Laboratorio de I.S.I. se desea emitir un listado de los totales de horas ociosas de cada uno de los equipos (son 20 en total), ordenados en forma decreciente. Para ello se tiene la siguiente informaci\u00f3n almacenada en un fichero secuencial: Codigo Equipo Descrip Fecha Falla Cant HS Ociosas AAAA MM DD 1. Considerar que el fichero se encuentra ordenado por c\u00f3digo de equipo. 2. Considerar que el fichero est\u00e1 desordenado. Ejercicio 3.4 \u00b6 Se dispone de una secuencia con datos de alumnos de la Facultad: Nro. legajo, apellido y nombre, domicilio, fecha ingreso, cant. de materias aprobadas, promedio, carrera, edad. Se desea emitir una estad\u00edstica de cantidad de alumnos con m\u00e1s de 20 materias aprobadas, por carreras y grupos de edades, con el siguiente formato: Edades 18 - 25 26 - 30 31 o m\u00e1s Total por Carrera Carreras ISI IQ IEM Totales por Grupos de Edades Se desea emitir una estad\u00edstica de cantidad de alumnos con promedio mayor o igual que 7, por carreras y grupos de edades, con el mismo formato que se us\u00f3 en 4.a. Ejercicio 3.5 \u00b6 Dada una matriz de N x N confeccionar un algoritmo para cargarla de la siguiente forma: Cada $a[i,j] = i + j $ Los elementos de la \u00faltima fila $ a[N,j] = $ Sumatoria de $ a[i,j]$ donde i var\u00eda entre $1...(n-1)$ Los elementos de la \u00faltima columna $a[i,N] = $ Sumatoria de $ a[i,j]$ donde j var\u00eda entre $1...(n-1)$ La posici\u00f3n a[N,N] = Sumatoria de $a[i,j]$ donde $i = j$ Ejemplo: 2 3 4 9 3 4 5 12 2 3 4 9 4 5 6 15 9 12 15 12 Ejercicio 3.6 \u00b6 Se lleva a cabo una encuesta a fin de anticipar los posibles porcen\u00actajes de votos que obtendr\u00e1n cada uno de los 4 partidos pol\u00edticos de mayor peso en las elecciones. Los datos solicitados a los encuestados son: partido al que votara, edad, sexo y partido al que vot\u00f3 en las elecciones anteriores. Las respuestas se tabulan de acuerdo a los si\u00acguientes criterios: Partidos: P1, P2, P3, P4, Otro, En Blanco, Indeciso Edad: 18-25, 26-35, 36-45, 46-55, 56-65, +65 Sexo: Femenino, Masculino Dise\u00f1e un algoritmo que, utilizando un arreglo de 4 dimensiones (partido al que votara, edad, sexo , partido al que vot\u00f3), permita responder a las siguientes consultas: Cantidad de personas de cierta edad que votar\u00e1n a un Partido dado. Cantidad de personas de un sexo dado que votar\u00e1n a un determinado Partido. Cantidad de personas de cierta edad que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Cantidad de personas de un sexo dado que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Ejercicio 3.7 \u00b6 Dise\u00f1e un algoritmo que bas\u00e1ndose en los datos del ejercicio anterior construya los siguientes cuadros: Partido actual/Partido anterior Partido actual/Edad Partido actual/Edad/Sexo Ejercicio 3.8 \u00b6 Con la secuencia de facturas del ejercicio 26, se precisa generar otra secuencia actualizada, a partir de una secuencia de Descuentos a clientes, la cual solamente contiene el N\u00famero correspondiente al cliente, su Raz\u00f3n Social, y Porcentaje de descuento. Dicho porcentaje se fija a trav\u00e9s de una tabla que establece la relaci\u00f3n entre el total (con IVA) de las compras realizadas en el mes, considerado por rangos, y un determinado descuento del que gozar\u00e1 el cliente en el mes siguiente. Se desea adem\u00e1s contar con un listado de los descuentos establecidos para el mes. Construya un algoritmo que satisfaga los requerimientos enunciados; considere que la secuencia de facturas es consistente, es decir no hay facturas de clientes no registrados, pero pueden existir clientes que no hayan efectuado compras en el mes.","title":"3. Tratamiento de Arreglos"},{"location":"complementarios/3/#3-tratamiento-de-arreglos","text":"","title":"3. Tratamiento de Arreglos"},{"location":"complementarios/3/#ejercicio-31","text":"Escribir un algoritmo que tome como entrada 2 arreglos A y B de enteros, de longitud n y devuelva como salida otro vector C, conteniendo los componentes de B para los que los correspondientes de A sean negativos. Adem\u00e1s emitir el vector C e informar el valor y la posici\u00f3n del elemento mayor de C.","title":"Ejercicio 3.1"},{"location":"complementarios/3/#ejercicio-32","text":"Dado un vector con los siguientes datos de libros: Autor, T\u00edtulo, Cantidad de hojas, en donde un autor puede tener varios libros, determinar cu\u00e1l es el T\u00edtulo del libro con mayor cantidad de hojas, para cada Autor, generando el siguiente listado: Autor T\u00edtulo Cant. de hojas Considerar que el arreglo est\u00e1 ordenado por Autor y posee 50 elementos.","title":"Ejercicio 3.2"},{"location":"complementarios/3/#ejercicio-33","text":"En el Laboratorio de I.S.I. se desea emitir un listado de los totales de horas ociosas de cada uno de los equipos (son 20 en total), ordenados en forma decreciente. Para ello se tiene la siguiente informaci\u00f3n almacenada en un fichero secuencial: Codigo Equipo Descrip Fecha Falla Cant HS Ociosas AAAA MM DD 1. Considerar que el fichero se encuentra ordenado por c\u00f3digo de equipo. 2. Considerar que el fichero est\u00e1 desordenado.","title":"Ejercicio 3.3"},{"location":"complementarios/3/#ejercicio-34","text":"Se dispone de una secuencia con datos de alumnos de la Facultad: Nro. legajo, apellido y nombre, domicilio, fecha ingreso, cant. de materias aprobadas, promedio, carrera, edad. Se desea emitir una estad\u00edstica de cantidad de alumnos con m\u00e1s de 20 materias aprobadas, por carreras y grupos de edades, con el siguiente formato: Edades 18 - 25 26 - 30 31 o m\u00e1s Total por Carrera Carreras ISI IQ IEM Totales por Grupos de Edades Se desea emitir una estad\u00edstica de cantidad de alumnos con promedio mayor o igual que 7, por carreras y grupos de edades, con el mismo formato que se us\u00f3 en 4.a.","title":"Ejercicio 3.4"},{"location":"complementarios/3/#ejercicio-35","text":"Dada una matriz de N x N confeccionar un algoritmo para cargarla de la siguiente forma: Cada $a[i,j] = i + j $ Los elementos de la \u00faltima fila $ a[N,j] = $ Sumatoria de $ a[i,j]$ donde i var\u00eda entre $1...(n-1)$ Los elementos de la \u00faltima columna $a[i,N] = $ Sumatoria de $ a[i,j]$ donde j var\u00eda entre $1...(n-1)$ La posici\u00f3n a[N,N] = Sumatoria de $a[i,j]$ donde $i = j$ Ejemplo: 2 3 4 9 3 4 5 12 2 3 4 9 4 5 6 15 9 12 15 12","title":"Ejercicio 3.5"},{"location":"complementarios/3/#ejercicio-36","text":"Se lleva a cabo una encuesta a fin de anticipar los posibles porcen\u00actajes de votos que obtendr\u00e1n cada uno de los 4 partidos pol\u00edticos de mayor peso en las elecciones. Los datos solicitados a los encuestados son: partido al que votara, edad, sexo y partido al que vot\u00f3 en las elecciones anteriores. Las respuestas se tabulan de acuerdo a los si\u00acguientes criterios: Partidos: P1, P2, P3, P4, Otro, En Blanco, Indeciso Edad: 18-25, 26-35, 36-45, 46-55, 56-65, +65 Sexo: Femenino, Masculino Dise\u00f1e un algoritmo que, utilizando un arreglo de 4 dimensiones (partido al que votara, edad, sexo , partido al que vot\u00f3), permita responder a las siguientes consultas: Cantidad de personas de cierta edad que votar\u00e1n a un Partido dado. Cantidad de personas de un sexo dado que votar\u00e1n a un determinado Partido. Cantidad de personas de cierta edad que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Cantidad de personas de un sexo dado que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado.","title":"Ejercicio 3.6"},{"location":"complementarios/3/#ejercicio-37","text":"Dise\u00f1e un algoritmo que bas\u00e1ndose en los datos del ejercicio anterior construya los siguientes cuadros: Partido actual/Partido anterior Partido actual/Edad Partido actual/Edad/Sexo","title":"Ejercicio 3.7"},{"location":"complementarios/3/#ejercicio-38","text":"Con la secuencia de facturas del ejercicio 26, se precisa generar otra secuencia actualizada, a partir de una secuencia de Descuentos a clientes, la cual solamente contiene el N\u00famero correspondiente al cliente, su Raz\u00f3n Social, y Porcentaje de descuento. Dicho porcentaje se fija a trav\u00e9s de una tabla que establece la relaci\u00f3n entre el total (con IVA) de las compras realizadas en el mes, considerado por rangos, y un determinado descuento del que gozar\u00e1 el cliente en el mes siguiente. Se desea adem\u00e1s contar con un listado de los descuentos establecidos para el mes. Construya un algoritmo que satisfaga los requerimientos enunciados; considere que la secuencia de facturas es consistente, es decir no hay facturas de clientes no registrados, pero pueden existir clientes que no hayan efectuado compras en el mes.","title":"Ejercicio 3.8"},{"location":"complementarios/4/","text":"4. Tratamiento de Listas \u00b6 Ejercicio 4.1 \u00b6 Dada la siguiente declaraci\u00f3n y el siguiente esquema: P, Q, R: puntero a NODO NODO: registro DATO: entero PROX: puntero a nodo Fin registro P\u2193 Q\u2193 R\u2193 _______ _______ _______ | 3 | |----\u2192 | 5 | | ----\u2192 | 9 |nil| ------- --------- -------- P Q R Comentario \u00bfQu\u00e9 hacen las siguientes \u00f3rdenes? Considerar que se ejecutan secuencialmente. $ P:= P\u2191. PROX $ $ Q:= P $ $ R:= P\u2191.PROX $ $ P\u2191.DATO:= Q\u2191. DATO $ $ P\u2191.DATO:= (Q\u2191.PROX)\u2191. DATO $ $ R\u2191.PROX:= P $ Ejercicio 4.2 \u00b6 Dada una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos sean m\u00faltiplos de 3, dichos elementos deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento. Ejercicio 4.3 \u00b6 Dada una lista doblemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada alfab\u00e9ticamente por nombre de provincia, se desea generar otra lista simplemente encadenada pero ordenada en orden decreciente por n\u00famero de habitantes analfabetos. Ejercicio 4.4 \u00b6 Dada una lista circular con los datos de los socios de un club: n\u00famero, nombre y condici\u00f3n ( \u00b4A\u00b4= alta, \u00b4B\u00b4= baja); hacer un algoritmo que cree otra lista simplemente encadenada con los socios m\u00faltiplos de 100, que no est\u00e9n dados de baja y eliminar de la lista original los socios dados de baja ( cond = \u00b4B\u00b4). Ejercicio 4.5 \u00b6 Una empresa FARMAC\u00c9UTICA, posee una lista simplemente enlazada de pedidos realizados por sus clientes en el \u00faltimo mes. Se desea generar dos grupos con la siguiente informaci\u00f3n: Los pedidos de los clientes deudores. Los pedidos de los clientes regulares. Para ello se cuenta con un archivo \u201cCLIENTES\u201d indexado por Nro_cliente. Deben tenerse en cuenta las siguientes consideraciones: La lista de entrada est\u00e1 ordenada por Nro_cliente y pueden existir varios pedidos de un mismo cliente. En el caso de recibir un pedido de un cliente que se encuentre dado de baja, debe ser dado de alta autom\u00e1ticamente. El total (Monto $) de Dinero_deuda debe ser actualizado con la suma de los pedidos en Cuenta Corriente. Modificar la condici\u00f3n a Deudor si esa suma es mayor a cero. Formato lista de entrada Nro_cliente Nro pedido Precio pedido TipoPedido (C:Contado, R: Cuenta Corriente) Formato archivo \u201cClientes\u201d Nro_cliente DNI Domicilio Dinero_deuda Deudor (si/no) Baja Formato lista salida Nro_cliente Total pedido Ejercicio 4.6 \u00b6 Usando las operaciones de Lista, escribir un procedimiento AGRUPA (PRIM, ULT: puntero a nodo; A:entero) que, dada una lista doblemente encadenada de enteros L agrupe (sume) elementos de tal manera que en L queden s\u00f3lo elementos mayores o iguales que A. El algoritmo recorre la lista y cuando encuentra un elemento menor empieza a agrupar (sumar) el elemento con los siguientes hasta llegar al valor A o hasta que se acabe la lista (el elemento menor se debe eliminar de la lista.) Por ejemplo si: L = {3,4,2,4,1,4,4,3,2,2,4,1,4,1,4,4,1,4,4,2}, entonces AGRUPA(PRIM, ULT,10) da L = {13,12,13,10,10}. En la lista final NO deben quedar elementos menores que A, salvo, eventualmente, el \u00faltimo. Ejercicio 4.7 \u00b6 La empresa \"Remises Yap\u00fa S.A.\" necesita solucionar el problema de asignaci\u00f3n de veh\u00edculos para sus clientes. La empresa posee 105 autos, y maneja dos colas (estructuras FIFO) una llamada \"No Asignados\" y otra llamada \"Asignados\". En la primera se encuentran todos los autos que no han sido asignados a alg\u00fan cliente en lo que va del d\u00eda y en la segunda los autos que ya han sido asignados. La idea de la cola \u201cAsignados\u201d es manejar en forma equitativa la asignaci\u00f3n de turnos, es decir que cada veh\u00edculo tenga igual oportunidad de obtener un cliente. Los veh\u00edculos se asignan de la siguiente forma: Si existen autos \u201cNo Asignados\u201d, se toma uno de ellos y se lo mueve a la cola de \u201cAsignados\u201d. Si no existen autos \u201cNo Asignados\u201d, se toma uno de la cola de \u201cAsignados\u201d , y se lo coloca al final de la cola. Siempre que se asigna un veh\u00edculo se debe incrementar en uno un campo \u201ccantidad_de_clientes\", a fin de saber cuantos clientes tuvo. Por final de proceso se requiere saber la cantidad total de clientes de ese d\u00eda. Se pide: Confeccionar una subacci\u00f3n que realice la asignaci\u00f3n de veh\u00edculos y el mantenimiento de las colas, usando listas. Ejercicio 4.8 \u00b6 Se dispone de una lista doblemente enlazada con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 10 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista circular, simplemente encadenada, en la cual cada nodo contendr\u00e1 el valor m\u00e1ximo de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l es el promedio de todos los m\u00e1ximos. Ejercicio 4.9 \u00b6 El ciclo de desarrollo de software tradicional, incremental e iterativo cuenta con las siguientes etapas: Captura de Requisitos, An\u00e1lisis, Dise\u00f1o, Desarrollo, Implementaci\u00f3n y Prueba. De la \u00faltima etapa se obtiene un informe que contiene las modificaciones que deben realizarse al software para que cumpla con las funcionalidades para las cuales fue creado inicialmente. Suponga que cuenta con una lista de proyectos de software de los cuales se tiene la siguiente informaci\u00f3n: Proy AN(20) Resp AN(30) Fch_Ini Fecha C_Error N(3) El dato Cant_Errores indica la cantidad de errores que deben solucionarse en cada proyecto. La informaci\u00f3n respecto a cada Error se almacena en una lista de acuerdo al orden de los proyectos y teniendo en cuenta la cantidad que le corresponden a \u00e9ste. Por ejemplo si en la Lista 1 el Proyecto A tiene 3 errores, los 3 primeros nodos de la Lista 2 corresponden al Proyecto A. La informaci\u00f3n que se almacena por Error es la siguiente: Desc_E AN(30) Est AN(1) Est \u2013 M: En Modificaci\u00f3n | O: En Observaci\u00f3n | R: Resuelto Durante el proceso de Control de Proyectos se analiza cada error de cada proyecto, y se le consulta al Responsable el estado del Error (en caso que no haya sido Resuelto) para actualizarlo. El Responsable debe tener la opci\u00f3n de recorrer todos los proyectos, en el orden almacenados, las veces que considere necesario, luego de analizar el \u00faltimo en la lista. Suponiendo que se necesita simular el control de los proyectos, creando dos listas para almacenar por un lado Proyectos y por otro Errores. Y que adem\u00e1s se debe informar al final del proceso qu\u00e9 cantidad de proyectos pasaron el control con todos sus errores resueltos. Se le solicita a ud: Dado el Algoritmo resuelto pero incompleto, analice la propuesta presentada e indique las sentencias incorrectas, encerr\u00e1ndolas con un c\u00edrculo, e indique las modificaciones necesarias para que funcione, complete la l\u00edneas de puntos y agregue las acciones que falten. Desarrolle la acci\u00f3n Control_Proyectos y complete el ambiente si fuera necesario Accion Ej_1 (PRIM: Puntero a Nodo, PRIM2: Puntero a Nodo2) Es Ambiente NODO = Registro Proy: N(30) Resp: AN(30) Fecha: Fecha C_error: N(3) Prox: Puntero a Nodo FinRegistro NODO1 = Registro Desc_E: AN(30) Est: AN(1) Prox: Puntero FinRegistro P, K: Puntero a Nodo Q : Puntero a Nodo1 Cont, cant_proy: N(3) Opc: caracter Subaccion Cargar_Proyectos es Escribir(\u201cIngrese \u2018S\u2019 para empezar o cualquier otro caracter para salir\u201c) Leer(opc) Mientras opc = \u2018S\u2019 hacer \u2026\u2026\u2026\u2026\u2026\u2026\u2026 Leer(*P.Proy, *P.Resp, *P.Fch_Ini, *P.C) Si \u2026\u2026\u2026\u2026\u2026\u2026 Entonces P := *P.prox; PRIM:=P; Sino K := PRIM Mientras (*K.prox <> PRIM) hacer K := *K.prox FinMientras *K.prox := P *P.prox := PRIM Fsi; Cont:= 0 Cargar_Errores Escribir(\u201cIngrese \u2018S\u2019 para seguir cargando proyectos o cualquier otro caracter para salir\u201d) Leer(opc) Fin Mientras Fin Subaccion Subacci\u00f3n Cargar_Errores es Mientras Cont <= *P.C_error hacer NUEVO(Q) Escribir(*Q.Desc_E, *P.Est) Si PRIM2 = NIL Entonces *Q.prox := Nil \u2026\u2026\u2026 := Q Sino *Q.prox := PRIM2 PRIM2 := Q FinSi \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Fin Mientras FinSubaccion Algoritmo Cargar_Proyectos; Control_Proyectos; Escribir(\u2018La cantidad de proyectos con errores resueltos es de\u2019, *P.C_error) Fin Accion","title":"4. Tratamiento de Listas"},{"location":"complementarios/4/#4-tratamiento-de-listas","text":"","title":"4. Tratamiento de Listas"},{"location":"complementarios/4/#ejercicio-41","text":"Dada la siguiente declaraci\u00f3n y el siguiente esquema: P, Q, R: puntero a NODO NODO: registro DATO: entero PROX: puntero a nodo Fin registro P\u2193 Q\u2193 R\u2193 _______ _______ _______ | 3 | |----\u2192 | 5 | | ----\u2192 | 9 |nil| ------- --------- -------- P Q R Comentario \u00bfQu\u00e9 hacen las siguientes \u00f3rdenes? Considerar que se ejecutan secuencialmente. $ P:= P\u2191. PROX $ $ Q:= P $ $ R:= P\u2191.PROX $ $ P\u2191.DATO:= Q\u2191. DATO $ $ P\u2191.DATO:= (Q\u2191.PROX)\u2191. DATO $ $ R\u2191.PROX:= P $","title":"Ejercicio 4.1"},{"location":"complementarios/4/#ejercicio-42","text":"Dada una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos sean m\u00faltiplos de 3, dichos elementos deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento.","title":"Ejercicio 4.2"},{"location":"complementarios/4/#ejercicio-43","text":"Dada una lista doblemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada alfab\u00e9ticamente por nombre de provincia, se desea generar otra lista simplemente encadenada pero ordenada en orden decreciente por n\u00famero de habitantes analfabetos.","title":"Ejercicio 4.3"},{"location":"complementarios/4/#ejercicio-44","text":"Dada una lista circular con los datos de los socios de un club: n\u00famero, nombre y condici\u00f3n ( \u00b4A\u00b4= alta, \u00b4B\u00b4= baja); hacer un algoritmo que cree otra lista simplemente encadenada con los socios m\u00faltiplos de 100, que no est\u00e9n dados de baja y eliminar de la lista original los socios dados de baja ( cond = \u00b4B\u00b4).","title":"Ejercicio 4.4"},{"location":"complementarios/4/#ejercicio-45","text":"Una empresa FARMAC\u00c9UTICA, posee una lista simplemente enlazada de pedidos realizados por sus clientes en el \u00faltimo mes. Se desea generar dos grupos con la siguiente informaci\u00f3n: Los pedidos de los clientes deudores. Los pedidos de los clientes regulares. Para ello se cuenta con un archivo \u201cCLIENTES\u201d indexado por Nro_cliente. Deben tenerse en cuenta las siguientes consideraciones: La lista de entrada est\u00e1 ordenada por Nro_cliente y pueden existir varios pedidos de un mismo cliente. En el caso de recibir un pedido de un cliente que se encuentre dado de baja, debe ser dado de alta autom\u00e1ticamente. El total (Monto $) de Dinero_deuda debe ser actualizado con la suma de los pedidos en Cuenta Corriente. Modificar la condici\u00f3n a Deudor si esa suma es mayor a cero. Formato lista de entrada Nro_cliente Nro pedido Precio pedido TipoPedido (C:Contado, R: Cuenta Corriente) Formato archivo \u201cClientes\u201d Nro_cliente DNI Domicilio Dinero_deuda Deudor (si/no) Baja Formato lista salida Nro_cliente Total pedido","title":"Ejercicio 4.5"},{"location":"complementarios/4/#ejercicio-46","text":"Usando las operaciones de Lista, escribir un procedimiento AGRUPA (PRIM, ULT: puntero a nodo; A:entero) que, dada una lista doblemente encadenada de enteros L agrupe (sume) elementos de tal manera que en L queden s\u00f3lo elementos mayores o iguales que A. El algoritmo recorre la lista y cuando encuentra un elemento menor empieza a agrupar (sumar) el elemento con los siguientes hasta llegar al valor A o hasta que se acabe la lista (el elemento menor se debe eliminar de la lista.) Por ejemplo si: L = {3,4,2,4,1,4,4,3,2,2,4,1,4,1,4,4,1,4,4,2}, entonces AGRUPA(PRIM, ULT,10) da L = {13,12,13,10,10}. En la lista final NO deben quedar elementos menores que A, salvo, eventualmente, el \u00faltimo.","title":"Ejercicio 4.6"},{"location":"complementarios/4/#ejercicio-47","text":"La empresa \"Remises Yap\u00fa S.A.\" necesita solucionar el problema de asignaci\u00f3n de veh\u00edculos para sus clientes. La empresa posee 105 autos, y maneja dos colas (estructuras FIFO) una llamada \"No Asignados\" y otra llamada \"Asignados\". En la primera se encuentran todos los autos que no han sido asignados a alg\u00fan cliente en lo que va del d\u00eda y en la segunda los autos que ya han sido asignados. La idea de la cola \u201cAsignados\u201d es manejar en forma equitativa la asignaci\u00f3n de turnos, es decir que cada veh\u00edculo tenga igual oportunidad de obtener un cliente. Los veh\u00edculos se asignan de la siguiente forma: Si existen autos \u201cNo Asignados\u201d, se toma uno de ellos y se lo mueve a la cola de \u201cAsignados\u201d. Si no existen autos \u201cNo Asignados\u201d, se toma uno de la cola de \u201cAsignados\u201d , y se lo coloca al final de la cola. Siempre que se asigna un veh\u00edculo se debe incrementar en uno un campo \u201ccantidad_de_clientes\", a fin de saber cuantos clientes tuvo. Por final de proceso se requiere saber la cantidad total de clientes de ese d\u00eda. Se pide: Confeccionar una subacci\u00f3n que realice la asignaci\u00f3n de veh\u00edculos y el mantenimiento de las colas, usando listas.","title":"Ejercicio 4.7"},{"location":"complementarios/4/#ejercicio-48","text":"Se dispone de una lista doblemente enlazada con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 10 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista circular, simplemente encadenada, en la cual cada nodo contendr\u00e1 el valor m\u00e1ximo de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l es el promedio de todos los m\u00e1ximos.","title":"Ejercicio 4.8"},{"location":"complementarios/4/#ejercicio-49","text":"El ciclo de desarrollo de software tradicional, incremental e iterativo cuenta con las siguientes etapas: Captura de Requisitos, An\u00e1lisis, Dise\u00f1o, Desarrollo, Implementaci\u00f3n y Prueba. De la \u00faltima etapa se obtiene un informe que contiene las modificaciones que deben realizarse al software para que cumpla con las funcionalidades para las cuales fue creado inicialmente. Suponga que cuenta con una lista de proyectos de software de los cuales se tiene la siguiente informaci\u00f3n: Proy AN(20) Resp AN(30) Fch_Ini Fecha C_Error N(3) El dato Cant_Errores indica la cantidad de errores que deben solucionarse en cada proyecto. La informaci\u00f3n respecto a cada Error se almacena en una lista de acuerdo al orden de los proyectos y teniendo en cuenta la cantidad que le corresponden a \u00e9ste. Por ejemplo si en la Lista 1 el Proyecto A tiene 3 errores, los 3 primeros nodos de la Lista 2 corresponden al Proyecto A. La informaci\u00f3n que se almacena por Error es la siguiente: Desc_E AN(30) Est AN(1) Est \u2013 M: En Modificaci\u00f3n | O: En Observaci\u00f3n | R: Resuelto Durante el proceso de Control de Proyectos se analiza cada error de cada proyecto, y se le consulta al Responsable el estado del Error (en caso que no haya sido Resuelto) para actualizarlo. El Responsable debe tener la opci\u00f3n de recorrer todos los proyectos, en el orden almacenados, las veces que considere necesario, luego de analizar el \u00faltimo en la lista. Suponiendo que se necesita simular el control de los proyectos, creando dos listas para almacenar por un lado Proyectos y por otro Errores. Y que adem\u00e1s se debe informar al final del proceso qu\u00e9 cantidad de proyectos pasaron el control con todos sus errores resueltos. Se le solicita a ud: Dado el Algoritmo resuelto pero incompleto, analice la propuesta presentada e indique las sentencias incorrectas, encerr\u00e1ndolas con un c\u00edrculo, e indique las modificaciones necesarias para que funcione, complete la l\u00edneas de puntos y agregue las acciones que falten. Desarrolle la acci\u00f3n Control_Proyectos y complete el ambiente si fuera necesario Accion Ej_1 (PRIM: Puntero a Nodo, PRIM2: Puntero a Nodo2) Es Ambiente NODO = Registro Proy: N(30) Resp: AN(30) Fecha: Fecha C_error: N(3) Prox: Puntero a Nodo FinRegistro NODO1 = Registro Desc_E: AN(30) Est: AN(1) Prox: Puntero FinRegistro P, K: Puntero a Nodo Q : Puntero a Nodo1 Cont, cant_proy: N(3) Opc: caracter Subaccion Cargar_Proyectos es Escribir(\u201cIngrese \u2018S\u2019 para empezar o cualquier otro caracter para salir\u201c) Leer(opc) Mientras opc = \u2018S\u2019 hacer \u2026\u2026\u2026\u2026\u2026\u2026\u2026 Leer(*P.Proy, *P.Resp, *P.Fch_Ini, *P.C) Si \u2026\u2026\u2026\u2026\u2026\u2026 Entonces P := *P.prox; PRIM:=P; Sino K := PRIM Mientras (*K.prox <> PRIM) hacer K := *K.prox FinMientras *K.prox := P *P.prox := PRIM Fsi; Cont:= 0 Cargar_Errores Escribir(\u201cIngrese \u2018S\u2019 para seguir cargando proyectos o cualquier otro caracter para salir\u201d) Leer(opc) Fin Mientras Fin Subaccion Subacci\u00f3n Cargar_Errores es Mientras Cont <= *P.C_error hacer NUEVO(Q) Escribir(*Q.Desc_E, *P.Est) Si PRIM2 = NIL Entonces *Q.prox := Nil \u2026\u2026\u2026 := Q Sino *Q.prox := PRIM2 PRIM2 := Q FinSi \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 Fin Mientras FinSubaccion Algoritmo Cargar_Proyectos; Control_Proyectos; Escribir(\u2018La cantidad de proyectos con errores resueltos es de\u2019, *P.C_error) Fin Accion","title":"Ejercicio 4.9"},{"location":"practica/0/","text":"0. Algoritmos \u00b6 Ejercicio 0.1.1 \u00b6 Para los siguientes enunciados, identifique la acci\u00f3n principal y determine el estado inicial y final de los objetos sobre los que se act\u00faa. Elaboraci\u00f3n de una torta. Dados los valores iniciales de A y C (23 y 7 respectivamente) y la relaci\u00f3n existente en la f\u00f3rmula A = 2B + C; hallar el valor de B. A partir de una nota de pedidos, un empleado administrativo obtiene la factura de un cliente. Se desea descargar determinado software desde Internet. Se quiere colocar una repisa en la pared, para lo cual se cuenta con un taladro, tacos fisher, tornillos, destornillador, etc. Ejercicio 0.1.2 \u00b6 Para los siguientes enunciados, identifique la acci\u00f3n principal y el objeto sobre el cual se realiza esa acci\u00f3n. Descomponga la acci\u00f3n en acciones m\u00e1s elementales, estableciendo los estados antes y despu\u00e9s de cada una de ellas. Dadas las variables C y D, se desea intercambiar sus valores. Originalmente C vale 18 y D es igual a la mitad de C. En la oficina de correos un empleado controla la correspondencia para colocarle la tarifa. La misma se determina en funci\u00f3n del tipo de carta, del destino y del medio por el cual se la env\u00eda. Los tipos pueden ser \"simple\", \"expresa\" o \"certificada\"; el destino puede ser \"interior\" o \"exterior\"; y los medios pueden ser \"a\u00e9rea\" o \"terrestre\". Realizar los preparativos para mirar una pel\u00edcula de video, teniendo en cuenta que a\u00fan no se la alquil\u00f3. Preparar mate amargo. Una familia decide acampar el fin de semana. Venir a la facultad en colectivo. Ejercicio 0.1.3 \u00b6 Suponga que los estados iniciales de K, Q y DOS son 4, 7 y 10. Especifique cu\u00e1les son los estados iniciales y finales de cada una de las variables despu\u00e9s de las siguientes asignaciones. TOT := K*(DOS-Q) D := DOS/K + Q * 2 E := TRUNC (Q*0,8 - DOS/3) R := REDOND (Q/(3/K)) K := ABSO (K-Q) + 2 * DOS RESULTADO := REDOND (ABSO((K-DOS)/Q)+TRUNC(1,5)) Ejercicio 0.1.4 \u00b6 Indique los estados iniciales, intermedios y finales para cada variable incluida en los siguientes enunciados: 1. A := 1,3; X := 0; Y := 8; Z := A + Y * 2 - X/3; X := X + 2; C := (Z - X) * 1,2; 2. C := 1; C := 0; CA := REDOND (C*2,4 + 1); X := CA + 2; 3. BETA := 3/2; ALFA := BETA * 2; AUXI := ALFA; ALFA := BETA; BETA := AUXI; 4. C := TRUNC (ABSO (4/-2) + 3); B := REDOND (-4,3); B := B + C; 5. ALFA := 2,5; JOTA := 2; BETA := ALFA**JOTA; I := 2 * JOTA; L := JOTA * I; ALFA := ALFA + BETA; 6. NUM := ABSO (-10); A := 3; NUM2 := TRUNC (NUM/A) ** 2 /A; NUM := NUM2 - NUM * 5; B := REDOND (NUM/NUM2); A := (A + B) - 9 * 2 -1; Ejercicio 0.1.5 \u00b6 Dise\u00f1e un algoritmo que permita resolver cada uno de los ejercicios enunciados a continuaci\u00f3n: Leer los datos de un autom\u00f3vil en la forma \u00a8Marca\u00a8 seguida de \u00a8Modelo\u00a8, y escribir en la forma \u00a8Modelo\u00a8 seguido por \u00a8Marca\u00a8. Convertir una suma en d\u00f3lares a PESOS. Se debe prever que el valor de conversi\u00f3n puede cambiar.","title":"0. Algortimos"},{"location":"practica/0/#0-algoritmos","text":"","title":"0. Algoritmos"},{"location":"practica/0/#ejercicio-011","text":"Para los siguientes enunciados, identifique la acci\u00f3n principal y determine el estado inicial y final de los objetos sobre los que se act\u00faa. Elaboraci\u00f3n de una torta. Dados los valores iniciales de A y C (23 y 7 respectivamente) y la relaci\u00f3n existente en la f\u00f3rmula A = 2B + C; hallar el valor de B. A partir de una nota de pedidos, un empleado administrativo obtiene la factura de un cliente. Se desea descargar determinado software desde Internet. Se quiere colocar una repisa en la pared, para lo cual se cuenta con un taladro, tacos fisher, tornillos, destornillador, etc.","title":"Ejercicio 0.1.1"},{"location":"practica/0/#ejercicio-012","text":"Para los siguientes enunciados, identifique la acci\u00f3n principal y el objeto sobre el cual se realiza esa acci\u00f3n. Descomponga la acci\u00f3n en acciones m\u00e1s elementales, estableciendo los estados antes y despu\u00e9s de cada una de ellas. Dadas las variables C y D, se desea intercambiar sus valores. Originalmente C vale 18 y D es igual a la mitad de C. En la oficina de correos un empleado controla la correspondencia para colocarle la tarifa. La misma se determina en funci\u00f3n del tipo de carta, del destino y del medio por el cual se la env\u00eda. Los tipos pueden ser \"simple\", \"expresa\" o \"certificada\"; el destino puede ser \"interior\" o \"exterior\"; y los medios pueden ser \"a\u00e9rea\" o \"terrestre\". Realizar los preparativos para mirar una pel\u00edcula de video, teniendo en cuenta que a\u00fan no se la alquil\u00f3. Preparar mate amargo. Una familia decide acampar el fin de semana. Venir a la facultad en colectivo.","title":"Ejercicio 0.1.2"},{"location":"practica/0/#ejercicio-013","text":"Suponga que los estados iniciales de K, Q y DOS son 4, 7 y 10. Especifique cu\u00e1les son los estados iniciales y finales de cada una de las variables despu\u00e9s de las siguientes asignaciones. TOT := K*(DOS-Q) D := DOS/K + Q * 2 E := TRUNC (Q*0,8 - DOS/3) R := REDOND (Q/(3/K)) K := ABSO (K-Q) + 2 * DOS RESULTADO := REDOND (ABSO((K-DOS)/Q)+TRUNC(1,5))","title":"Ejercicio 0.1.3"},{"location":"practica/0/#ejercicio-014","text":"Indique los estados iniciales, intermedios y finales para cada variable incluida en los siguientes enunciados: 1. A := 1,3; X := 0; Y := 8; Z := A + Y * 2 - X/3; X := X + 2; C := (Z - X) * 1,2; 2. C := 1; C := 0; CA := REDOND (C*2,4 + 1); X := CA + 2; 3. BETA := 3/2; ALFA := BETA * 2; AUXI := ALFA; ALFA := BETA; BETA := AUXI; 4. C := TRUNC (ABSO (4/-2) + 3); B := REDOND (-4,3); B := B + C; 5. ALFA := 2,5; JOTA := 2; BETA := ALFA**JOTA; I := 2 * JOTA; L := JOTA * I; ALFA := ALFA + BETA; 6. NUM := ABSO (-10); A := 3; NUM2 := TRUNC (NUM/A) ** 2 /A; NUM := NUM2 - NUM * 5; B := REDOND (NUM/NUM2); A := (A + B) - 9 * 2 -1;","title":"Ejercicio 0.1.4"},{"location":"practica/0/#ejercicio-015","text":"Dise\u00f1e un algoritmo que permita resolver cada uno de los ejercicios enunciados a continuaci\u00f3n: Leer los datos de un autom\u00f3vil en la forma \u00a8Marca\u00a8 seguida de \u00a8Modelo\u00a8, y escribir en la forma \u00a8Modelo\u00a8 seguido por \u00a8Marca\u00a8. Convertir una suma en d\u00f3lares a PESOS. Se debe prever que el valor de conversi\u00f3n puede cambiar.","title":"Ejercicio 0.1.5"},{"location":"practica/1.1/","text":"1.1. Datos y Estructuras Elementales \u00b6 Datos Elementales \u00b6 Ejercicio 1.1.1 \u00b6 Encuentre el valor de la variable RESULT despu\u00e9s de la ejecuci\u00f3n de las siguientes secuencias de operaciones. Realizar prueba de escritorio. RESULT := 5 + 2**3*2; X := 2; Y := 3; RESULT := X**Y - X; UNO := 10; DOS := 200; RESULT := ABSO (UNO - DOS); UNO := TRUNC ( RESULT / 3 ) - UNO ** 2; RESULT := (DOS - UNO) * 2; VBLE1 := 10; VBLE2 := 3; RESULT := TRUNC (VBLE1 / VBLE2); VBLE1 := VBLE1 + VBLE2; RESULT := ABSO (VBLE2 - VBLE1) ** 2; RESULT := RESULT * 0,1; X := 10; RESULT := 3; TRES := ABSO (RESULT - X) + 2 * RESULT; X := REDOND (TRES / 2); Z := X MOD RESULT; RESULT := (2*(-5) + X)**2; UNO := 1; DOS := 2; TRES := 4; DOS := ABSO (UNO - TRES); RESULT := DOS * TRES; Ejercicio 1.1.2 \u00b6 Indique en cu\u00e1les de los siguientes pares es importante el orden de los enunciados. Es decir, que si se modifica el orden de ellos cambian los resultados (sup\u00f3ngase X<>Y, Y<>Z, Z<>X). Justifique su respuesta. X:=Y Y:=Z X:=Y Z:=X X:=Z X:=Y Z:=Y X:=Y Ejercicio 1.1.3 \u00b6 Complete las siguientes frases: Una .......................... es un acontecimiento producido por un actor, que tiene lugar durante un per\u00edodo de tiempo ........................... y produce un ................................................... bien determinado. El instante de ...................... de la acci\u00f3n se denomina Ti y el instante de ...................................... se denomina Tf. El conjunto de los valores en el instante t dado del desarrollo del acontecimiento se denomina ................................ en el instante t. Ejercicio 1.1.4 \u00b6 Relacionar las columnas Definicion Concepto 1. Conjunto de fen\u00f3menos organizados en el tiempo y concebido como activo. a. Programa 2. Descripci\u00f3n de un esquema de comportamiento. b. Proceso 3. Algoritmo destinado a gobernar una m\u00e1quina real. c. M\u00e1quina 4. Mecanismo capaz de generar acciones que tienen lugar seg\u00fan un esquema determinado. d. Algoritmo Estructuras Secuenciales \u00b6 Ejercicio 1.1.5.1 \u00b6 Escribir un programa que permita calcular el precio de un art\u00edculo para un a\u00f1o dado, considerando que la inflaci\u00f3n es del 4 por 100 anual. La f\u00f3rmula del precio es: P = C * (1 + R) ^ (N - A) C - Precio actual. N - A\u00f1o futuro. R - Tasa de Inflaci\u00f3n. A - A\u00f1o actual. Ejercicio 1.1.5.2 \u00b6 Las ra\u00edces de una ecuaci\u00f3n de segundo grado $ax^2+bx+c=0$ son reales si y s\u00f3lo si el discriminante dado por $(b2-4ac)$ no es negativo. Se desea leer el valor de los coeficientes $a$, $b$, $c$ e imprimir el resultado del discriminante. Realizar prueba de escritorio. Ejercicio 1.1.5.3 \u00b6 Se desea comprar una PC y una impresora. Calcular el precio total: el cual est\u00e1 dado por la suma de los precios de costos, los porcentajes de ganancia del vendedor y un 21% de IVA. Sup\u00f3ngase una ganancia del vendedor del 12% por la PC y 7% por la impresora. Se leen los costos y se imprimen el precio total de ventas. Ejercicio 1.1.5.4 \u00b6 Se desea calcular la superficie de un trapecio, para la cual se ingresa la longitud de ambas bases y la altura. En base a la f\u00f3rmula: $$S = \\frac{(B_{may} + B_{men}) \\times h}{2}$$ Finalizando el proceso, emitir dicha superficie y los valores ingresados. Ejercicio 1.1.5.5 \u00b6 Se desea calcular el valor de la secci\u00f3n ($S$) de un conductor, la cual se determina en funci\u00f3n de la corriente el\u00e9ctrica $I$ y de la conductividad $C$ del material ($C=I/S$). Adem\u00e1s, a la secci\u00f3n as\u00ed obtenida se le incrementa un 25% por razones de seguridad. Ejercicio 1.1.5.6 \u00b6 Realizar un programa que lea dos n\u00famero complejos, $(a,b)$ y $(c,d)$, y calcule su producto: $$(a,b) * (c,d) = (ac - db, ad + bc)$$ Ejercicio 1.1.5.7 \u00b6 Escriba un algoritmo que halle la media geom\u00e9trica de tres valores $X$, $Y$, $Z$. Este debe emitir los tres valores por separado y luego el valor medio. La media geom\u00e9trica es igual a $(X \\times Y \\times Z)/3$ Estructuras condicionales y repetitivas \u00b6 Ejercicio 1.1.6 \u00b6 Escriba un algoritmo que permita ingresar 3 valores num\u00e9ricos y determine cu\u00e1l es el mayor, el medio y el menor. (era el 3 de los complementarios) Ejercicio 1.1.7 \u00b6 Escriba un algoritmo que acepte dos n\u00fameros, calcule la suma e imprima el mensaje de acuerdo al resultado obtenido. Suma <= 50 Suma > 50 y <= 100 Suma > 100 y <= 200 Suma > 200 Ejercicio 1.1.8 \u00b6 Escriba un algoritmo que permita conocer la edad de una persona, con solo ingresar la fecha de nacimiento y la fecha actual, ambas en el formato: DIA, MES, A\u00d1O Ejercicio 1.1.9 \u00b6 Una persona decide realizar un viaje a Europa, para lo cual necesita una determinada cantidad de euros. La persona tiene ahorrada una cierta suma en d\u00f3lares y desea saber si es suficiente y, en caso de haber diferencia (de m\u00e1s o de menos) a cuantos pesos equivale. Realice un algoritmo que solucione el problema, para lo cual deber\u00e1 prever que se ingresen las equivalencias de monedas que considere necesarias (por ejemplo la cotizacion en pesos de d\u00f3lar y/o del euro, o a cuantos euros equivale un d\u00f3lar). Ejercicio 1.1.10 \u00b6 Dados dos n\u00fameros enteros A y B generar un algoritmo que permita determinar si A es divisor de B o B es divisor de A. Ejercicio 1.1.11 \u00b6 Dado un a\u00f1o ingresado por el usuario, emitir el mensaje 'ACTUAL' si corresponde al a\u00f1o en curso, 'PASADO' si es menor y 'FUTURO' si es mayor. Ejercicio 1.1.12 \u00b6 Escriba un algoritmo que acepte un n\u00famero entero mayor a 100 y menor a 1000, y muestre como est\u00e1 compuesto (unidades, decenas y centenas) y si es m\u00faltiplo de 3 (Recordar: todo n\u00famero cuya suma de sus d\u00edgitos sea m\u00faltiplo de 3, lo es tambi\u00e9n). Ejercicio 1.1.13 \u00b6 criba un algoritmo que acepte un n\u00famero entero mayor a 100 y menor a 1000 que representa una suma de dinero e indique cuantos billetes de cada denominaci\u00f3n necesita, suponiendo que solo existen billetes de 100, 10 y 1 peso. Ejercicio 1.1.14 \u00b6 En un experimento se obtuvieron un conjunto de pares de valores (S, V) y se requiere que desarrolle un programa que determine e imprima: Cuantos pares (S, V) tienen el mismo valor de S que el primer par (S, V) de la lista. Primer valor de S mayor que V En cuantos pares (S, V) se cumple que S es el doble de V Productoria de los valores se S no nulos, donde V es nulo Ejercicio 1.1.15 \u00b6 Hacer un algoritmo que calcule la altura aproximada de un edificio en pies, ingresando como dato la cantidad de pisos del mismo y la altura promedio de cada piso, en metros. (1 m = 3.28 pies) Modifique el algoritmo del punto 1. para que permita calcular la altura de 50 edificios. Modifique el algoritmo del punto 1. para que permita calcular la altura de una cantidad indeterminada de edificios. Prevea una condici\u00f3n de fin. Ejercicio 1.1.16 \u00b6 Dise\u00f1e un algoritmo que obtenga el porcentaje de alumnos de ISI, IQ e IEM, sobre el total de egresados de la UTN-FRRe de un a\u00f1o. Modifique el algoritmo del punto 1. para que permita obtener e informar los mismos porcentajes pero para varias Facultades y al final emitir el total de alumnos por carrera y total general. Ejercicio 1.1.17 \u00b6 Elabore un algoritmo que calcule el producto de dos enteros A y B empleando s\u00f3lo la operaci\u00f3n suma. Ejercicio 1.1.18 \u00b6 Elabore un algoritmo que calcule el cociente de dos enteros F y G y el Resto de la operaci\u00f3n, empleando s\u00f3lo las operaciones suma y diferencia. Ejercicio 1.1.19 \u00b6 Escribir un algoritmo que ingrese una variable V y emita el valor de \u00e9sta, su cuadrado y su cubo. Ejercicio 1.1.20 \u00b6 Teniendo en cuenta el ejercicio anterior, realizar un incremento de la variable V en forma constante y creciente recalculando los dem\u00e1s valores 10 veces. Por ejemplo V=2 V V2 V3 2 4 8 3 9 27 .... .... .... 12 144 1728 Ejercicio 1.1.21 \u00b6 Repita el ejercicio anterior con un c\u00e1lculo de n veces, con n > 1. Por final emitir la suma de los cuadrados de V. Ejercicio 1.1.22 \u00b6 Escriba un algoritmo que determine si un n\u00famero es primo. Ejercicio 1.1.23 \u00b6 Escriba un algoritmo para calcular cada rengl\u00f3n de una factura (valor unitario * cantidad vendida) y el total de la misma, suponiendo que el n\u00famero de renglones es variable. Emitir un mensaje de error si el valor unitario es <= 0. Realizar la prueba de escritorio con los siguientes valores: Cantidad de renglones: 4 Valor Unitario Cantidad Vendida 2 10 1 25 3 15 2 8.5 Ejercicio 1.1.24 \u00b6 Escribir un algoritmo que, dado un importe dinero, permia calcular e informar cuanto corresponde pagar por un impuesto, en cuantas cuotas y el valor de las mismas. Tener en cuenta los siguientes datos: IMPUESTO = 10% del importe dado. Los importes mayores que \\$500 y menor o igual que $1000 se pagan en dos cuotas. Los mayores de $1000 en tres cuotas. El algoritmo debe permitir tratar varios importes finalizando cuando se ingresa 9999 como importe. Ejercicio 1.1.25 \u00b6 Elabore un algoritmo para calcular los primeros 50 n\u00fameros de FIBONACCI, sabiendo que dichos n\u00fameros cumplen con lo siguiente: $$A_0=0, A_1=1, A_2=A_0+A_1, ..., A_n=A_{(n-1)}+A_{(n-2)}$$ Ejercicio 1.1.26 \u00b6 Generar un algoritmo para imprimir las coordenadas $(X,Y)$ de una funci\u00f3n cuadr\u00e1tica, de la forma: $Y = aX^2+bX+c$, haciendo variar $X$ en el intervalo $[20, -20]$ con un decremento de 2. Ejercicio 1.1.27 \u00b6 Repita el ejercicio anterior de modo que sea posible estudiar varias funciones, indicando que se desea terminar al ingresar 9999 para el t\u00e9rmino cuadr\u00e1tico. Ejercicio 1.1.28 \u00b6 Construya un algoritmo capaz de encontrar todas las cifras de tres d\u00edgitos que cumplan con la condici\u00f3n de que la suma de los cubos de sus d\u00edgitos sea igual al n\u00famero que la cifra representa. Ejercicio 1.1.29 \u00b6 Escriba un algoritmo para imprimir los n\u00fameros primos menores a un valor dado n. Ejercicio 1.1.30 \u00b6 Escriba un algoritmo para resolver el siguiente problema: Una empresa de transportes desea conocer el sueldo de sus 100 choferes. Estos se calculan teniendo en cuenta la categor\u00eda (1 o 2) y la asistencia (perfecta: si o no). El sueldo se obtiene sumando el sueldo b\u00e1sico, m\u00e1s el 2% de antig\u00fcedad por cada a\u00f1o trabajado y \\$200 de premio por asistencia. El sueldo b\u00e1sico es de \\$700 para choferes de categor\u00eda 1 y de \\$500.- para los de categor\u00eda 2. Ejercicio 1.1.31 \u00b6 Una f\u00e1brica textil produce telas de dos calidades distintas (primera y segunda) y de dos materiales distintos (seda y algod\u00f3n). Generar un algoritmo que calcule el peso de varias piezas de tela, el cual est\u00e1 dado por la suma del peso neto, m\u00e1s un porcentaje por el apresto, m\u00e1s el peso del n\u00facleo de cart\u00f3n. Para realizar el c\u00e1lculo, tener en cuenta la siguiente informaci\u00f3n, para cada pieza: El peso del m2 y la longitud de cada pieza. Al peso neto de la tela hay que sumarle un porcentaje por cada pieza, debido al apresto, el cual es del 2% para las telas de seda y del 7% para las de algod\u00f3n. Tambi\u00e9n se debe considerar el n\u00facleo de cart\u00f3n, que es de 400 gr. para los rollos de telas de primera y de 300 gr. en los de segunda. Finalizar cuando la variable FIN sea igual a 'SI'. Ejercicio 1.1.32 \u00b6 La fecha del domingo de Pascua corresponde al primer domingo despu\u00e9s de la primera luna llena que sigue al equinoccio de primavera. La secuencia de c\u00e1lculos que permite conocer esta fecha es: A = anio mod 19 B = anio mod 4 C = anio mod 7 D = ( 19 * A + 24 ) mod 30 E = ( 2 * B + 4 * C + 6 * D + 5 ) mod 7 N = ( 22 + D + E ) Donde N indica el n\u00famero del d\u00eda del mes de marzo (o abril si N es superior a 31) correpondiente al domingo de Pascua. Realizar un algoritmo que determine esta fecha para los a\u00f1os comprendidos entre 1990 y 2010 Ejercicio 1.1.33 \u00b6 Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 8 ... N 4 6 8 10 ... N 6 8 10 12 ... N .... .... N Ejercicio 1.1.34 \u00b6 Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 ............ N 2 4 6 ........ N-2 2 4 6 ... N-4 ........... 2 4 6 2 4 2 Ejercicio 1.1.35 \u00b6 Escriba un algoritmo que acepte un n\u00famero entero que representa una suma de dinero e indique cuantos billetes de cada denominaci\u00f3n necesita, suponiendo que solo existen billetes de 500, 100, 50, 20, 10, 5 y 1 peso. Ejercicio 1.1.36 \u00b6 Todo n\u00famero cuya suma de sus d\u00edgitos sea m\u00faltiplo de 3 lo es tambi\u00e9n. Ej: 117 \u2192 1+1+7 = 9 que es m\u00faltiplo de 3 , entonces 117 es m\u00faltiplo de 3 Realizar un algoritmo que determine si un n\u00famero es m\u00faltiplo de 3 en funci\u00f3n de la afirmaci\u00f3n antes realizada","title":"1.1. Datos y Estructuras"},{"location":"practica/1.1/#11-datos-y-estructuras-elementales","text":"","title":"1.1. Datos y Estructuras Elementales"},{"location":"practica/1.1/#datos-elementales","text":"","title":"Datos Elementales"},{"location":"practica/1.1/#ejercicio-111","text":"Encuentre el valor de la variable RESULT despu\u00e9s de la ejecuci\u00f3n de las siguientes secuencias de operaciones. Realizar prueba de escritorio. RESULT := 5 + 2**3*2; X := 2; Y := 3; RESULT := X**Y - X; UNO := 10; DOS := 200; RESULT := ABSO (UNO - DOS); UNO := TRUNC ( RESULT / 3 ) - UNO ** 2; RESULT := (DOS - UNO) * 2; VBLE1 := 10; VBLE2 := 3; RESULT := TRUNC (VBLE1 / VBLE2); VBLE1 := VBLE1 + VBLE2; RESULT := ABSO (VBLE2 - VBLE1) ** 2; RESULT := RESULT * 0,1; X := 10; RESULT := 3; TRES := ABSO (RESULT - X) + 2 * RESULT; X := REDOND (TRES / 2); Z := X MOD RESULT; RESULT := (2*(-5) + X)**2; UNO := 1; DOS := 2; TRES := 4; DOS := ABSO (UNO - TRES); RESULT := DOS * TRES;","title":"Ejercicio 1.1.1"},{"location":"practica/1.1/#ejercicio-112","text":"Indique en cu\u00e1les de los siguientes pares es importante el orden de los enunciados. Es decir, que si se modifica el orden de ellos cambian los resultados (sup\u00f3ngase X<>Y, Y<>Z, Z<>X). Justifique su respuesta. X:=Y Y:=Z X:=Y Z:=X X:=Z X:=Y Z:=Y X:=Y","title":"Ejercicio 1.1.2"},{"location":"practica/1.1/#ejercicio-113","text":"Complete las siguientes frases: Una .......................... es un acontecimiento producido por un actor, que tiene lugar durante un per\u00edodo de tiempo ........................... y produce un ................................................... bien determinado. El instante de ...................... de la acci\u00f3n se denomina Ti y el instante de ...................................... se denomina Tf. El conjunto de los valores en el instante t dado del desarrollo del acontecimiento se denomina ................................ en el instante t.","title":"Ejercicio 1.1.3"},{"location":"practica/1.1/#ejercicio-114","text":"Relacionar las columnas Definicion Concepto 1. Conjunto de fen\u00f3menos organizados en el tiempo y concebido como activo. a. Programa 2. Descripci\u00f3n de un esquema de comportamiento. b. Proceso 3. Algoritmo destinado a gobernar una m\u00e1quina real. c. M\u00e1quina 4. Mecanismo capaz de generar acciones que tienen lugar seg\u00fan un esquema determinado. d. Algoritmo","title":"Ejercicio 1.1.4"},{"location":"practica/1.1/#estructuras-secuenciales","text":"","title":"Estructuras Secuenciales"},{"location":"practica/1.1/#ejercicio-1151","text":"Escribir un programa que permita calcular el precio de un art\u00edculo para un a\u00f1o dado, considerando que la inflaci\u00f3n es del 4 por 100 anual. La f\u00f3rmula del precio es: P = C * (1 + R) ^ (N - A) C - Precio actual. N - A\u00f1o futuro. R - Tasa de Inflaci\u00f3n. A - A\u00f1o actual.","title":"Ejercicio 1.1.5.1"},{"location":"practica/1.1/#ejercicio-1152","text":"Las ra\u00edces de una ecuaci\u00f3n de segundo grado $ax^2+bx+c=0$ son reales si y s\u00f3lo si el discriminante dado por $(b2-4ac)$ no es negativo. Se desea leer el valor de los coeficientes $a$, $b$, $c$ e imprimir el resultado del discriminante. Realizar prueba de escritorio.","title":"Ejercicio 1.1.5.2"},{"location":"practica/1.1/#ejercicio-1153","text":"Se desea comprar una PC y una impresora. Calcular el precio total: el cual est\u00e1 dado por la suma de los precios de costos, los porcentajes de ganancia del vendedor y un 21% de IVA. Sup\u00f3ngase una ganancia del vendedor del 12% por la PC y 7% por la impresora. Se leen los costos y se imprimen el precio total de ventas.","title":"Ejercicio 1.1.5.3"},{"location":"practica/1.1/#ejercicio-1154","text":"Se desea calcular la superficie de un trapecio, para la cual se ingresa la longitud de ambas bases y la altura. En base a la f\u00f3rmula: $$S = \\frac{(B_{may} + B_{men}) \\times h}{2}$$ Finalizando el proceso, emitir dicha superficie y los valores ingresados.","title":"Ejercicio 1.1.5.4"},{"location":"practica/1.1/#ejercicio-1155","text":"Se desea calcular el valor de la secci\u00f3n ($S$) de un conductor, la cual se determina en funci\u00f3n de la corriente el\u00e9ctrica $I$ y de la conductividad $C$ del material ($C=I/S$). Adem\u00e1s, a la secci\u00f3n as\u00ed obtenida se le incrementa un 25% por razones de seguridad.","title":"Ejercicio 1.1.5.5"},{"location":"practica/1.1/#ejercicio-1156","text":"Realizar un programa que lea dos n\u00famero complejos, $(a,b)$ y $(c,d)$, y calcule su producto: $$(a,b) * (c,d) = (ac - db, ad + bc)$$","title":"Ejercicio 1.1.5.6"},{"location":"practica/1.1/#ejercicio-1157","text":"Escriba un algoritmo que halle la media geom\u00e9trica de tres valores $X$, $Y$, $Z$. Este debe emitir los tres valores por separado y luego el valor medio. La media geom\u00e9trica es igual a $(X \\times Y \\times Z)/3$","title":"Ejercicio 1.1.5.7"},{"location":"practica/1.1/#estructuras-condicionales-y-repetitivas","text":"","title":"Estructuras condicionales y repetitivas"},{"location":"practica/1.1/#ejercicio-116","text":"Escriba un algoritmo que permita ingresar 3 valores num\u00e9ricos y determine cu\u00e1l es el mayor, el medio y el menor. (era el 3 de los complementarios)","title":"Ejercicio 1.1.6"},{"location":"practica/1.1/#ejercicio-117","text":"Escriba un algoritmo que acepte dos n\u00fameros, calcule la suma e imprima el mensaje de acuerdo al resultado obtenido. Suma <= 50 Suma > 50 y <= 100 Suma > 100 y <= 200 Suma > 200","title":"Ejercicio 1.1.7"},{"location":"practica/1.1/#ejercicio-118","text":"Escriba un algoritmo que permita conocer la edad de una persona, con solo ingresar la fecha de nacimiento y la fecha actual, ambas en el formato: DIA, MES, A\u00d1O","title":"Ejercicio 1.1.8"},{"location":"practica/1.1/#ejercicio-119","text":"Una persona decide realizar un viaje a Europa, para lo cual necesita una determinada cantidad de euros. La persona tiene ahorrada una cierta suma en d\u00f3lares y desea saber si es suficiente y, en caso de haber diferencia (de m\u00e1s o de menos) a cuantos pesos equivale. Realice un algoritmo que solucione el problema, para lo cual deber\u00e1 prever que se ingresen las equivalencias de monedas que considere necesarias (por ejemplo la cotizacion en pesos de d\u00f3lar y/o del euro, o a cuantos euros equivale un d\u00f3lar).","title":"Ejercicio 1.1.9"},{"location":"practica/1.1/#ejercicio-1110","text":"Dados dos n\u00fameros enteros A y B generar un algoritmo que permita determinar si A es divisor de B o B es divisor de A.","title":"Ejercicio 1.1.10"},{"location":"practica/1.1/#ejercicio-1111","text":"Dado un a\u00f1o ingresado por el usuario, emitir el mensaje 'ACTUAL' si corresponde al a\u00f1o en curso, 'PASADO' si es menor y 'FUTURO' si es mayor.","title":"Ejercicio 1.1.11"},{"location":"practica/1.1/#ejercicio-1112","text":"Escriba un algoritmo que acepte un n\u00famero entero mayor a 100 y menor a 1000, y muestre como est\u00e1 compuesto (unidades, decenas y centenas) y si es m\u00faltiplo de 3 (Recordar: todo n\u00famero cuya suma de sus d\u00edgitos sea m\u00faltiplo de 3, lo es tambi\u00e9n).","title":"Ejercicio 1.1.12"},{"location":"practica/1.1/#ejercicio-1113","text":"criba un algoritmo que acepte un n\u00famero entero mayor a 100 y menor a 1000 que representa una suma de dinero e indique cuantos billetes de cada denominaci\u00f3n necesita, suponiendo que solo existen billetes de 100, 10 y 1 peso.","title":"Ejercicio 1.1.13"},{"location":"practica/1.1/#ejercicio-1114","text":"En un experimento se obtuvieron un conjunto de pares de valores (S, V) y se requiere que desarrolle un programa que determine e imprima: Cuantos pares (S, V) tienen el mismo valor de S que el primer par (S, V) de la lista. Primer valor de S mayor que V En cuantos pares (S, V) se cumple que S es el doble de V Productoria de los valores se S no nulos, donde V es nulo","title":"Ejercicio 1.1.14"},{"location":"practica/1.1/#ejercicio-1115","text":"Hacer un algoritmo que calcule la altura aproximada de un edificio en pies, ingresando como dato la cantidad de pisos del mismo y la altura promedio de cada piso, en metros. (1 m = 3.28 pies) Modifique el algoritmo del punto 1. para que permita calcular la altura de 50 edificios. Modifique el algoritmo del punto 1. para que permita calcular la altura de una cantidad indeterminada de edificios. Prevea una condici\u00f3n de fin.","title":"Ejercicio 1.1.15"},{"location":"practica/1.1/#ejercicio-1116","text":"Dise\u00f1e un algoritmo que obtenga el porcentaje de alumnos de ISI, IQ e IEM, sobre el total de egresados de la UTN-FRRe de un a\u00f1o. Modifique el algoritmo del punto 1. para que permita obtener e informar los mismos porcentajes pero para varias Facultades y al final emitir el total de alumnos por carrera y total general.","title":"Ejercicio 1.1.16"},{"location":"practica/1.1/#ejercicio-1117","text":"Elabore un algoritmo que calcule el producto de dos enteros A y B empleando s\u00f3lo la operaci\u00f3n suma.","title":"Ejercicio 1.1.17"},{"location":"practica/1.1/#ejercicio-1118","text":"Elabore un algoritmo que calcule el cociente de dos enteros F y G y el Resto de la operaci\u00f3n, empleando s\u00f3lo las operaciones suma y diferencia.","title":"Ejercicio 1.1.18"},{"location":"practica/1.1/#ejercicio-1119","text":"Escribir un algoritmo que ingrese una variable V y emita el valor de \u00e9sta, su cuadrado y su cubo.","title":"Ejercicio 1.1.19"},{"location":"practica/1.1/#ejercicio-1120","text":"Teniendo en cuenta el ejercicio anterior, realizar un incremento de la variable V en forma constante y creciente recalculando los dem\u00e1s valores 10 veces. Por ejemplo V=2 V V2 V3 2 4 8 3 9 27 .... .... .... 12 144 1728","title":"Ejercicio 1.1.20"},{"location":"practica/1.1/#ejercicio-1121","text":"Repita el ejercicio anterior con un c\u00e1lculo de n veces, con n > 1. Por final emitir la suma de los cuadrados de V.","title":"Ejercicio 1.1.21"},{"location":"practica/1.1/#ejercicio-1122","text":"Escriba un algoritmo que determine si un n\u00famero es primo.","title":"Ejercicio 1.1.22"},{"location":"practica/1.1/#ejercicio-1123","text":"Escriba un algoritmo para calcular cada rengl\u00f3n de una factura (valor unitario * cantidad vendida) y el total de la misma, suponiendo que el n\u00famero de renglones es variable. Emitir un mensaje de error si el valor unitario es <= 0. Realizar la prueba de escritorio con los siguientes valores: Cantidad de renglones: 4 Valor Unitario Cantidad Vendida 2 10 1 25 3 15 2 8.5","title":"Ejercicio 1.1.23"},{"location":"practica/1.1/#ejercicio-1124","text":"Escribir un algoritmo que, dado un importe dinero, permia calcular e informar cuanto corresponde pagar por un impuesto, en cuantas cuotas y el valor de las mismas. Tener en cuenta los siguientes datos: IMPUESTO = 10% del importe dado. Los importes mayores que \\$500 y menor o igual que $1000 se pagan en dos cuotas. Los mayores de $1000 en tres cuotas. El algoritmo debe permitir tratar varios importes finalizando cuando se ingresa 9999 como importe.","title":"Ejercicio 1.1.24"},{"location":"practica/1.1/#ejercicio-1125","text":"Elabore un algoritmo para calcular los primeros 50 n\u00fameros de FIBONACCI, sabiendo que dichos n\u00fameros cumplen con lo siguiente: $$A_0=0, A_1=1, A_2=A_0+A_1, ..., A_n=A_{(n-1)}+A_{(n-2)}$$","title":"Ejercicio 1.1.25"},{"location":"practica/1.1/#ejercicio-1126","text":"Generar un algoritmo para imprimir las coordenadas $(X,Y)$ de una funci\u00f3n cuadr\u00e1tica, de la forma: $Y = aX^2+bX+c$, haciendo variar $X$ en el intervalo $[20, -20]$ con un decremento de 2.","title":"Ejercicio 1.1.26"},{"location":"practica/1.1/#ejercicio-1127","text":"Repita el ejercicio anterior de modo que sea posible estudiar varias funciones, indicando que se desea terminar al ingresar 9999 para el t\u00e9rmino cuadr\u00e1tico.","title":"Ejercicio 1.1.27"},{"location":"practica/1.1/#ejercicio-1128","text":"Construya un algoritmo capaz de encontrar todas las cifras de tres d\u00edgitos que cumplan con la condici\u00f3n de que la suma de los cubos de sus d\u00edgitos sea igual al n\u00famero que la cifra representa.","title":"Ejercicio 1.1.28"},{"location":"practica/1.1/#ejercicio-1129","text":"Escriba un algoritmo para imprimir los n\u00fameros primos menores a un valor dado n.","title":"Ejercicio 1.1.29"},{"location":"practica/1.1/#ejercicio-1130","text":"Escriba un algoritmo para resolver el siguiente problema: Una empresa de transportes desea conocer el sueldo de sus 100 choferes. Estos se calculan teniendo en cuenta la categor\u00eda (1 o 2) y la asistencia (perfecta: si o no). El sueldo se obtiene sumando el sueldo b\u00e1sico, m\u00e1s el 2% de antig\u00fcedad por cada a\u00f1o trabajado y \\$200 de premio por asistencia. El sueldo b\u00e1sico es de \\$700 para choferes de categor\u00eda 1 y de \\$500.- para los de categor\u00eda 2.","title":"Ejercicio 1.1.30"},{"location":"practica/1.1/#ejercicio-1131","text":"Una f\u00e1brica textil produce telas de dos calidades distintas (primera y segunda) y de dos materiales distintos (seda y algod\u00f3n). Generar un algoritmo que calcule el peso de varias piezas de tela, el cual est\u00e1 dado por la suma del peso neto, m\u00e1s un porcentaje por el apresto, m\u00e1s el peso del n\u00facleo de cart\u00f3n. Para realizar el c\u00e1lculo, tener en cuenta la siguiente informaci\u00f3n, para cada pieza: El peso del m2 y la longitud de cada pieza. Al peso neto de la tela hay que sumarle un porcentaje por cada pieza, debido al apresto, el cual es del 2% para las telas de seda y del 7% para las de algod\u00f3n. Tambi\u00e9n se debe considerar el n\u00facleo de cart\u00f3n, que es de 400 gr. para los rollos de telas de primera y de 300 gr. en los de segunda. Finalizar cuando la variable FIN sea igual a 'SI'.","title":"Ejercicio 1.1.31"},{"location":"practica/1.1/#ejercicio-1132","text":"La fecha del domingo de Pascua corresponde al primer domingo despu\u00e9s de la primera luna llena que sigue al equinoccio de primavera. La secuencia de c\u00e1lculos que permite conocer esta fecha es: A = anio mod 19 B = anio mod 4 C = anio mod 7 D = ( 19 * A + 24 ) mod 30 E = ( 2 * B + 4 * C + 6 * D + 5 ) mod 7 N = ( 22 + D + E ) Donde N indica el n\u00famero del d\u00eda del mes de marzo (o abril si N es superior a 31) correpondiente al domingo de Pascua. Realizar un algoritmo que determine esta fecha para los a\u00f1os comprendidos entre 1990 y 2010","title":"Ejercicio 1.1.32"},{"location":"practica/1.1/#ejercicio-1133","text":"Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 8 ... N 4 6 8 10 ... N 6 8 10 12 ... N .... .... N","title":"Ejercicio 1.1.33"},{"location":"practica/1.1/#ejercicio-1134","text":"Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 ............ N 2 4 6 ........ N-2 2 4 6 ... N-4 ........... 2 4 6 2 4 2","title":"Ejercicio 1.1.34"},{"location":"practica/1.1/#ejercicio-1135","text":"Escriba un algoritmo que acepte un n\u00famero entero que representa una suma de dinero e indique cuantos billetes de cada denominaci\u00f3n necesita, suponiendo que solo existen billetes de 500, 100, 50, 20, 10, 5 y 1 peso.","title":"Ejercicio 1.1.35"},{"location":"practica/1.1/#ejercicio-1136","text":"Todo n\u00famero cuya suma de sus d\u00edgitos sea m\u00faltiplo de 3 lo es tambi\u00e9n. Ej: 117 \u2192 1+1+7 = 9 que es m\u00faltiplo de 3 , entonces 117 es m\u00faltiplo de 3 Realizar un algoritmo que determine si un n\u00famero es m\u00faltiplo de 3 en funci\u00f3n de la afirmaci\u00f3n antes realizada","title":"Ejercicio 1.1.36"},{"location":"practica/1.2/","text":"1.2. Subacciones \u00b6 Funciones \u00b6 Ejercicio 1.2.1 \u00b6 Realice una funci\u00f3n que dado un n\u00famero devuelva su cuadrado. Ejercicio 1.2.2 \u00b6 Dise\u00f1e una funci\u00f3n que devuelva la suma de los d\u00edgitos del n\u00famero natural suministrado como par\u00e1metro. Ejercicio 1.2.3 \u00b6 Dise\u00f1e una funci\u00f3n que permita ingresar 3 n\u00fameros y devuelva el m\u00ednimo valor. El programa principal debe permitir que este proceso se repita la cantidad de veces que el usuario desee. Ejercicio 1.2.4 \u00b6 Elaborar una funci\u00f3n que reciba un n\u00famero entero y retorne -1 si el n\u00famero es negativo. Si el n\u00famero es positivo debe devolver una clave calculada de la siguiente manera: Se suma cada d\u00edgito que compone el n\u00famero y a esa suma se le calcula el modulo 7. Por ejemplo: para la cifra 513, la clave ser\u00e1 5+1+3 =9; 9 mod 7 = 2. Utilice la funci\u00f3n para dise\u00f1ar un algoritmo que permita leer varios valores y determine, para cada uno, si el n\u00famero le\u00eddo fue negativo o, si fue positivo, que clave le corresponde. Ejercicio 1.2.5 \u00b6 Escribir una funci\u00f3n que verifique si un caracter introducido es un d\u00edgito o no. Ejercicio 1.2.6 \u00b6 Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio de un producto que se quiere comprar, y en funci\u00f3n de las unidades introducidas calcule un descuento o no, seg\u00fan corresponda: cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena. La funci\u00f3n debe devolver como resultado el valor del descuento o cero, en caso de que no corresponda. Procedimientos \u00b6 Ejercicio 1.2.7 \u00b6 Repita el ejercicio del punto 5 pero utilice procedimiento en lugar de funci\u00f3n. Ejercicio 1.2.8 \u00b6 Crear un procedimiento que intercambie los valores de dos variables num\u00e9ricas. Ejercicio 1.2.9 \u00b6 Desarrollar los procedimientos mostrar_0 , mostrar_1 , mostrar_9 que visualicen por pantalla, respectivamente, los n\u00fameros 0,1,...,9 en tama\u00f1o grande, tal y como se muestra a continuaci\u00f3n: ***** * ***** ***** * * ***** ***** ***** ***** ***** * * * * * * * * * * * * * * * * * ***** ***** ***** ***** ***** * ***** ***** * * * * * * * * * * * * * ***** * ***** ***** * ***** ***** * ***** ***** Ejercicio 1.2.10 \u00b6 Escribir un \u00fanico procedimiento mostrar_nro que reciba como par\u00e1metro un d\u00edgito y lo muestre por pantalla de la misma forma que se indica en el ejercicio 9. Ejercicio 1.2.11 \u00b6 Dise\u00f1e un algoritmo que muestre un men\u00fa con las opciones sumar, restar, multiplicar y dividir, el algoritmo solicitar\u00e1 una opci\u00f3n y realizar\u00e1 la tarea elegida, se debe usar un procedimiento para mostrar el men\u00fa, pedir los datos en el algoritmo principal y despu\u00e9s usar funciones para realizar los c\u00e1lculos. Ejercicio 1.2.12 \u00b6 Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio que quiere comprar, y en funci\u00f3n de las unidades introducidas le haga un descuento o no (cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena).","title":"1.2. Subacciones"},{"location":"practica/1.2/#12-subacciones","text":"","title":"1.2. Subacciones"},{"location":"practica/1.2/#funciones","text":"","title":"Funciones"},{"location":"practica/1.2/#ejercicio-121","text":"Realice una funci\u00f3n que dado un n\u00famero devuelva su cuadrado.","title":"Ejercicio 1.2.1"},{"location":"practica/1.2/#ejercicio-122","text":"Dise\u00f1e una funci\u00f3n que devuelva la suma de los d\u00edgitos del n\u00famero natural suministrado como par\u00e1metro.","title":"Ejercicio 1.2.2"},{"location":"practica/1.2/#ejercicio-123","text":"Dise\u00f1e una funci\u00f3n que permita ingresar 3 n\u00fameros y devuelva el m\u00ednimo valor. El programa principal debe permitir que este proceso se repita la cantidad de veces que el usuario desee.","title":"Ejercicio 1.2.3"},{"location":"practica/1.2/#ejercicio-124","text":"Elaborar una funci\u00f3n que reciba un n\u00famero entero y retorne -1 si el n\u00famero es negativo. Si el n\u00famero es positivo debe devolver una clave calculada de la siguiente manera: Se suma cada d\u00edgito que compone el n\u00famero y a esa suma se le calcula el modulo 7. Por ejemplo: para la cifra 513, la clave ser\u00e1 5+1+3 =9; 9 mod 7 = 2. Utilice la funci\u00f3n para dise\u00f1ar un algoritmo que permita leer varios valores y determine, para cada uno, si el n\u00famero le\u00eddo fue negativo o, si fue positivo, que clave le corresponde.","title":"Ejercicio 1.2.4"},{"location":"practica/1.2/#ejercicio-125","text":"Escribir una funci\u00f3n que verifique si un caracter introducido es un d\u00edgito o no.","title":"Ejercicio 1.2.5"},{"location":"practica/1.2/#ejercicio-126","text":"Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio de un producto que se quiere comprar, y en funci\u00f3n de las unidades introducidas calcule un descuento o no, seg\u00fan corresponda: cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena. La funci\u00f3n debe devolver como resultado el valor del descuento o cero, en caso de que no corresponda.","title":"Ejercicio 1.2.6"},{"location":"practica/1.2/#procedimientos","text":"","title":"Procedimientos"},{"location":"practica/1.2/#ejercicio-127","text":"Repita el ejercicio del punto 5 pero utilice procedimiento en lugar de funci\u00f3n.","title":"Ejercicio 1.2.7"},{"location":"practica/1.2/#ejercicio-128","text":"Crear un procedimiento que intercambie los valores de dos variables num\u00e9ricas.","title":"Ejercicio 1.2.8"},{"location":"practica/1.2/#ejercicio-129","text":"Desarrollar los procedimientos mostrar_0 , mostrar_1 , mostrar_9 que visualicen por pantalla, respectivamente, los n\u00fameros 0,1,...,9 en tama\u00f1o grande, tal y como se muestra a continuaci\u00f3n: ***** * ***** ***** * * ***** ***** ***** ***** ***** * * * * * * * * * * * * * * * * * ***** ***** ***** ***** ***** * ***** ***** * * * * * * * * * * * * * ***** * ***** ***** * ***** ***** * ***** *****","title":"Ejercicio 1.2.9"},{"location":"practica/1.2/#ejercicio-1210","text":"Escribir un \u00fanico procedimiento mostrar_nro que reciba como par\u00e1metro un d\u00edgito y lo muestre por pantalla de la misma forma que se indica en el ejercicio 9.","title":"Ejercicio 1.2.10"},{"location":"practica/1.2/#ejercicio-1211","text":"Dise\u00f1e un algoritmo que muestre un men\u00fa con las opciones sumar, restar, multiplicar y dividir, el algoritmo solicitar\u00e1 una opci\u00f3n y realizar\u00e1 la tarea elegida, se debe usar un procedimiento para mostrar el men\u00fa, pedir los datos en el algoritmo principal y despu\u00e9s usar funciones para realizar los c\u00e1lculos.","title":"Ejercicio 1.2.11"},{"location":"practica/1.2/#ejercicio-1212","text":"Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio que quiere comprar, y en funci\u00f3n de las unidades introducidas le haga un descuento o no (cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena).","title":"Ejercicio 1.2.12"},{"location":"practica/2.1/","text":"2.1. Secuencias de datos elementales \u00b6 Ejercicio 2.1.1 \u00b6 Dada una secuencia de letras del alfabeto que finaliza con una marca '*', contar cuantas letras \"A\" hay en la secuencia. Ejercicio 2.1.2 \u00b6 Dada una secuencia de letras del alfabeto que finaliza con la letra \"Z\", contar cuantas consonantes hay en la secuencia. Ejercicio 2.1.3 \u00b6 Se dispone de una secuencia de caracteres y se desea obtener una secuencia de salida que resulte de copiar la secuencia de entrada, descartando el caracter \"$\". Ejercicio 2.1.4 \u00b6 Se dispone de una secuencia de n\u00fameros de socios, y se desea saber la cantidad de socios que est\u00e1n registrados. Ejercicio 2.1.5 \u00b6 La secuencia de socios del problema anterior tiene el inconveniente de que los n\u00fameros est\u00e1n ordenados pero no son correlativos. Se desea generar una secuencia que contenga los n\u00fameros de socios que no figuran en la secuencia de socios. Ejercicio 2.1.6 \u00b6 Dada una secuencia de enteros que almacena la cantidad de habitantes de las ciudades capitales de las 23 provincias de la Rep\u00fablica Argentina, discriminados 4 categor\u00edas: menores de 18 a\u00f1os (varones y mujeres) y mayores de 18 a\u00f1os (varones y mujeres). Se pide determinar la poblaci\u00f3n total y los siguientes porcentajes: masculinos, femeninos, mayores de 18 y menores de 18. Ejercicio 2.1.7 \u00b6 Se tiene una secuencia de enteros que contiene todos los CUIT de los empleados de una empresa, la misma termina con el CUIT 0. Para evitar largas esperas en los d\u00edas de pago, la empresa necesita organizarlos de acuerdo al \u00faltimo d\u00edgito de su documento, generar una secuencia con los CUIT de las personas que su n\u00famero de documento termine con 0, 1, 2 o 3. Ejercicio 2.1.8 \u00b6 Teniendo en cuenta el ejercicio anterior, se solicita que la secuencia de salida sea una secuencia de caracteres y los CUIT se separen unos de otros con el caracter \"-\". Ejercicio 2.1.9 \u00b6 Se dispone de una secuencia de caracteres. Se desea determinar la cantidad de palabras que comienzan con la letra 'I'. Ejercicio 2.1.10 \u00b6 Se dispone de una secuencia de caracteres. Se desea permita contar la cantidad de palabras que comienzan con una letra dada. Ejercicio 2.1.11 \u00b6 Dada una secuencia de caracteres, determinar la cantidad de palabras de 4 caracteres (letras) Ejercicio 2.1.12 \u00b6 Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\". Ejercicio 2.1.13 \u00b6 A partir del ejercicio anterior, determinar el porcentaje que representan las palabras que comienzan con \"ALG\" sobre todas las palabras de la secuencia. Ejercicio 2.1.14 \u00b6 Se dispone de una secuencia de caracteres y se desea saber la cantidad de caracteres (incluidos los espacios) que existen entre una coma y la siguiente. Se debe considerar que puede haber m\u00e1s de un par de comas, y que las subsecuencias inicial y final deben descartarse por no cumplir la condici\u00f3n enunciada. Sup\u00f3ngase que las comas son siempre contiguas al \u00faltimo caracter de la palabra. Ejercicio 2.1.15 \u00b6 Se desea saber la cantidad promedio de palabras que contienen las oraciones de una secuencia de caracteres. Sup\u00f3ngase que los puntos son siempre contiguos al \u00faltimo caracter de la palabra. La secuencia finaliza con una marca. Ejercicio 2.1.16 \u00b6 Se dispone de una secuencia de n\u00fameros de DNI asignados a un circuito electoral, generar otra secuencia de n\u00fameros que contenga los DNI m\u00faltiplos de 3. Ejercicio 2.1.17 \u00b6 Se desea calcular el costo de un telegrama, que se determina en funci\u00f3n del n\u00famero de palabras (que vale V1 cada una), salvo que el promedio de letras por palabra supere las cinco letras, caso en que cada palabra vale V2. Ejercicio 2.1.18 \u00b6 Escribir un algoritmo que produzca una secuencia de salida que contenga una oraci\u00f3n formada por por las palabras en posici\u00f3n par de cada oraci\u00f3n de una secuencia texto de entrada, que adem\u00e1s comienzan con la letra 'M'. Ejercicio 2.1.19 \u00b6 Dada una secuencia de caracteres, generar otra secuencia con todas las palabras de tres caracteres. Informar el porcentaje de las mismas, sobre el total de palabras de la secuencia de entrada. Considerar que puede haber m\u00e1s de un blanco entre palabras. Ejercicio 2.1.20 \u00b6 Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia. Ejercicio 2.1.21 \u00b6 Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 2, y el predicado, de la secuencia 1. Al finalizar informar cuantas oraciones tiene cada secuencia. Ejercicio 2.1.22 \u00b6 La empresa Ideas Argentinas S.A. posee datos de sus empleados en dos secuencias de caracteres; la primera secuencia (Sec1) formada por los nombres (uno por persona) de los empleados separados por blancos y la segunda secuencia (Sec2) posee los n\u00fameros de documento de cada uno de los empleados (palabras de 8 d\u00edgitos num\u00e9ricos). Ambas secuencias poseen la misma cantidad de datos, es decir al primer nombre de la primera secuencia le corresponde el primer n\u00famero de documento de la segunda secuencia y as\u00ed sucesivamente. La secuencia de n\u00fameros de documentos no posee espacios en blanco ni ning\u00fan otro tipo de caracter que separe un n\u00famero de documento de otro. A la empresa le interesa tener en una nueva secuencia (Sec3) los datos de todas aquellas personas que cumplan la condici\u00f3n de que el nombre se encuentre en una posici\u00f3n impar. La nueva secuencia debe generarse de la siguiente manera: el n\u00famero de documento seguido (sin espacios) por una coma y luego (sin espacios) por el nombre y seguido al nombre un #. Ejercicio 2.1.23 \u00b6 Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el n\u00famero de documento comienza con un n\u00famero impar. Ejercicio 2.1.24 \u00b6 Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el nombre no comienza con una vocal. Ejercicio 2.1.25 \u00b6 Dada una secuencia texto de entrada que contiene palabras alfanum\u00e9ricas, escribir un algoritmo que genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal, en las cuales se reemplazar\u00e1n todas las vocales por \u2018#\u2019, por ejemplo: entrada 'avi\u00f3n1', salida '#v##n1' y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las cantidades de vocales que se encontraron en cada una de las palabras que cumplieron la condici\u00f3n. Por final de proceso se deber\u00e1 informar el promedio de palabras por oraci\u00f3n. Ejercicio 2.1.26 \u00b6 Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Ejercicio 2.1.27 \u00b6 Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida. La secuencia de caracteres que se recibe incluye n\u00fameros de tarjetas de cr\u00e9dito, donde cada n\u00famero tiene 16 d\u00edgitos. Se desea obtener como resultado una nueva secuencia de salida con los n\u00fameros de tarjetas v\u00e1lidos. El algoritmo para la validaci\u00f3n de n\u00fameros de tarjetas de cr\u00e9dito es el siguiente: Para entender mejor el m\u00e9todo usaremos un n\u00famero correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares. 4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2 Por cada uno de ellos obtenemos el doble del valor que representan. Si el n\u00famero resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y as\u00ed sucesivamente. Si el n\u00famero resultante de la suma de las multiplicaciones y de los d\u00edgitos en posici\u00f3n par, es m\u00faltiplo de 10, y a la vez menor o igual a 150, es un n\u00famero de tarjeta v\u00e1lido. Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el n\u00famero es v\u00e1lido. Ejercicio 2.1.28 \u00b6 La galer\u00eda de pintura y arte nacional, PINTA DE ARGENTINA, almacena informaci\u00f3n sobre los artistas y sus obras de arte en secuencias de caracteres. Durante todo el a\u00f1o, las obras de arte son expuestas en eventos de subasta y exposici\u00f3n, en los cuales se comercializan al p\u00fablico en general. A fin de a\u00f1o la Comisi\u00f3n Directiva de la Galer\u00eda solicita que, a partir de toda esa informaci\u00f3n, se generen algunos informes. Se debe tener en cuenta lo siguiente: En la secuencia ARTISTAS, se almacena el nombre de cada artista, lugar de nacimiento, edad, estilo de arte ('R' \u2013 Renacentista, 'M' \u2013 Arte Moderno, 'B' \u2013 Barroco, 'S' \u2013 Surrealismo) y cantidad de obras por artista. Los datos de cada artista est\u00e1n separados entre si por el s\u00edmbolo '+' y finalizan con el s\u00edmbolo '?'. En la secuencia OBRAS, se almacena el nombre de la obra, el a\u00f1o en que fue hecha, su precio, precedido siempre del signo '$' (solo 3 digitos) y su estado ('V' \u2013 Vendido, 'R' \u2013 Reservado, 'U' \u2013 Obra \u00danica). Todos los datos de las obras est\u00e1n separados por el s\u00edmbolo ',' y finalizan con el s\u00edmbolo '/'. El creador de cada obra se determina de acuerdo al dato 'cantidad de obras' de la secuencia ARTISTAS, por ej.: el autor RENE BARTOL tiene 2 obras, por lo cual las primeras 2 obras de la secuencia OBRAS le pertenecen, las siguientes 6, pertenecen a JUAN B JUSTO, etc. A continuaci\u00f3n un ejemplo de ambas secuencias: SECUENCIA ARTISTAS RENE BARTOL+ROSARIO+34+M+2?JUAN B JUSTO+NEUQUEN+61+R+5?\u2026\u2026.. SECUENCIAS OBRAS SOL Y PARANA,1997,$913,V/GRITO DE ESPERANZA,2003,$235,R/PENAS,1997,$781,V/\u2026\u2026\u2026 A partir de lo expuesto anteriormente, se pide: Generar una secuencia de salida con informaci\u00f3n de los artistas Renacentistas. La secuencia debe contener el nombre del artista, su estilo de arte, seguido de sus obras (nombre y a\u00f1o de creaci\u00f3n). Los datos correspondientes al mismo artista deben separarse entre s\u00ed con el signo '+' y finalizar con el signo '?'. Al final del proceso informar: la mayor cantidad de obras vendidas por un artista. el porcentaje de obras de artistas \"renacentistas\" sobre el total de obras. Ejercicio 2.1.29 \u00b6 Dado el ejercicio anterior, pensar: c\u00f3mo cambia el algoritmo soluci\u00f3n en caso de que el 'estilo de arte' se indique al principio de los datos de cada artista en la secuencia de artistas? Por qu\u00e9? Hacer el algoritmo. Ejercicio 2.1.30 \u00b6 El siguiente es un ejercicio del primer recuperatorio del primer parcial del a\u00f1o 2017: La AFIP dispone de dos secuencias de caracteres: PERSONAS Contiene los siguientes datos de personas f\u00edsicas o Empresas: nombre completo y fecha (de nacimiento o de creaci\u00f3n, respectivamente), agrupadas por provincias. No existe car\u00e1cter separador entre personas, el fin de cada provincia se indica con el car\u00e1cter &. Ejemplo: Mar\u00eda G\u00f3m-14021977Carlos Alberto Rodriguez-20061990....&Lionel Messi-24061987....&....{fin} nombre-ddmmaaaanombre-ddmmaa....& CUIT : contiene la Clave Unica de Identificaci\u00f3n Tributaria de las personas de la secuencia PERSONAS (existiendo una correspondencia una a una, es decir la primer persona con el primer cuit, la segunda con el segundo y asi sucesivamente) Cada n\u00famero de CUIT se almacena por medio de 11 caracteres: los 2 primeros indican el tipo, los 6 siguientes el n\u00famero de DNI (en caso de personas f\u00edsicas) o de sociedad (en caso de Empresas) y el \u00faltimo es un digito verificador. Ejemplo: **20123456786**23134567823**30712434445** Los tipos pueden ser:20, 23, 24 y 27 para Personas F\u00edsicas y 30, 33 y 34 para Empresas. Se solicita. Generar una secuencia de salida que contenga DNI, y el nombre completo de todas las personas f\u00edsicas cuyo nombre comience con vocal. Para cada Provincia calcular el total de personas f\u00edsicas y el porcentaje sobre el total de la provincia. Ejercicio 2.1.31 \u00b6 El siguiente es un ejercicio del primer parcial del a\u00f1o 2017: La empresa TICKET-TEC ha generado una secuencia de caracteres con informaci\u00f3n de sus ventas para los eventos de los \u00faltimos 3 meses, cuya estructura se describe a continuaci\u00f3n. Inicialmente existe el nombre del local de los eventos, cuya longitud se desconoce, termina con un #; a continuaci\u00f3n se tiene la informaci\u00f3n de todos los tickets vendidos para ese local, separado cada ticket del siguiente con el caracter !, y al final de todas las ventas para ese local, el caracter &. Por \u00faltimo la marca de fin de secuencia. Tambi\u00e9n en el caso de butaca se desconoce la longitud del n\u00famero, termina con un gui\u00f3n. EJEMPLO Teatro Opera#270520171A45-2030!270520173D120-2230!280520172C233-2030!&Galpon de las Luces#070720171C5-2030!301020172A233-2230!&{fin} local de eventos#Fecha del evento[ddmmaaaa] codigo del evento[1..3] butaca [sector [A,C o D], n\u00famero] - horario evento [hhmm]! Solo hay dos horarios 20:30 y 22:30. La empresa solicita un algoritmo que cumpla con las siguientes consignas: Generar una nueva secuencia de salida con el mismo formato, que contenga los tickets correspondientes a un mes ingresado por el usuario. Informar total general de tickets vendidos, total de tickets por evento y porcentaje de cada uno sobre el total general. Ejercicio 2.1.32 \u00b6 Se posee una secuencia con los mensajes internos enviados entre los empleados de una empresa, la secuencia est\u00e1 formada de la siguiente manera: 3 caracteres para el destino, 3 caracteres para el origen, 3 caracteres que indican la cantidad de caracteres que tiene el mensaje y el mensaje. No existe ning\u00fan car\u00e1cter que separe un mensaje de otro. se pide: Escribir una secuencia de salida con todos los mensajes (incluyendo origen y destino) que van hacia el \u00e1rea de Mantenimiento (que destino comience con 1). Contar la cantidad de mensajes que se dirigen hacia el \u00e1rea de sistemas (que destino comience con 23).","title":"2.1. Secuencias de datos elementales"},{"location":"practica/2.1/#21-secuencias-de-datos-elementales","text":"","title":"2.1. Secuencias de datos elementales"},{"location":"practica/2.1/#ejercicio-211","text":"Dada una secuencia de letras del alfabeto que finaliza con una marca '*', contar cuantas letras \"A\" hay en la secuencia.","title":"Ejercicio 2.1.1"},{"location":"practica/2.1/#ejercicio-212","text":"Dada una secuencia de letras del alfabeto que finaliza con la letra \"Z\", contar cuantas consonantes hay en la secuencia.","title":"Ejercicio 2.1.2"},{"location":"practica/2.1/#ejercicio-213","text":"Se dispone de una secuencia de caracteres y se desea obtener una secuencia de salida que resulte de copiar la secuencia de entrada, descartando el caracter \"$\".","title":"Ejercicio 2.1.3"},{"location":"practica/2.1/#ejercicio-214","text":"Se dispone de una secuencia de n\u00fameros de socios, y se desea saber la cantidad de socios que est\u00e1n registrados.","title":"Ejercicio 2.1.4"},{"location":"practica/2.1/#ejercicio-215","text":"La secuencia de socios del problema anterior tiene el inconveniente de que los n\u00fameros est\u00e1n ordenados pero no son correlativos. Se desea generar una secuencia que contenga los n\u00fameros de socios que no figuran en la secuencia de socios.","title":"Ejercicio 2.1.5"},{"location":"practica/2.1/#ejercicio-216","text":"Dada una secuencia de enteros que almacena la cantidad de habitantes de las ciudades capitales de las 23 provincias de la Rep\u00fablica Argentina, discriminados 4 categor\u00edas: menores de 18 a\u00f1os (varones y mujeres) y mayores de 18 a\u00f1os (varones y mujeres). Se pide determinar la poblaci\u00f3n total y los siguientes porcentajes: masculinos, femeninos, mayores de 18 y menores de 18.","title":"Ejercicio 2.1.6"},{"location":"practica/2.1/#ejercicio-217","text":"Se tiene una secuencia de enteros que contiene todos los CUIT de los empleados de una empresa, la misma termina con el CUIT 0. Para evitar largas esperas en los d\u00edas de pago, la empresa necesita organizarlos de acuerdo al \u00faltimo d\u00edgito de su documento, generar una secuencia con los CUIT de las personas que su n\u00famero de documento termine con 0, 1, 2 o 3.","title":"Ejercicio 2.1.7"},{"location":"practica/2.1/#ejercicio-218","text":"Teniendo en cuenta el ejercicio anterior, se solicita que la secuencia de salida sea una secuencia de caracteres y los CUIT se separen unos de otros con el caracter \"-\".","title":"Ejercicio 2.1.8"},{"location":"practica/2.1/#ejercicio-219","text":"Se dispone de una secuencia de caracteres. Se desea determinar la cantidad de palabras que comienzan con la letra 'I'.","title":"Ejercicio 2.1.9"},{"location":"practica/2.1/#ejercicio-2110","text":"Se dispone de una secuencia de caracteres. Se desea permita contar la cantidad de palabras que comienzan con una letra dada.","title":"Ejercicio 2.1.10"},{"location":"practica/2.1/#ejercicio-2111","text":"Dada una secuencia de caracteres, determinar la cantidad de palabras de 4 caracteres (letras)","title":"Ejercicio 2.1.11"},{"location":"practica/2.1/#ejercicio-2112","text":"Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\".","title":"Ejercicio 2.1.12"},{"location":"practica/2.1/#ejercicio-2113","text":"A partir del ejercicio anterior, determinar el porcentaje que representan las palabras que comienzan con \"ALG\" sobre todas las palabras de la secuencia.","title":"Ejercicio 2.1.13"},{"location":"practica/2.1/#ejercicio-2114","text":"Se dispone de una secuencia de caracteres y se desea saber la cantidad de caracteres (incluidos los espacios) que existen entre una coma y la siguiente. Se debe considerar que puede haber m\u00e1s de un par de comas, y que las subsecuencias inicial y final deben descartarse por no cumplir la condici\u00f3n enunciada. Sup\u00f3ngase que las comas son siempre contiguas al \u00faltimo caracter de la palabra.","title":"Ejercicio 2.1.14"},{"location":"practica/2.1/#ejercicio-2115","text":"Se desea saber la cantidad promedio de palabras que contienen las oraciones de una secuencia de caracteres. Sup\u00f3ngase que los puntos son siempre contiguos al \u00faltimo caracter de la palabra. La secuencia finaliza con una marca.","title":"Ejercicio 2.1.15"},{"location":"practica/2.1/#ejercicio-2116","text":"Se dispone de una secuencia de n\u00fameros de DNI asignados a un circuito electoral, generar otra secuencia de n\u00fameros que contenga los DNI m\u00faltiplos de 3.","title":"Ejercicio 2.1.16"},{"location":"practica/2.1/#ejercicio-2117","text":"Se desea calcular el costo de un telegrama, que se determina en funci\u00f3n del n\u00famero de palabras (que vale V1 cada una), salvo que el promedio de letras por palabra supere las cinco letras, caso en que cada palabra vale V2.","title":"Ejercicio 2.1.17"},{"location":"practica/2.1/#ejercicio-2118","text":"Escribir un algoritmo que produzca una secuencia de salida que contenga una oraci\u00f3n formada por por las palabras en posici\u00f3n par de cada oraci\u00f3n de una secuencia texto de entrada, que adem\u00e1s comienzan con la letra 'M'.","title":"Ejercicio 2.1.18"},{"location":"practica/2.1/#ejercicio-2119","text":"Dada una secuencia de caracteres, generar otra secuencia con todas las palabras de tres caracteres. Informar el porcentaje de las mismas, sobre el total de palabras de la secuencia de entrada. Considerar que puede haber m\u00e1s de un blanco entre palabras.","title":"Ejercicio 2.1.19"},{"location":"practica/2.1/#ejercicio-2120","text":"Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia.","title":"Ejercicio 2.1.20"},{"location":"practica/2.1/#ejercicio-2121","text":"Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 2, y el predicado, de la secuencia 1. Al finalizar informar cuantas oraciones tiene cada secuencia.","title":"Ejercicio 2.1.21"},{"location":"practica/2.1/#ejercicio-2122","text":"La empresa Ideas Argentinas S.A. posee datos de sus empleados en dos secuencias de caracteres; la primera secuencia (Sec1) formada por los nombres (uno por persona) de los empleados separados por blancos y la segunda secuencia (Sec2) posee los n\u00fameros de documento de cada uno de los empleados (palabras de 8 d\u00edgitos num\u00e9ricos). Ambas secuencias poseen la misma cantidad de datos, es decir al primer nombre de la primera secuencia le corresponde el primer n\u00famero de documento de la segunda secuencia y as\u00ed sucesivamente. La secuencia de n\u00fameros de documentos no posee espacios en blanco ni ning\u00fan otro tipo de caracter que separe un n\u00famero de documento de otro. A la empresa le interesa tener en una nueva secuencia (Sec3) los datos de todas aquellas personas que cumplan la condici\u00f3n de que el nombre se encuentre en una posici\u00f3n impar. La nueva secuencia debe generarse de la siguiente manera: el n\u00famero de documento seguido (sin espacios) por una coma y luego (sin espacios) por el nombre y seguido al nombre un #.","title":"Ejercicio 2.1.22"},{"location":"practica/2.1/#ejercicio-2123","text":"Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el n\u00famero de documento comienza con un n\u00famero impar.","title":"Ejercicio 2.1.23"},{"location":"practica/2.1/#ejercicio-2124","text":"Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el nombre no comienza con una vocal.","title":"Ejercicio 2.1.24"},{"location":"practica/2.1/#ejercicio-2125","text":"Dada una secuencia texto de entrada que contiene palabras alfanum\u00e9ricas, escribir un algoritmo que genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal, en las cuales se reemplazar\u00e1n todas las vocales por \u2018#\u2019, por ejemplo: entrada 'avi\u00f3n1', salida '#v##n1' y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las cantidades de vocales que se encontraron en cada una de las palabras que cumplieron la condici\u00f3n. Por final de proceso se deber\u00e1 informar el promedio de palabras por oraci\u00f3n.","title":"Ejercicio 2.1.25"},{"location":"practica/2.1/#ejercicio-2126","text":"Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par.","title":"Ejercicio 2.1.26"},{"location":"practica/2.1/#ejercicio-2127","text":"Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida. La secuencia de caracteres que se recibe incluye n\u00fameros de tarjetas de cr\u00e9dito, donde cada n\u00famero tiene 16 d\u00edgitos. Se desea obtener como resultado una nueva secuencia de salida con los n\u00fameros de tarjetas v\u00e1lidos. El algoritmo para la validaci\u00f3n de n\u00fameros de tarjetas de cr\u00e9dito es el siguiente: Para entender mejor el m\u00e9todo usaremos un n\u00famero correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares. 4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2 Por cada uno de ellos obtenemos el doble del valor que representan. Si el n\u00famero resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y as\u00ed sucesivamente. Si el n\u00famero resultante de la suma de las multiplicaciones y de los d\u00edgitos en posici\u00f3n par, es m\u00faltiplo de 10, y a la vez menor o igual a 150, es un n\u00famero de tarjeta v\u00e1lido. Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el n\u00famero es v\u00e1lido.","title":"Ejercicio 2.1.27"},{"location":"practica/2.1/#ejercicio-2128","text":"La galer\u00eda de pintura y arte nacional, PINTA DE ARGENTINA, almacena informaci\u00f3n sobre los artistas y sus obras de arte en secuencias de caracteres. Durante todo el a\u00f1o, las obras de arte son expuestas en eventos de subasta y exposici\u00f3n, en los cuales se comercializan al p\u00fablico en general. A fin de a\u00f1o la Comisi\u00f3n Directiva de la Galer\u00eda solicita que, a partir de toda esa informaci\u00f3n, se generen algunos informes. Se debe tener en cuenta lo siguiente: En la secuencia ARTISTAS, se almacena el nombre de cada artista, lugar de nacimiento, edad, estilo de arte ('R' \u2013 Renacentista, 'M' \u2013 Arte Moderno, 'B' \u2013 Barroco, 'S' \u2013 Surrealismo) y cantidad de obras por artista. Los datos de cada artista est\u00e1n separados entre si por el s\u00edmbolo '+' y finalizan con el s\u00edmbolo '?'. En la secuencia OBRAS, se almacena el nombre de la obra, el a\u00f1o en que fue hecha, su precio, precedido siempre del signo '$' (solo 3 digitos) y su estado ('V' \u2013 Vendido, 'R' \u2013 Reservado, 'U' \u2013 Obra \u00danica). Todos los datos de las obras est\u00e1n separados por el s\u00edmbolo ',' y finalizan con el s\u00edmbolo '/'. El creador de cada obra se determina de acuerdo al dato 'cantidad de obras' de la secuencia ARTISTAS, por ej.: el autor RENE BARTOL tiene 2 obras, por lo cual las primeras 2 obras de la secuencia OBRAS le pertenecen, las siguientes 6, pertenecen a JUAN B JUSTO, etc. A continuaci\u00f3n un ejemplo de ambas secuencias: SECUENCIA ARTISTAS RENE BARTOL+ROSARIO+34+M+2?JUAN B JUSTO+NEUQUEN+61+R+5?\u2026\u2026.. SECUENCIAS OBRAS SOL Y PARANA,1997,$913,V/GRITO DE ESPERANZA,2003,$235,R/PENAS,1997,$781,V/\u2026\u2026\u2026 A partir de lo expuesto anteriormente, se pide: Generar una secuencia de salida con informaci\u00f3n de los artistas Renacentistas. La secuencia debe contener el nombre del artista, su estilo de arte, seguido de sus obras (nombre y a\u00f1o de creaci\u00f3n). Los datos correspondientes al mismo artista deben separarse entre s\u00ed con el signo '+' y finalizar con el signo '?'. Al final del proceso informar: la mayor cantidad de obras vendidas por un artista. el porcentaje de obras de artistas \"renacentistas\" sobre el total de obras.","title":"Ejercicio 2.1.28"},{"location":"practica/2.1/#ejercicio-2129","text":"Dado el ejercicio anterior, pensar: c\u00f3mo cambia el algoritmo soluci\u00f3n en caso de que el 'estilo de arte' se indique al principio de los datos de cada artista en la secuencia de artistas? Por qu\u00e9? Hacer el algoritmo.","title":"Ejercicio 2.1.29"},{"location":"practica/2.1/#ejercicio-2130","text":"El siguiente es un ejercicio del primer recuperatorio del primer parcial del a\u00f1o 2017: La AFIP dispone de dos secuencias de caracteres: PERSONAS Contiene los siguientes datos de personas f\u00edsicas o Empresas: nombre completo y fecha (de nacimiento o de creaci\u00f3n, respectivamente), agrupadas por provincias. No existe car\u00e1cter separador entre personas, el fin de cada provincia se indica con el car\u00e1cter &. Ejemplo: Mar\u00eda G\u00f3m-14021977Carlos Alberto Rodriguez-20061990....&Lionel Messi-24061987....&....{fin} nombre-ddmmaaaanombre-ddmmaa....& CUIT : contiene la Clave Unica de Identificaci\u00f3n Tributaria de las personas de la secuencia PERSONAS (existiendo una correspondencia una a una, es decir la primer persona con el primer cuit, la segunda con el segundo y asi sucesivamente) Cada n\u00famero de CUIT se almacena por medio de 11 caracteres: los 2 primeros indican el tipo, los 6 siguientes el n\u00famero de DNI (en caso de personas f\u00edsicas) o de sociedad (en caso de Empresas) y el \u00faltimo es un digito verificador. Ejemplo: **20123456786**23134567823**30712434445** Los tipos pueden ser:20, 23, 24 y 27 para Personas F\u00edsicas y 30, 33 y 34 para Empresas. Se solicita. Generar una secuencia de salida que contenga DNI, y el nombre completo de todas las personas f\u00edsicas cuyo nombre comience con vocal. Para cada Provincia calcular el total de personas f\u00edsicas y el porcentaje sobre el total de la provincia.","title":"Ejercicio 2.1.30"},{"location":"practica/2.1/#ejercicio-2131","text":"El siguiente es un ejercicio del primer parcial del a\u00f1o 2017: La empresa TICKET-TEC ha generado una secuencia de caracteres con informaci\u00f3n de sus ventas para los eventos de los \u00faltimos 3 meses, cuya estructura se describe a continuaci\u00f3n. Inicialmente existe el nombre del local de los eventos, cuya longitud se desconoce, termina con un #; a continuaci\u00f3n se tiene la informaci\u00f3n de todos los tickets vendidos para ese local, separado cada ticket del siguiente con el caracter !, y al final de todas las ventas para ese local, el caracter &. Por \u00faltimo la marca de fin de secuencia. Tambi\u00e9n en el caso de butaca se desconoce la longitud del n\u00famero, termina con un gui\u00f3n. EJEMPLO Teatro Opera#270520171A45-2030!270520173D120-2230!280520172C233-2030!&Galpon de las Luces#070720171C5-2030!301020172A233-2230!&{fin} local de eventos#Fecha del evento[ddmmaaaa] codigo del evento[1..3] butaca [sector [A,C o D], n\u00famero] - horario evento [hhmm]! Solo hay dos horarios 20:30 y 22:30. La empresa solicita un algoritmo que cumpla con las siguientes consignas: Generar una nueva secuencia de salida con el mismo formato, que contenga los tickets correspondientes a un mes ingresado por el usuario. Informar total general de tickets vendidos, total de tickets por evento y porcentaje de cada uno sobre el total general.","title":"Ejercicio 2.1.31"},{"location":"practica/2.1/#ejercicio-2132","text":"Se posee una secuencia con los mensajes internos enviados entre los empleados de una empresa, la secuencia est\u00e1 formada de la siguiente manera: 3 caracteres para el destino, 3 caracteres para el origen, 3 caracteres que indican la cantidad de caracteres que tiene el mensaje y el mensaje. No existe ning\u00fan car\u00e1cter que separe un mensaje de otro. se pide: Escribir una secuencia de salida con todos los mensajes (incluyendo origen y destino) que van hacia el \u00e1rea de Mantenimiento (que destino comience con 1). Contar la cantidad de mensajes que se dirigen hacia el \u00e1rea de sistemas (que destino comience con 23).","title":"Ejercicio 2.1.32"},{"location":"practica/2.2/","text":"2.2. Archivos Secuenciales \u00b6 Ejercicio 2.2.1 \u00b6 Se dispone de una secuencia con los datos de los alumnos de la facultad: Apellido y Nombre Carrera (ISI - IEM - IQ) N\u00ba de Legajo Fecha de Nacimiento Fecha de Ingreso D.N.I. Sexo (M o F) Fecha de \u00faltimo examen aprobado Nota Se desea un listado de los mismos, con el siguiente formato: Nro_Legajo Apellido_Nombre Documento Carrera Ejercicio 2.2.2 \u00b6 Se dispone de una secuencia de facturas con los siguientes datos: N\u00ba de Factura Fecha Total Se desea un listado de las facturas cuyas fechas sean posteriores a una fecha dada, y cuyos importes totales no alcancen los $1000, con el siguiente formato: Nro_Factura Fecha Importe_Total Ejercicio 2.2.3 \u00b6 Dada la siguiente secuencia de datos con el siguiente formato: N\u00ba de socio N\u00ba de tel\u00e9fono Apellido y Nombre Carrera (ISI - IEM - IQ - LAR) Domicilio Cantidad de unidades prestadas Correspondiente a los alumnos socios de la Biblioteca, generar la secuencia de los alumnos de \u201cISI\u201d que tengan prestadas m\u00e1s de 4 unidades bibliogr\u00e1ficas. Ejercicio 2.2.4 \u00b6 A partir de la secuencia del ejercicio 2.01 se desea generar otra secuencia con los alumnos de una carrera dada que aprobaron alguna materia este a\u00f1o, con nota mayor a 7 (siete). Ejercicio 2.2.5 \u00b6 A partir de la secuencia del ejercicio 2.01 se desea generar un listado con los alumnos que aprobaron la \u00faltima materia rendida con nota superior a 7, e ingresaron el a\u00f1o pasado, con el siguiente formato: Nro_Legajo Apellido_Nombre Carrera Ejercicio 2.2.6 \u00b6 Se cuenta con una secuencia que contiene el Apellido y Nombre y Promedio General de los Graduados de una Facultad, y se solicita generar un listado con diversas recomendaciones para cubrir vacantes en una importante Empresa. Las mencionadas recomendaciones ser\u00e1n establecidas del siguiente modo: si el promedio es menor que 7, la recomendaci\u00f3n ser\u00e1 negativa (\"NO\"); por el contrario, si el promedio es menor que 8, la recomendaci\u00f3n ser\u00e1 positiva (\"SI\"); de lo contrario, si el promedio es menor que 9, la recomendaci\u00f3n ser\u00e1 favorable (\"F\"); por \u00faltimo, si el promedio supera los 9 puntos, la recomendaci\u00f3n ser\u00e1 muy favorable(\"MF\"). El listado deber respetar el siguiente formato: Apellido_Nombre Promedio Recomendaci\u00f3n Adem\u00e1s, se solicita la impresi\u00f3n del total de graduados que recibieron cada una de las recomendaciones, y el promedio global de los mismos. Ejercicio 2.2.7 \u00b6 Se dispone de un archivo con los datos de un padr\u00f3n electoral con la siguiente informaci\u00f3n: Nombre y apellido Clase DNI Direcci\u00f3n N\u00ba de Mesa Observaciones N\u00ba de Circuito Partido (0= independiente, 1=\u2018A\u2019, 2=\u2018B\u2019, 3=\u2018C\u2019) Generar: a) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas afiliadas al partido \u201cC\u201d. b) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas no afiliadas a ning\u00fan partido y de clase posterior a 1940. Ejercicio 2.2.8 \u00b6 De los datos del siguiente ejercicio: COMPRAS Ordenado por Nro_Cliente Nro_Cliente Fecha_Ultima_Compra Monto CLIENTES Ordenado por Nro_Cliente Nro_Cliente Apellido_Nombre Domicilio Tel\u00e9fono DNI Ambos archivos est\u00e1n ordenados por Nro. de Cliente en forma ascendente. Listar los nombres fecha y monto de \u00faltima compra, de todos aquellos clientes cuya \u00faltima compra sea posterior a una fecha dada y el monto supere un monto dado. Ejercicio 2.2.9 \u00b6 Una casa deportiva dispone de un archivo de productos, ordenado por c\u00f3digo de producto, que contiene los siguientes datos: PRODUCTOS Ordenado por Cod_Producto Cod_Producto Tipo (1,2,3) Marca Modelo Descripci\u00f3n Cantidad_Existente Precio_Unitario Se ha registrado en el mercado un aumento de precios, el cual no es uniforme para todos los art\u00edculos, sino que var\u00eda seg\u00fan el tipo de los mismos de la siguiente manera: tipo 1- Calzados: 10%, tipo 2 \u2013 Indumentaria: 25%, tipo 3 - Accesorios (pelotas, raquetas, etc.): 50%. Por este motivo el gerente de la empresa solicit\u00f3 al Departamento de Inform\u00e1tica que modifique los precios de acuerdo a los porcentajes antes mencionados. Generar un nuevo fichero de productos para cumplir con la solicitud del gerente. Al terminar el proceso informar cantidad total de art\u00edculos de cada tipo hay y total general. Corte de Control \u00b6 Ejercicio 2.2.10 \u00b6 Del archivo general de alumnos de la U.T.N. - Facultad Regional Resistencia, ordenado por carrera, se desea emitir la cantidad de alumnos correspondientes a cada carrera y el total general. Ejercicio 2.2.11 \u00b6 Se dispone de un archivo con datos de los alumnos de la U.T.N. con la siguiente informaci\u00f3n para cada alumno: PRODUCTOS Ordenado por Sexo, Carrera, Nro_Legajo Sexo Carrera Nro_Legajo Fecha_Ingreso Total_Materias_Aprobadas Se desea un listado con el siguiente detalle por sexo, carrera y total general Total de alumnos que ingresaron en el a\u00f1o 2009 con m\u00e1s de 20 materias aprobadas. Total de alumnos que ingresaron en el a\u00f1o 2009 con menos de 20 materias aprobadas Ejercicio 2.2.12 \u00b6 Dada una secuencia con informaci\u00f3n de poblaci\u00f3n de un PAIS: POBLACION Ordenado por Provincia, Departamento, Ciudad, Barrio, ID_Casa Provincia Departamento Ciudad Barrio ID_Casa Cantidad_Habitantes Generar una secuencia con informaci\u00f3n de los departamentos de esa provincia, cuyo registro tenga el siguiente formato: POBLACION_SALIDA Provincia Departamento Cantidad_Habitantes Ejercicio 2.2.13 \u00b6 Un Casino de la regi\u00f3n ha notado un incremento en los costos de las reparaciones de tragamonedas en sus sucursales. Por ello solicit\u00f3 un informe con la cantidad de reparaciones y sus costos, discriminados seg\u00fan tragamonedas, modelo, marca, sucursal y total general. Se dispone de un archivo REPARACIONES, con el siguiente formato. Cada registro representa la reparaci\u00f3n de un tragamonedas, tener en cuenta que puede existir m\u00e1s de una reparaci\u00f3n por tragamonedas. REPARACIONES Ordenado por Cod_Sucursal, Marca, Modelo, Cod_Tragamonedas Cod_Sucursal Marca Modelo Cod_Tragamonedas Fecha_Reparacion Costo_Reparacion Realice el algoritmo para emitir el informe con los totales solicitados Ejercicio 2.2.14 \u00b6 Dados el siguiente fichero con datos de un censo de la ciudad de Resistencia: CENSO Ordenado por Radio, Manzana, Nro_Vivienda Radio Manzana Nro_Vivienda Condicion_Vivienda Cantidad_Habitantes Condici\u00f3n puede ser : Muy Buena, Buena o Mala. Obtener los siguientes totales de personas que habitan en viviendas cuya condici\u00f3n es muy buena: total en la ciudad y totales por Radio y Manzana). Ejercicio 2.2.15 \u00b6 El organismo del cual dependen las escuelas de un distrito lleva un archivo con los registros para todos los alumnos de nivel secundario de ese distrito: ALUMNOS Ordenado por Escuela, A\u00f1o, Divisi\u00f3n Escuela A\u00f1o Divisi\u00f3n Nombre Cant_Inasistencias Se introduce como dato el n\u00famero de distrito y la cantidad de d\u00edas de clase dictados en el a\u00f1o. El archivo est\u00e1 ordenado por n\u00famero de escuela, a\u00f1o y divisi\u00f3n. Los alumnos que superan el 20% de las inasistencias est\u00e1n en situaci\u00f3n de LIBRES, de lo contrario son REGULARES. Se desea conocer: Para cada divisi\u00f3n: - Cantidad de alumnos Para cada a\u00f1o: - Cantidad total de alumnos libres - Cantidad de alumnos regulares - Cantidad total de alumnos Todas las escuelas: - Cantidad total de alumnos - Porcentaje de alumnos libres. - Promedio de inasistencias por alumnos. Mezcla \u00b6 Ejercicio 2.2.16 \u00b6 Construir un algoritmo que a partir de un fichero de pel\u00edculas nuevas conteniendo: PELICULAS_NUEVAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno y otro fichero de peliculas existentes, ambos ordenados por pel\u00edcula, PELICULAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno Genere un \u00fanico archivo (con el mismo formato de los ficheros de entrada) que contenga todas las peliculas. Considerar que hay un solo registro por pel\u00edcula y no se repiten entre ficheros. Ejercicio 2.2.17 \u00b6 La Secretaria Academica de la Facultad lanza un proyecto para incentivar a aquellos alumnos que realizaron el Cursillo de Ingreso a la Universidad y no lograron aprobarlo en los turnos de Agosto y Febrero, de manera de brindarles apoyo Academico con el fin de que, en el Cursillo del a\u00f1o siguiente puedan aprobar los examenes necesarios e ingresar a la Universidad. Para esto, dicha Secretaria\u00adnecesita crear un archivo donde se encuentren todos los aspirantes que realizaron el Cursillo de Ingreso en ambos turnos, y no lograron aprobarlo. Los datos correspondientes a cada uno de los turnos del Cursillo dictado est\u00e1n almacenados en dos archivos (uno para cada turno), los cuales presentan el siguiente formato: ASPIRANTES Ordenado por DNI DNI ApeyNom Carrera F_Nac Email ColegioSec FechaInscripcion Aprobado (Si/No) UD debe realizar un algoritmo que permita mezclar los archivos Aspirantes (de Agosto y Febrero) y generar un archivo SEGUIMIENTO con el siguiente formato: SEGUIMIENTO Ordenado por DNI DNI ApeyNom Email ColegioSec Al finalizar el proceso informar la cantidad de aspirantes que se grabaron en el archivo SEGUIMIENTO. Ejercicio 2.2.18 \u00b6 Un supermercado desea conocer la totalidad de unidades existentes de cada art\u00edculo a fin de hacer un control de stock y decidir si se deben comprar nuevas unidades o redistribuir la mercader\u00eda existente. El supermercado posee dos sucursales, cada una de las cuales envi\u00f3 su informaci\u00f3n en un fichero con el siguiente formato: ARTICULOS Cod_Prod Tipo Marca Descripci\u00f3n Cant_Unidades Escribir un algortimo que permita obtener un \u00fanico fichero de salida, con el mismo formato, que contenga la informaci\u00f3n solicitada y adem\u00e1s, emita un listado con los siguientes datos: Cod_Prod Tipo Marca Descripci\u00f3n Cant_Suc_1 Cant_Suc_2 Total_Unidades Actualizacion \u00b6 Ejercicio 2.2.19 \u00b6 En una Empresa Farmac\u00e9utica se posee un archivo MAE_REMEDIOS (ordenado por Clave: Farmacia + Medicamento), el que se actualiza semanalmente, a traves de la informaci\u00f3n que se encuentra cargada en un archivo de MOVIMIENTOS (ordenado por Clavem: Farmacia + Medicamento, y Cod_Mov), de la siguiente forma: Si Clave ( MAE_REMEDIOS ) es menor que Clavem ( MOVIMIENTOS ), simplemente se transfieren los datos del Maestro a la salida y se graban. Si Clave ( MAE_REMEDIOS ) es igual a Clavem ( MOVIMIENTOS ) y el Codmov es 1, se considera error y se lista un mensaje indicando el tipo de error; pero si el Codmov es 2, entonces es un remedio que deja de fabricarse y se transfiere el registro al archivo de Remedios vencidos ( REM_VENC ) ; pero si el Cod_Mov es 3, se modifica la cantidad actual con la cantidad recibida. Si Clave ( MAE_REMEDIOS ) es mayor que Clavem ( MOVIMIENTOS ) y el Codmov es 1, se incorpora el remedio a nuestro Vademecum, considerando que la cantidad recibida configura la cantidad actual y la Fecha_Vencimiento es 30 d\u00edas posterior a la fecha actual; pero si el Codmov es 2 o 3 se considera error y se deben producir los correspondientes mensajes de error. Se considera que solo existe un registro de movimiento para cada registro del maestro. MAE_REMEDIOS Ordenado por Farmacia y Medicamento Farmacia Medicamento Cant_Actual Fecha_Vencimiento MOVIMIENTOS Ordenado por Farmacia, Medicamento y Cod_Mov Farmacia Medicamento Cod_Mov Cant_Recibida REM_VENC Ordenado por Medicamento Medicamento Cant_Vencida Ejercicio 2.2.20 \u00b6 Se desea generar una secuencia, a partir de la secuencia del problema 2.01, donde se actualice la fecha de aprobaci\u00f3n del \u00faltimo ex\u00e1men, para ello se cuenta con informaci\u00f3n del \u00faltimo turno de ex\u00e1men, seg\u00fan el siguiente detalle: EXAMENES Ordenado por Nro_Legajo Nro_Legajo Carrera Cod_Materia Fecha_Examen Nota Se debe considerar que no necesariamente todos los alumnos se presentan en cada turno de ex\u00e1men, y que un alumno puede presentarse a rendir m\u00e1s de una materia en un mismo turno. Sup\u00f3nganse ambas secuencias ordenadas por N\u00famero de Legajo. Ejercicio 2.2.21 \u00b6 En un pr\u00e1ctico para la Facultad un grupo de alumnos debe implementar una Red Social llamada UTNBook. Para lo cual debe utilizar los siguientes archivos: AMIGOS Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro Cada registro indica la fecha desde que los usuarios son amigos y el \u00faltimo mensaje que un amigo ha escrito en el muro del usuario. NOTIFICACIONES Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Cod_Movimiento Fecha_Amistad Mensaje_Muro Peri\u00f3dicamente se debe actualizar el archivo Amigos, con el fin de que refleje las amistades que posee cada usuario. En el archivo notificaciones pueden existir tres tipos de acciones: la solicitud de una amistad (Cod_mov = 'A'); la eliminaci\u00f3n de una amistad (Cod_mov = 'B'); o la informaci\u00f3n de un mensaje que un amigo ha escrito en el muro del usuario (Cod_mov = 'M'). Considerar que la eliminaci\u00f3n de una amistad implica la baja f\u00edsica de un registro y que hay un solo registro de Notificaciones por cada registro de Amigo. Ejercicio 2.2.22 \u00b6 IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d Ejercicio 2.2.23 \u00b6 Una empresa de distribuci\u00f3n de energ\u00eda el\u00e9ctrica posee un archivo maestro con los siguientes datos de sus clientes (la fecha de \u00faltima lectura son las mediciones realizadas hasta el mes de mayo del 2014): CLIENTE Ordenado por Id_Casa Id_Casa Fecha_Ult_Lectura Cant_Lecturas Prom_Lecturas Tipo_Consumidor El campo tipo de consumidor puede ser: A (cuando el promedio de lectura es menor a 20K) B (cuando el promedio de lectura es menor a 40K) C (cuando el promedio de lectura es igual o supera los 40K) Cuenta adem\u00e1s con el siguiente archivo con datos de las mediciones realizadas en los dos \u00faltimos a\u00f1os (desde junio del 2014 hasta junio del 2016) Mediciones Ordenado por Id_Casa Id_Casa Fecha_Medicion Consumo Se pide actualizar el archivo maestro con la informaci\u00f3n de las lecturas hasta el mes de enero del a\u00f1o 2015 inclusive. Los campos que se deben actualizar son: la fecha de ultima lectura, cantidad de lecturas, el promedio y modificar (en caso de ser necesario) el tipo de consumidor. En caso en que no exista el ID casa (una conexi\u00f3n nueva) se tiene que crear en el maestro y actualizar los otros campos. Ejercicio 2.2.24 \u00b6 Una obra social lleva el control de los costos que le insume cada afiliado. Considerando como costos, los pagos que la misma debe realizar (en conceptos de honorarios, pagos a farmacias, etc) por los distintos servicios que el afiliado utiliza. Para esto la empresa cuenta con un archivo COSTOS_POR_AFILIADO , en el cual se registran la cantidad de atenciones y/o servicios que solicita el empleado y el costo total (en pesos) que la empresa debe pagar por estos. Este archivo est\u00e1 conformado por registros con el siguiente formato, y est\u00e1 ordenado Cod_Afiliado COSTOS_POR_AFILIADO Ordenado por Cod_Afiliado Cod_Afiliado Fecha_Alta Fecha_Baja Cant_Servicios Costo Cada viernes en la organizaci\u00f3n, se lleva a cabo un proceso de actualizaci\u00f3n del archivo COSTOS_POR_AFILIADO . Para poder realizarlo se cuenta con un archivo SERVICIOS_SEMANALES , ordenado por cod_afiliado y fecha_at, en el cual se registran los servicios que solicitaron los afiliados durante cada semana. Cada registro de este archivo presenta el siguiente formato, SERVICIOS_SEMANALES Ordenado por Cod_Afiliado Cod_Afiliado Fecha_At Cod_Servicio Costo En el archivo SERVICIOS_SEMANALES puede existir m\u00e1s de un registro por cada afiliado. Para realizar el proceso de actualizaci\u00f3n se deben tener en cuenta las siguientes consideraciones. Si alg\u00fan Cod_Afiliado de serviciosSemanales, no se encuentra en ning\u00fan registro del archivo COSTOS_POR_AFILIADO, y el primer Cod_Servicio asociado al mismo es igual a 001 entonces se trata de un nuevo afiliado que fue dado de alta. Si Cod_Afiliado de serviciosSemanales es igual al de COSTOS_POR_AFILIADO y el Cod_Servicio es igual a 000 se trata de un afiliado que fue dado de baja y se considera como fecha de baja el valor que reside en Fecha_At. Si en cambio, el Cod_Servicio tiene alg\u00fan otro valor este representa un servicio o atenci\u00f3n que solicit\u00f3 el afiliado; por lo tanto deben contabilizarse la cantidad de servicios que solicit\u00f3; como as\u00ed tambi\u00e9n los costos que estos insumen. Si alg\u00fan Cod_Afiliado de COSTOS_POR_AFILIADO no se encuentra en el archivo SERVICIOS_SEMANALES, se trata de un afiliado que no utiliz\u00f3 los servicios en la semana que se realiza la actualizaci\u00f3n. Cualquier otro caso distinto a los considerados anteriormente se toma como un error, y deben ser informados por pantalla; indicando claramente el motivo del error. Ejercicio 2.2.25 \u00b6 IDEM 2.21 pero suponiendo que hay mas de un registro de notificaciones por cada registro de amigos.","title":"2.3. Archivos Secuenciales"},{"location":"practica/2.2/#22-archivos-secuenciales","text":"","title":"2.2. Archivos Secuenciales"},{"location":"practica/2.2/#ejercicio-221","text":"Se dispone de una secuencia con los datos de los alumnos de la facultad: Apellido y Nombre Carrera (ISI - IEM - IQ) N\u00ba de Legajo Fecha de Nacimiento Fecha de Ingreso D.N.I. Sexo (M o F) Fecha de \u00faltimo examen aprobado Nota Se desea un listado de los mismos, con el siguiente formato: Nro_Legajo Apellido_Nombre Documento Carrera","title":"Ejercicio 2.2.1"},{"location":"practica/2.2/#ejercicio-222","text":"Se dispone de una secuencia de facturas con los siguientes datos: N\u00ba de Factura Fecha Total Se desea un listado de las facturas cuyas fechas sean posteriores a una fecha dada, y cuyos importes totales no alcancen los $1000, con el siguiente formato: Nro_Factura Fecha Importe_Total","title":"Ejercicio 2.2.2"},{"location":"practica/2.2/#ejercicio-223","text":"Dada la siguiente secuencia de datos con el siguiente formato: N\u00ba de socio N\u00ba de tel\u00e9fono Apellido y Nombre Carrera (ISI - IEM - IQ - LAR) Domicilio Cantidad de unidades prestadas Correspondiente a los alumnos socios de la Biblioteca, generar la secuencia de los alumnos de \u201cISI\u201d que tengan prestadas m\u00e1s de 4 unidades bibliogr\u00e1ficas.","title":"Ejercicio 2.2.3"},{"location":"practica/2.2/#ejercicio-224","text":"A partir de la secuencia del ejercicio 2.01 se desea generar otra secuencia con los alumnos de una carrera dada que aprobaron alguna materia este a\u00f1o, con nota mayor a 7 (siete).","title":"Ejercicio 2.2.4"},{"location":"practica/2.2/#ejercicio-225","text":"A partir de la secuencia del ejercicio 2.01 se desea generar un listado con los alumnos que aprobaron la \u00faltima materia rendida con nota superior a 7, e ingresaron el a\u00f1o pasado, con el siguiente formato: Nro_Legajo Apellido_Nombre Carrera","title":"Ejercicio 2.2.5"},{"location":"practica/2.2/#ejercicio-226","text":"Se cuenta con una secuencia que contiene el Apellido y Nombre y Promedio General de los Graduados de una Facultad, y se solicita generar un listado con diversas recomendaciones para cubrir vacantes en una importante Empresa. Las mencionadas recomendaciones ser\u00e1n establecidas del siguiente modo: si el promedio es menor que 7, la recomendaci\u00f3n ser\u00e1 negativa (\"NO\"); por el contrario, si el promedio es menor que 8, la recomendaci\u00f3n ser\u00e1 positiva (\"SI\"); de lo contrario, si el promedio es menor que 9, la recomendaci\u00f3n ser\u00e1 favorable (\"F\"); por \u00faltimo, si el promedio supera los 9 puntos, la recomendaci\u00f3n ser\u00e1 muy favorable(\"MF\"). El listado deber respetar el siguiente formato: Apellido_Nombre Promedio Recomendaci\u00f3n Adem\u00e1s, se solicita la impresi\u00f3n del total de graduados que recibieron cada una de las recomendaciones, y el promedio global de los mismos.","title":"Ejercicio 2.2.6"},{"location":"practica/2.2/#ejercicio-227","text":"Se dispone de un archivo con los datos de un padr\u00f3n electoral con la siguiente informaci\u00f3n: Nombre y apellido Clase DNI Direcci\u00f3n N\u00ba de Mesa Observaciones N\u00ba de Circuito Partido (0= independiente, 1=\u2018A\u2019, 2=\u2018B\u2019, 3=\u2018C\u2019) Generar: a) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas afiliadas al partido \u201cC\u201d. b) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas no afiliadas a ning\u00fan partido y de clase posterior a 1940.","title":"Ejercicio 2.2.7"},{"location":"practica/2.2/#ejercicio-228","text":"De los datos del siguiente ejercicio: COMPRAS Ordenado por Nro_Cliente Nro_Cliente Fecha_Ultima_Compra Monto CLIENTES Ordenado por Nro_Cliente Nro_Cliente Apellido_Nombre Domicilio Tel\u00e9fono DNI Ambos archivos est\u00e1n ordenados por Nro. de Cliente en forma ascendente. Listar los nombres fecha y monto de \u00faltima compra, de todos aquellos clientes cuya \u00faltima compra sea posterior a una fecha dada y el monto supere un monto dado.","title":"Ejercicio 2.2.8"},{"location":"practica/2.2/#ejercicio-229","text":"Una casa deportiva dispone de un archivo de productos, ordenado por c\u00f3digo de producto, que contiene los siguientes datos: PRODUCTOS Ordenado por Cod_Producto Cod_Producto Tipo (1,2,3) Marca Modelo Descripci\u00f3n Cantidad_Existente Precio_Unitario Se ha registrado en el mercado un aumento de precios, el cual no es uniforme para todos los art\u00edculos, sino que var\u00eda seg\u00fan el tipo de los mismos de la siguiente manera: tipo 1- Calzados: 10%, tipo 2 \u2013 Indumentaria: 25%, tipo 3 - Accesorios (pelotas, raquetas, etc.): 50%. Por este motivo el gerente de la empresa solicit\u00f3 al Departamento de Inform\u00e1tica que modifique los precios de acuerdo a los porcentajes antes mencionados. Generar un nuevo fichero de productos para cumplir con la solicitud del gerente. Al terminar el proceso informar cantidad total de art\u00edculos de cada tipo hay y total general.","title":"Ejercicio 2.2.9"},{"location":"practica/2.2/#corte-de-control","text":"","title":"Corte de Control"},{"location":"practica/2.2/#ejercicio-2210","text":"Del archivo general de alumnos de la U.T.N. - Facultad Regional Resistencia, ordenado por carrera, se desea emitir la cantidad de alumnos correspondientes a cada carrera y el total general.","title":"Ejercicio 2.2.10"},{"location":"practica/2.2/#ejercicio-2211","text":"Se dispone de un archivo con datos de los alumnos de la U.T.N. con la siguiente informaci\u00f3n para cada alumno: PRODUCTOS Ordenado por Sexo, Carrera, Nro_Legajo Sexo Carrera Nro_Legajo Fecha_Ingreso Total_Materias_Aprobadas Se desea un listado con el siguiente detalle por sexo, carrera y total general Total de alumnos que ingresaron en el a\u00f1o 2009 con m\u00e1s de 20 materias aprobadas. Total de alumnos que ingresaron en el a\u00f1o 2009 con menos de 20 materias aprobadas","title":"Ejercicio 2.2.11"},{"location":"practica/2.2/#ejercicio-2212","text":"Dada una secuencia con informaci\u00f3n de poblaci\u00f3n de un PAIS: POBLACION Ordenado por Provincia, Departamento, Ciudad, Barrio, ID_Casa Provincia Departamento Ciudad Barrio ID_Casa Cantidad_Habitantes Generar una secuencia con informaci\u00f3n de los departamentos de esa provincia, cuyo registro tenga el siguiente formato: POBLACION_SALIDA Provincia Departamento Cantidad_Habitantes","title":"Ejercicio 2.2.12"},{"location":"practica/2.2/#ejercicio-2213","text":"Un Casino de la regi\u00f3n ha notado un incremento en los costos de las reparaciones de tragamonedas en sus sucursales. Por ello solicit\u00f3 un informe con la cantidad de reparaciones y sus costos, discriminados seg\u00fan tragamonedas, modelo, marca, sucursal y total general. Se dispone de un archivo REPARACIONES, con el siguiente formato. Cada registro representa la reparaci\u00f3n de un tragamonedas, tener en cuenta que puede existir m\u00e1s de una reparaci\u00f3n por tragamonedas. REPARACIONES Ordenado por Cod_Sucursal, Marca, Modelo, Cod_Tragamonedas Cod_Sucursal Marca Modelo Cod_Tragamonedas Fecha_Reparacion Costo_Reparacion Realice el algoritmo para emitir el informe con los totales solicitados","title":"Ejercicio 2.2.13"},{"location":"practica/2.2/#ejercicio-2214","text":"Dados el siguiente fichero con datos de un censo de la ciudad de Resistencia: CENSO Ordenado por Radio, Manzana, Nro_Vivienda Radio Manzana Nro_Vivienda Condicion_Vivienda Cantidad_Habitantes Condici\u00f3n puede ser : Muy Buena, Buena o Mala. Obtener los siguientes totales de personas que habitan en viviendas cuya condici\u00f3n es muy buena: total en la ciudad y totales por Radio y Manzana).","title":"Ejercicio 2.2.14"},{"location":"practica/2.2/#ejercicio-2215","text":"El organismo del cual dependen las escuelas de un distrito lleva un archivo con los registros para todos los alumnos de nivel secundario de ese distrito: ALUMNOS Ordenado por Escuela, A\u00f1o, Divisi\u00f3n Escuela A\u00f1o Divisi\u00f3n Nombre Cant_Inasistencias Se introduce como dato el n\u00famero de distrito y la cantidad de d\u00edas de clase dictados en el a\u00f1o. El archivo est\u00e1 ordenado por n\u00famero de escuela, a\u00f1o y divisi\u00f3n. Los alumnos que superan el 20% de las inasistencias est\u00e1n en situaci\u00f3n de LIBRES, de lo contrario son REGULARES. Se desea conocer: Para cada divisi\u00f3n: - Cantidad de alumnos Para cada a\u00f1o: - Cantidad total de alumnos libres - Cantidad de alumnos regulares - Cantidad total de alumnos Todas las escuelas: - Cantidad total de alumnos - Porcentaje de alumnos libres. - Promedio de inasistencias por alumnos.","title":"Ejercicio 2.2.15"},{"location":"practica/2.2/#mezcla","text":"","title":"Mezcla"},{"location":"practica/2.2/#ejercicio-2216","text":"Construir un algoritmo que a partir de un fichero de pel\u00edculas nuevas conteniendo: PELICULAS_NUEVAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno y otro fichero de peliculas existentes, ambos ordenados por pel\u00edcula, PELICULAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno Genere un \u00fanico archivo (con el mismo formato de los ficheros de entrada) que contenga todas las peliculas. Considerar que hay un solo registro por pel\u00edcula y no se repiten entre ficheros.","title":"Ejercicio 2.2.16"},{"location":"practica/2.2/#ejercicio-2217","text":"La Secretaria Academica de la Facultad lanza un proyecto para incentivar a aquellos alumnos que realizaron el Cursillo de Ingreso a la Universidad y no lograron aprobarlo en los turnos de Agosto y Febrero, de manera de brindarles apoyo Academico con el fin de que, en el Cursillo del a\u00f1o siguiente puedan aprobar los examenes necesarios e ingresar a la Universidad. Para esto, dicha Secretaria\u00adnecesita crear un archivo donde se encuentren todos los aspirantes que realizaron el Cursillo de Ingreso en ambos turnos, y no lograron aprobarlo. Los datos correspondientes a cada uno de los turnos del Cursillo dictado est\u00e1n almacenados en dos archivos (uno para cada turno), los cuales presentan el siguiente formato: ASPIRANTES Ordenado por DNI DNI ApeyNom Carrera F_Nac Email ColegioSec FechaInscripcion Aprobado (Si/No) UD debe realizar un algoritmo que permita mezclar los archivos Aspirantes (de Agosto y Febrero) y generar un archivo SEGUIMIENTO con el siguiente formato: SEGUIMIENTO Ordenado por DNI DNI ApeyNom Email ColegioSec Al finalizar el proceso informar la cantidad de aspirantes que se grabaron en el archivo SEGUIMIENTO.","title":"Ejercicio 2.2.17"},{"location":"practica/2.2/#ejercicio-2218","text":"Un supermercado desea conocer la totalidad de unidades existentes de cada art\u00edculo a fin de hacer un control de stock y decidir si se deben comprar nuevas unidades o redistribuir la mercader\u00eda existente. El supermercado posee dos sucursales, cada una de las cuales envi\u00f3 su informaci\u00f3n en un fichero con el siguiente formato: ARTICULOS Cod_Prod Tipo Marca Descripci\u00f3n Cant_Unidades Escribir un algortimo que permita obtener un \u00fanico fichero de salida, con el mismo formato, que contenga la informaci\u00f3n solicitada y adem\u00e1s, emita un listado con los siguientes datos: Cod_Prod Tipo Marca Descripci\u00f3n Cant_Suc_1 Cant_Suc_2 Total_Unidades","title":"Ejercicio 2.2.18"},{"location":"practica/2.2/#actualizacion","text":"","title":"Actualizacion"},{"location":"practica/2.2/#ejercicio-2219","text":"En una Empresa Farmac\u00e9utica se posee un archivo MAE_REMEDIOS (ordenado por Clave: Farmacia + Medicamento), el que se actualiza semanalmente, a traves de la informaci\u00f3n que se encuentra cargada en un archivo de MOVIMIENTOS (ordenado por Clavem: Farmacia + Medicamento, y Cod_Mov), de la siguiente forma: Si Clave ( MAE_REMEDIOS ) es menor que Clavem ( MOVIMIENTOS ), simplemente se transfieren los datos del Maestro a la salida y se graban. Si Clave ( MAE_REMEDIOS ) es igual a Clavem ( MOVIMIENTOS ) y el Codmov es 1, se considera error y se lista un mensaje indicando el tipo de error; pero si el Codmov es 2, entonces es un remedio que deja de fabricarse y se transfiere el registro al archivo de Remedios vencidos ( REM_VENC ) ; pero si el Cod_Mov es 3, se modifica la cantidad actual con la cantidad recibida. Si Clave ( MAE_REMEDIOS ) es mayor que Clavem ( MOVIMIENTOS ) y el Codmov es 1, se incorpora el remedio a nuestro Vademecum, considerando que la cantidad recibida configura la cantidad actual y la Fecha_Vencimiento es 30 d\u00edas posterior a la fecha actual; pero si el Codmov es 2 o 3 se considera error y se deben producir los correspondientes mensajes de error. Se considera que solo existe un registro de movimiento para cada registro del maestro. MAE_REMEDIOS Ordenado por Farmacia y Medicamento Farmacia Medicamento Cant_Actual Fecha_Vencimiento MOVIMIENTOS Ordenado por Farmacia, Medicamento y Cod_Mov Farmacia Medicamento Cod_Mov Cant_Recibida REM_VENC Ordenado por Medicamento Medicamento Cant_Vencida","title":"Ejercicio 2.2.19"},{"location":"practica/2.2/#ejercicio-2220","text":"Se desea generar una secuencia, a partir de la secuencia del problema 2.01, donde se actualice la fecha de aprobaci\u00f3n del \u00faltimo ex\u00e1men, para ello se cuenta con informaci\u00f3n del \u00faltimo turno de ex\u00e1men, seg\u00fan el siguiente detalle: EXAMENES Ordenado por Nro_Legajo Nro_Legajo Carrera Cod_Materia Fecha_Examen Nota Se debe considerar que no necesariamente todos los alumnos se presentan en cada turno de ex\u00e1men, y que un alumno puede presentarse a rendir m\u00e1s de una materia en un mismo turno. Sup\u00f3nganse ambas secuencias ordenadas por N\u00famero de Legajo.","title":"Ejercicio 2.2.20"},{"location":"practica/2.2/#ejercicio-2221","text":"En un pr\u00e1ctico para la Facultad un grupo de alumnos debe implementar una Red Social llamada UTNBook. Para lo cual debe utilizar los siguientes archivos: AMIGOS Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro Cada registro indica la fecha desde que los usuarios son amigos y el \u00faltimo mensaje que un amigo ha escrito en el muro del usuario. NOTIFICACIONES Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Cod_Movimiento Fecha_Amistad Mensaje_Muro Peri\u00f3dicamente se debe actualizar el archivo Amigos, con el fin de que refleje las amistades que posee cada usuario. En el archivo notificaciones pueden existir tres tipos de acciones: la solicitud de una amistad (Cod_mov = 'A'); la eliminaci\u00f3n de una amistad (Cod_mov = 'B'); o la informaci\u00f3n de un mensaje que un amigo ha escrito en el muro del usuario (Cod_mov = 'M'). Considerar que la eliminaci\u00f3n de una amistad implica la baja f\u00edsica de un registro y que hay un solo registro de Notificaciones por cada registro de Amigo.","title":"Ejercicio 2.2.21"},{"location":"practica/2.2/#ejercicio-2222","text":"IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d","title":"Ejercicio 2.2.22"},{"location":"practica/2.2/#ejercicio-2223","text":"Una empresa de distribuci\u00f3n de energ\u00eda el\u00e9ctrica posee un archivo maestro con los siguientes datos de sus clientes (la fecha de \u00faltima lectura son las mediciones realizadas hasta el mes de mayo del 2014): CLIENTE Ordenado por Id_Casa Id_Casa Fecha_Ult_Lectura Cant_Lecturas Prom_Lecturas Tipo_Consumidor El campo tipo de consumidor puede ser: A (cuando el promedio de lectura es menor a 20K) B (cuando el promedio de lectura es menor a 40K) C (cuando el promedio de lectura es igual o supera los 40K) Cuenta adem\u00e1s con el siguiente archivo con datos de las mediciones realizadas en los dos \u00faltimos a\u00f1os (desde junio del 2014 hasta junio del 2016) Mediciones Ordenado por Id_Casa Id_Casa Fecha_Medicion Consumo Se pide actualizar el archivo maestro con la informaci\u00f3n de las lecturas hasta el mes de enero del a\u00f1o 2015 inclusive. Los campos que se deben actualizar son: la fecha de ultima lectura, cantidad de lecturas, el promedio y modificar (en caso de ser necesario) el tipo de consumidor. En caso en que no exista el ID casa (una conexi\u00f3n nueva) se tiene que crear en el maestro y actualizar los otros campos.","title":"Ejercicio 2.2.23"},{"location":"practica/2.2/#ejercicio-2224","text":"Una obra social lleva el control de los costos que le insume cada afiliado. Considerando como costos, los pagos que la misma debe realizar (en conceptos de honorarios, pagos a farmacias, etc) por los distintos servicios que el afiliado utiliza. Para esto la empresa cuenta con un archivo COSTOS_POR_AFILIADO , en el cual se registran la cantidad de atenciones y/o servicios que solicita el empleado y el costo total (en pesos) que la empresa debe pagar por estos. Este archivo est\u00e1 conformado por registros con el siguiente formato, y est\u00e1 ordenado Cod_Afiliado COSTOS_POR_AFILIADO Ordenado por Cod_Afiliado Cod_Afiliado Fecha_Alta Fecha_Baja Cant_Servicios Costo Cada viernes en la organizaci\u00f3n, se lleva a cabo un proceso de actualizaci\u00f3n del archivo COSTOS_POR_AFILIADO . Para poder realizarlo se cuenta con un archivo SERVICIOS_SEMANALES , ordenado por cod_afiliado y fecha_at, en el cual se registran los servicios que solicitaron los afiliados durante cada semana. Cada registro de este archivo presenta el siguiente formato, SERVICIOS_SEMANALES Ordenado por Cod_Afiliado Cod_Afiliado Fecha_At Cod_Servicio Costo En el archivo SERVICIOS_SEMANALES puede existir m\u00e1s de un registro por cada afiliado. Para realizar el proceso de actualizaci\u00f3n se deben tener en cuenta las siguientes consideraciones. Si alg\u00fan Cod_Afiliado de serviciosSemanales, no se encuentra en ning\u00fan registro del archivo COSTOS_POR_AFILIADO, y el primer Cod_Servicio asociado al mismo es igual a 001 entonces se trata de un nuevo afiliado que fue dado de alta. Si Cod_Afiliado de serviciosSemanales es igual al de COSTOS_POR_AFILIADO y el Cod_Servicio es igual a 000 se trata de un afiliado que fue dado de baja y se considera como fecha de baja el valor que reside en Fecha_At. Si en cambio, el Cod_Servicio tiene alg\u00fan otro valor este representa un servicio o atenci\u00f3n que solicit\u00f3 el afiliado; por lo tanto deben contabilizarse la cantidad de servicios que solicit\u00f3; como as\u00ed tambi\u00e9n los costos que estos insumen. Si alg\u00fan Cod_Afiliado de COSTOS_POR_AFILIADO no se encuentra en el archivo SERVICIOS_SEMANALES, se trata de un afiliado que no utiliz\u00f3 los servicios en la semana que se realiza la actualizaci\u00f3n. Cualquier otro caso distinto a los considerados anteriormente se toma como un error, y deben ser informados por pantalla; indicando claramente el motivo del error.","title":"Ejercicio 2.2.24"},{"location":"practica/2.2/#ejercicio-2225","text":"IDEM 2.21 pero suponiendo que hay mas de un registro de notificaciones por cada registro de amigos.","title":"Ejercicio 2.2.25"},{"location":"practica/2.21/","text":"2.2. Secuencias de datos elementales EXTRAS \u00b6 Ejercicio 2.2.1 \u00b6 Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca una secuencia de salida de caracteres; la que contendr\u00e1 solo los caracteres \u201cnum\u00e9ricos\u201d correspondientes a d\u00edgitos impares encontrados en la secuencia de entrada. Ejemplo: Si en la entrada viniera A125EB% en la salida deber\u00eda ir 15 . Al final del proceso informar: Cuantos d\u00edgitos impares encontr\u00f3 Cuantos d\u00edgitos pares Total de caracteres \u201cnum\u00e9ricos\u201d (d\u00edgitos) y porcentaje de pares e impares Ejercicio 2.2.2 \u00b6 Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca 2 secuencias de salida, una con los caracteres \"num\u00e9ricos\" y otra con los que no lo son. Informar al final, cantidad de caracteres de cada secuencia de salida Ejemplo: Si en la secuencia de entrada viniera A125EB% en la salida deber\u00eda ir salida1 --> 125 salida2 --> AEB% Ejercicio 2.1.3 \u00b6 Escribir un algoritmo que permita desglosar una secuencia de enteros que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra. Ejemplo secuencia de entrada. 2, 5, 8, 11, 14, 17,15, 10,11,20, 44,12,14,16\u2026. Secuencia de salida 1 2,5,8, 11, 14, 17, 10,11,20, 44\u2026 Secuencia de salida 2 15, 12,14,16 y si te animas...: adem\u00e1s de lo solicitado anteriormente, se pide: obtener la suma de los valores de cada secuencia y al final informar el mayor valor (de esas sumas). Ejercicio 2.1.4 \u00b6 Se dispone de 2 secuencias de caracteres, una contiene caracteres, incluidos espacios y otra contiene caracteres \u201cnum\u00e9ricos\u201d. Se pide crear una nueva secuencia de salida de caracteres donde se copien los caracteres de ambas secuencias en forma alternada, o sea un car\u00e1cter, un digito, un car\u00e1cter, un digito, etc. Ejemplo: Sec1: Para habilitar la funci\u00f3n de Salas para grupos peque\u00f1os para su uso* Sec2: 13481460918460846161334868461086* Salida: P1a3r4a8 1h4\u2026. Analice y responda: Que pasar\u00eda en el caso de que una secuencia de entrada termine antes que la otra? se podr\u00eda cumplir con la consigna? Como modificar\u00eda el algoritmo en el caso de que solicite contar la cantidad de caracteres de cada secuencia y mostrar por pantalla al final del proceso?","title":"2.2. Secuencias de datos elementales extra"},{"location":"practica/2.21/#22-secuencias-de-datos-elementales-extras","text":"","title":"2.2. Secuencias de datos elementales EXTRAS"},{"location":"practica/2.21/#ejercicio-221","text":"Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca una secuencia de salida de caracteres; la que contendr\u00e1 solo los caracteres \u201cnum\u00e9ricos\u201d correspondientes a d\u00edgitos impares encontrados en la secuencia de entrada. Ejemplo: Si en la entrada viniera A125EB% en la salida deber\u00eda ir 15 . Al final del proceso informar: Cuantos d\u00edgitos impares encontr\u00f3 Cuantos d\u00edgitos pares Total de caracteres \u201cnum\u00e9ricos\u201d (d\u00edgitos) y porcentaje de pares e impares","title":"Ejercicio 2.2.1"},{"location":"practica/2.21/#ejercicio-222","text":"Dada una secuencia de caracteres de entrada, desarrollar un algoritmo que produzca 2 secuencias de salida, una con los caracteres \"num\u00e9ricos\" y otra con los que no lo son. Informar al final, cantidad de caracteres de cada secuencia de salida Ejemplo: Si en la secuencia de entrada viniera A125EB% en la salida deber\u00eda ir salida1 --> 125 salida2 --> AEB%","title":"Ejercicio 2.2.2"},{"location":"practica/2.21/#ejercicio-213","text":"Escribir un algoritmo que permita desglosar una secuencia de enteros que contiene monoton\u00edas crecientes (series de elementos consecutivos ordenados crecientemente; cada serie est\u00e1 constituida por un elemento como m\u00ednimo), en dos secuencias de salida, de tal modo que tales monoton\u00edas sean copiadas alternativamente en una de las secuencias resultado o en otra. Ejemplo secuencia de entrada. 2, 5, 8, 11, 14, 17,15, 10,11,20, 44,12,14,16\u2026. Secuencia de salida 1 2,5,8, 11, 14, 17, 10,11,20, 44\u2026 Secuencia de salida 2 15, 12,14,16 y si te animas...: adem\u00e1s de lo solicitado anteriormente, se pide: obtener la suma de los valores de cada secuencia y al final informar el mayor valor (de esas sumas).","title":"Ejercicio 2.1.3"},{"location":"practica/2.21/#ejercicio-214","text":"Se dispone de 2 secuencias de caracteres, una contiene caracteres, incluidos espacios y otra contiene caracteres \u201cnum\u00e9ricos\u201d. Se pide crear una nueva secuencia de salida de caracteres donde se copien los caracteres de ambas secuencias en forma alternada, o sea un car\u00e1cter, un digito, un car\u00e1cter, un digito, etc. Ejemplo: Sec1: Para habilitar la funci\u00f3n de Salas para grupos peque\u00f1os para su uso* Sec2: 13481460918460846161334868461086* Salida: P1a3r4a8 1h4\u2026. Analice y responda: Que pasar\u00eda en el caso de que una secuencia de entrada termine antes que la otra? se podr\u00eda cumplir con la consigna? Como modificar\u00eda el algoritmo en el caso de que solicite contar la cantidad de caracteres de cada secuencia y mostrar por pantalla al final del proceso?","title":"Ejercicio 2.1.4"},{"location":"practica/2.3/","text":"2.3. Archivos Indexados \u00b6 Ejercicio 2.3.1.a \u00b6 Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Numero Factura Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio Ejercicio 2.3.1.b \u00b6 Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Total Facturado Cantidad de Facturas Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio Ejercicio 2.3.2 \u00b6 Una empresa dispone de un fichero secuencial con datos de sus empleados, ordenado por n\u00famero de sucursal, y categor\u00eda, con los siguientes datos: EMPLEADOS Ordenado por Nro_Sucursal, Categoria Nro_Sucursal Categoria (A,B,C) Nombre_Empleado Cod_Curso Tecnico (si,no) Y un fichero con datos de cursos, indexado por c\u00f3digo de curso: CURSO Indexado por Cod_Curso Cod_Curso Nombre Fecha Cant_Horas Emitir un listado informando: Para cada empleado: sucursal, categor\u00eda, nombre del empleado y nombre del curso que debe realizar. Por sucursal, categor\u00eda y toda la empresa: Total empleados t\u00e9cnicos Total empleados no t\u00e9cnicos Total empleados Ejercicio 2.3.3 \u00b6 Los automovilistas pasan por el peaje del Puente Gral. Belgrano y deben pagar seg\u00fan su categor\u00eda, pero adem\u00e1s, si ya han pasado previamente dentro del d\u00eda tienen pase libre. Teniendo en cuenta el archivo siguiente, construya el algoritmo que realice lo que corresponda: genere el comprobante, indicando el importe a pagar o emita un mensaje indicando que ya pas\u00f3 anteriormente. Adem\u00e1s indique cuales deber\u00edan ser los datos de entrada. PEAJE Indexado por Patente, Fecha Patente XXX-NNN Fecha N(8) Ult_Hora N(4) Costo XXX,XX Costo por categoria Categoria Costo 1 1,20 2 2,50 3 4,00 4 5,00 Ejercicio 2.3.4 \u00b6 Crear un algoritmo que simule el trabajo de una caja de supermercado. El algoritmo debe permitir imprimir el ticket de compra y realizar el descuento de stock del producto. Al generar el comprobante del ticket debe guardar los datos en los archivos TICKET y DETALLE_TICKET (el cliente es: \"consumidor final\" y el NroTicket se genera autom\u00e1ticamente, mediante la funci\u00f3n OBTENER_TICKET). Archivos: PRODUCTOS Indexado por Cod_Prod Cod_Prod Nombre Stock Precio TICKET Indexado por Nro_Ticket Nro_Ticket Fecha Cliente DETALLE_TICKET Indexado por Nro_Ticket Nro_Ticket Nro_Linea Cod_Prod Cantidad Comprobante: Empresa: ...................................... CUIT: .... - ............ - ... Fecha: ... / ... / ... Cliente ................................................................................................................................. Producto Cantidad Subtotal .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. Total .............................. Ejercicio 2.3.5 \u00b6 Para poder comprar d\u00f3lares en una entidad bancaria al precio oficial (\\$9,40), el beneficiario, debe tener un ingreso promedio en los \u00faltimos 12 meses equivalente a dos veces el sueldo m\u00ednimo vital y m\u00f3vil (el cual en la actualidad es de \\$5000 por mes). Luego, con el sueldo del mes actual, solo se permite comprar por un importe no superior al 30% del mismo. Por ej.: si una persona tiene un sueldo de \\$10.000, desde septiembre del a\u00f1o pasado, al dia de hoy esa persona cumple la condici\u00f3n para comprar y puede comprar d\u00f3lares por un monto m\u00e1ximo de \\$3.000 (equivalente a U$S 319). Para ello se cuenta con dos archivos indexados: CABECERA_SUELDO Indexado por DNI, Periodo, Nro_Recibo DNI N(8) Periodo N(6) Nro_Recibo N(15) ApyNom AN(50) Empresa AN(50) El periodo est\u00e1 representado por 6 caracteres num\u00e9ricos dispuestos de forma de a\u00f1o/mes (aaaamm). El n\u00famero de recibo (Nro_Recibo) es \u00fanico. Una persona puede tener varios recibos de sueldo. La clave de este archivo es DNI, Periodo y Nro_Recibo. RECIBO Indexado por Nro_Recibo Nro_Recibo N(15) Concepto N(8) Tipo (0..2) Monto N(15,2) El campo tipo puede contener los siguientes valores: 0 - Sueldo b\u00e1sico, 1 \u2013 Otros Ingresos, 2 \u2013 Descuentos. Para calcular el sueldo m\u00ednimo se suman el sueldo (tipo 0), y los otros ingresos (tipo 1), NO se restan los descuentos. La clave es Nro_Recibo. Dado el escenario descripto, se pide escribir dos algoritmos: Que el empleado del Banco ingrese un n\u00famero de documento de alg\u00fan interesado en comprar d\u00f3lares, y le devuelva si est\u00e1 habilitado o no para comprar y, en caso positivo, cu\u00e1l es el monto m\u00e1ximo en pesos que se le autoriza. Si el interesado desea comprar, solicite el monto en pesos que destinar\u00e1 a la compra, el cual deber\u00e1 ser descontado de su cuenta. Los datos de la cuenta est\u00e1n en un archivo indexado con la siguiente estructura (indexado por DNI): DNI N(8) Nro_Cuenta N(25) Saldo N(15,2) Los puntos a) y b) se repiten hasta que el operador (empleado del Banco) indique que desea finalizar. Procesar peticiones de compra, de acuerdo a un archivo de entrada de peticiones, evaluando si es posible realizar la operaci\u00f3n o no. Si no es posible, indicar cual es el motivo: 1 \u2013 No tiene el ingreso promedio suficiente, o 2 \u2013 Pide m\u00e1s del 30 % de su sueldo actual. PETICIONES DNI N(8) Cant_Soli N(15,2) El resultado de la evaluaci\u00f3n se debe grabar en un nuevo archivo de salida con el siguiente formato: SALIDA DNI N(8) Cant_Soli N(15,2) Pudo (si,no) Error 1..2 Ejercicio 2.3.6 \u00b6 Una Municipalidad debe liquidar las patentes de su parque automotor para el cuarto trimestre del a\u00f1o e imprimir un padr\u00f3n de cobros y deudas, con cortes de importe por grupo, categor\u00eda y a\u00f1o de fabricaci\u00f3n. Los archivos son: AUTOS Ordenado por CLAVE Grupo N(2) Categoria 1..50 Anio_Fab N(4) Nro_Patente N(8) DNI AN(8) ApyNom AN(25) Domicilio AN(30) DEUDAS Indexado por CLAVED Nro_Patente N(8) Anio_Deuda N(4) Trimestre N(1) Importe N(5,2) Para el trimestre actual, la cuota a abonar viene en el siguiente archivo: CUOTAS Indexado por CLAVEC Grupo N(2) Categoria 1..50 Anio_Fab N(4) Importe N(5,2) Antes de imprimir el rengl\u00f3n correspondiente a cada nro de patente se debe verificar si existen deudas pendientes, en cuyo caso se sumaran todos los importes adeudados y se consignar\u00e1n en la columna de deudas. PADRON CLAVE DNI APYNOM DOMIC DEUDA 4to TRIMESTRE ..... ... ...... ..... $ XXX,XX $ XXX,XX TOTAL $ XXX,XX $ XXX,XX Ejercicio 2.3.7 \u00b6 Crear un algoritmo que imprima un reporte como el que se indica, incluyendo totales por Obra Social y Cl\u00ednica de liquidaciones a m\u00e9dicos. Los archivos que intervienen son: LIQUIDACIONES Ordenado por O.S. y Clinica O.S. Clinica Nro_Leg Mes Anio Bruto Descuento_AFIP Descuento_DGR Neto = Bruto \u2013 (Desc_AFIP + Desc_DGR) OBRAS_SOCIALES Indexado por Cod_Os Cod_OS Nombre CL\u00cdNICAS Indexado por Cod_Cli Cod_Cli Nombre M\u00c9DICOS Indexado por Nro_Leg Nro_Leg ApyNom Especialidad DNI Reporte: Obra Social: Clinica: M\u00e9dicos Nro Legajo Nombre Neto ............................ ................... ................... ............................ ................... ................... Total Cl\u00ednica ................... Total Obra Social ................... Ejercicio 2.3.8 \u00b6 Los alumnos que desarrollaban el proyecto UTNBook (ejercicio 2.23) han decidido modificar parte de la aplicaci\u00f3n para que esta tenga mayor interacci\u00f3n con el usuario. Es as\u00ed que decidieron eliminar el archivo de Notificaciones, provocando as\u00ed que la inserci\u00f3n nuevos amigos, la eliminaci\u00f3n de amistades y la escritura en los muros de otras personas est\u00e9 a cargo del usuario. Con estas consideraciones trabajaron con el siguiente archivo: AMIGOS Indexado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro El proceso para agregar o eliminar amigos y escribir en los muros de estos es ahora el siguiente: El usuario, al iniciar la sesi\u00f3n, ingresa su C\u00f3digo de Usuario y el C\u00f3digo del amigo. Luego, puede seleccionar tres opciones distintas: Agregar Amigo; Eliminar Amigo y Escribir en el Muro. Si selecciona Agregar Amigo se realizan las acciones necesarias para incorporar esta nueva amistad al usuario, y en caso de no poder realizarse, se muestra un mensaje por pantalla explicando el motivo que imposibilita la amistad. (por ej. Cod_Usuario inexistente, Amistad entre Usuario y Amigo ya existente, etc.). En cambio, si selecciona Eliminar Amigo el algoritmo deber\u00e1 eliminar la amistad en caso de existir, en caso contrario informar el error por pantalla. Por \u00faltimo, al seleccionar Escribir en el Muro el usuario debe ingresar el mensaje que desea escribir a su amigo y luego el algoritmo deber\u00e1 registrar este mensaje. De ser necesario informar alg\u00fan error que pueda ocurrir (por ej. Amistad entre el Usuario y Amigo inexistente, etc). Ejercicio 2.3.9 \u00b6 Pepsico S.A.I.C. desea que Ud. realice el algoritmo para poner al corriente los saldos de sus clientes y el stock de la empresa. Para ello cuentan con: CLIENTES Indexado por ClienteID ClienteID Cliente_Nombre Cliente_CUIT Cliente_Saldo DETALLE_CLIENTES Indexado por Nro_Operacion Nro_Operacion Fecha_Operacion ClienteID Importe Factura_Numero VENTAS Ordenado por Venta_Numero Venta_Numero Venta_Fecha Factura_Numero ProductoID Cantidad_Vendida ClienteID PRODUCTOS Indexado por ProductoID ProductoID Stock Producto_Detalle Costo_Unitario Se debe actualizar el saldo del cliente y adem\u00e1s agregar el detalle de la compra que figura en el archivo de Ventas al archivo Detalle_Clientes, por cada venta realizada se deber\u00e1 descontar la cantidad vendida del stock. Por final del proceso se desea saber el total de productos vendidos, y un listado de los clientes con su saldo actualizado. Ejercicio 2.3.10 \u00b6 Una empresa dedicada a la venta de combustibles para automotores anunci\u00f3 una promoci\u00f3n mediante la cual los clientes pueden acceder a descuentos importantes. En cada carga los clientes suman 10 puntos por cada \\$100 de combustible, y una vez que el cliente llega a los 100 puntos, este los puede canjear por un descuento de $100 en el importe total. La cantidad de puntos que tiene cada cliente est\u00e1 almacenado en el archivo indexado PUNTOS el cual tiene el siguiente formato: PUNTOS Indexado por DNI DNI Cant_Puntos Ult_Carga Los datos de cada cliente se encuentran almacenados en el archivo CLIENTE tambi\u00e9n indexado con el siguiente formato CLIENTE Indexado por DNI DNI Ape_Nom Edad Ciudad Se pide realizar el algoritmo que permita: Realizar la carga interactiva de las cargas de combustible (ingresando monto), actualizando la cantidad de Puntos y la Fecha de \u00daltima Carga en el archivo PUNTOS. Si no existe el Cliente, se lo debe inicializar en ambos archivos con los datos correspondientes. Permitir al cliente aplicar descuentos a las cargas realizadas siempre y cuando tenga puntos suficientes (s\u00f3lo se puede canjear 100 puntos por carga). Determinar la cantidad de cargas realizadas de usuarios no existentes. Ejercicio 2.3.11 \u00b6 Una empresa dedicada a la venta de combustibles para automotores anunci\u00f3 una promoci\u00f3n mediante la cual los clientes pueden acceder a beneficios importantes. En cada carga los clientes suman 10 puntos por cada $100 de combustible y dependiendo del medio de pago se le aplica un factor multiplicador, el cual se encuentra en un arreglo (ya est\u00e1 cargado). Los medios de pago posible son: Efectivo, Debito o Credito La cantidad de puntos que tiene cada cliente est\u00e1n almacenados en el archivo indexado PUNTOS el cual tiene el siguiente formato: PUNTOS Indexado por DNI DNI Cant_Puntos Ult_Carga Los datos de cada cliente se encuentran almacenados en el archivo CLIENTE tambi\u00e9n indexado con el siguiente formato CLIENTE Indexado por DNI DNI Ape_Nom Edad Ciudad Se pide realizar el algoritmo que permita: Actualizar el archivo PUNTOS a partir del siguiente archivo secuencial (puede haber m\u00e1s de una carga por cliente), agregando los clientes que no existen en los archivos anteriores cuando sea necesario CARGAS Indexado por DNI DNI Medio_Pago Ape_Nom Fecha Ciudad Determinar la cantidad de cargas mayor a $1000 Informar la cantidad de Clientes nuevos cargados","title":"2.4. Archivos Indexados"},{"location":"practica/2.3/#23-archivos-indexados","text":"","title":"2.3. Archivos Indexados"},{"location":"practica/2.3/#ejercicio-231a","text":"Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Numero Factura Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio","title":"Ejercicio 2.3.1.a"},{"location":"practica/2.3/#ejercicio-231b","text":"Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Total Facturado Cantidad de Facturas Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio","title":"Ejercicio 2.3.1.b"},{"location":"practica/2.3/#ejercicio-232","text":"Una empresa dispone de un fichero secuencial con datos de sus empleados, ordenado por n\u00famero de sucursal, y categor\u00eda, con los siguientes datos: EMPLEADOS Ordenado por Nro_Sucursal, Categoria Nro_Sucursal Categoria (A,B,C) Nombre_Empleado Cod_Curso Tecnico (si,no) Y un fichero con datos de cursos, indexado por c\u00f3digo de curso: CURSO Indexado por Cod_Curso Cod_Curso Nombre Fecha Cant_Horas Emitir un listado informando: Para cada empleado: sucursal, categor\u00eda, nombre del empleado y nombre del curso que debe realizar. Por sucursal, categor\u00eda y toda la empresa: Total empleados t\u00e9cnicos Total empleados no t\u00e9cnicos Total empleados","title":"Ejercicio 2.3.2"},{"location":"practica/2.3/#ejercicio-233","text":"Los automovilistas pasan por el peaje del Puente Gral. Belgrano y deben pagar seg\u00fan su categor\u00eda, pero adem\u00e1s, si ya han pasado previamente dentro del d\u00eda tienen pase libre. Teniendo en cuenta el archivo siguiente, construya el algoritmo que realice lo que corresponda: genere el comprobante, indicando el importe a pagar o emita un mensaje indicando que ya pas\u00f3 anteriormente. Adem\u00e1s indique cuales deber\u00edan ser los datos de entrada. PEAJE Indexado por Patente, Fecha Patente XXX-NNN Fecha N(8) Ult_Hora N(4) Costo XXX,XX Costo por categoria Categoria Costo 1 1,20 2 2,50 3 4,00 4 5,00","title":"Ejercicio 2.3.3"},{"location":"practica/2.3/#ejercicio-234","text":"Crear un algoritmo que simule el trabajo de una caja de supermercado. El algoritmo debe permitir imprimir el ticket de compra y realizar el descuento de stock del producto. Al generar el comprobante del ticket debe guardar los datos en los archivos TICKET y DETALLE_TICKET (el cliente es: \"consumidor final\" y el NroTicket se genera autom\u00e1ticamente, mediante la funci\u00f3n OBTENER_TICKET). Archivos: PRODUCTOS Indexado por Cod_Prod Cod_Prod Nombre Stock Precio TICKET Indexado por Nro_Ticket Nro_Ticket Fecha Cliente DETALLE_TICKET Indexado por Nro_Ticket Nro_Ticket Nro_Linea Cod_Prod Cantidad Comprobante: Empresa: ...................................... CUIT: .... - ............ - ... Fecha: ... / ... / ... Cliente ................................................................................................................................. Producto Cantidad Subtotal .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. Total ..............................","title":"Ejercicio 2.3.4"},{"location":"practica/2.3/#ejercicio-235","text":"Para poder comprar d\u00f3lares en una entidad bancaria al precio oficial (\\$9,40), el beneficiario, debe tener un ingreso promedio en los \u00faltimos 12 meses equivalente a dos veces el sueldo m\u00ednimo vital y m\u00f3vil (el cual en la actualidad es de \\$5000 por mes). Luego, con el sueldo del mes actual, solo se permite comprar por un importe no superior al 30% del mismo. Por ej.: si una persona tiene un sueldo de \\$10.000, desde septiembre del a\u00f1o pasado, al dia de hoy esa persona cumple la condici\u00f3n para comprar y puede comprar d\u00f3lares por un monto m\u00e1ximo de \\$3.000 (equivalente a U$S 319). Para ello se cuenta con dos archivos indexados: CABECERA_SUELDO Indexado por DNI, Periodo, Nro_Recibo DNI N(8) Periodo N(6) Nro_Recibo N(15) ApyNom AN(50) Empresa AN(50) El periodo est\u00e1 representado por 6 caracteres num\u00e9ricos dispuestos de forma de a\u00f1o/mes (aaaamm). El n\u00famero de recibo (Nro_Recibo) es \u00fanico. Una persona puede tener varios recibos de sueldo. La clave de este archivo es DNI, Periodo y Nro_Recibo. RECIBO Indexado por Nro_Recibo Nro_Recibo N(15) Concepto N(8) Tipo (0..2) Monto N(15,2) El campo tipo puede contener los siguientes valores: 0 - Sueldo b\u00e1sico, 1 \u2013 Otros Ingresos, 2 \u2013 Descuentos. Para calcular el sueldo m\u00ednimo se suman el sueldo (tipo 0), y los otros ingresos (tipo 1), NO se restan los descuentos. La clave es Nro_Recibo. Dado el escenario descripto, se pide escribir dos algoritmos: Que el empleado del Banco ingrese un n\u00famero de documento de alg\u00fan interesado en comprar d\u00f3lares, y le devuelva si est\u00e1 habilitado o no para comprar y, en caso positivo, cu\u00e1l es el monto m\u00e1ximo en pesos que se le autoriza. Si el interesado desea comprar, solicite el monto en pesos que destinar\u00e1 a la compra, el cual deber\u00e1 ser descontado de su cuenta. Los datos de la cuenta est\u00e1n en un archivo indexado con la siguiente estructura (indexado por DNI): DNI N(8) Nro_Cuenta N(25) Saldo N(15,2) Los puntos a) y b) se repiten hasta que el operador (empleado del Banco) indique que desea finalizar. Procesar peticiones de compra, de acuerdo a un archivo de entrada de peticiones, evaluando si es posible realizar la operaci\u00f3n o no. Si no es posible, indicar cual es el motivo: 1 \u2013 No tiene el ingreso promedio suficiente, o 2 \u2013 Pide m\u00e1s del 30 % de su sueldo actual. PETICIONES DNI N(8) Cant_Soli N(15,2) El resultado de la evaluaci\u00f3n se debe grabar en un nuevo archivo de salida con el siguiente formato: SALIDA DNI N(8) Cant_Soli N(15,2) Pudo (si,no) Error 1..2","title":"Ejercicio 2.3.5"},{"location":"practica/2.3/#ejercicio-236","text":"Una Municipalidad debe liquidar las patentes de su parque automotor para el cuarto trimestre del a\u00f1o e imprimir un padr\u00f3n de cobros y deudas, con cortes de importe por grupo, categor\u00eda y a\u00f1o de fabricaci\u00f3n. Los archivos son: AUTOS Ordenado por CLAVE Grupo N(2) Categoria 1..50 Anio_Fab N(4) Nro_Patente N(8) DNI AN(8) ApyNom AN(25) Domicilio AN(30) DEUDAS Indexado por CLAVED Nro_Patente N(8) Anio_Deuda N(4) Trimestre N(1) Importe N(5,2) Para el trimestre actual, la cuota a abonar viene en el siguiente archivo: CUOTAS Indexado por CLAVEC Grupo N(2) Categoria 1..50 Anio_Fab N(4) Importe N(5,2) Antes de imprimir el rengl\u00f3n correspondiente a cada nro de patente se debe verificar si existen deudas pendientes, en cuyo caso se sumaran todos los importes adeudados y se consignar\u00e1n en la columna de deudas. PADRON CLAVE DNI APYNOM DOMIC DEUDA 4to TRIMESTRE ..... ... ...... ..... $ XXX,XX $ XXX,XX TOTAL $ XXX,XX $ XXX,XX","title":"Ejercicio 2.3.6"},{"location":"practica/2.3/#ejercicio-237","text":"Crear un algoritmo que imprima un reporte como el que se indica, incluyendo totales por Obra Social y Cl\u00ednica de liquidaciones a m\u00e9dicos. Los archivos que intervienen son: LIQUIDACIONES Ordenado por O.S. y Clinica O.S. Clinica Nro_Leg Mes Anio Bruto Descuento_AFIP Descuento_DGR Neto = Bruto \u2013 (Desc_AFIP + Desc_DGR) OBRAS_SOCIALES Indexado por Cod_Os Cod_OS Nombre CL\u00cdNICAS Indexado por Cod_Cli Cod_Cli Nombre M\u00c9DICOS Indexado por Nro_Leg Nro_Leg ApyNom Especialidad DNI Reporte: Obra Social: Clinica: M\u00e9dicos Nro Legajo Nombre Neto ............................ ................... ................... ............................ ................... ................... Total Cl\u00ednica ................... Total Obra Social ...................","title":"Ejercicio 2.3.7"},{"location":"practica/2.3/#ejercicio-238","text":"Los alumnos que desarrollaban el proyecto UTNBook (ejercicio 2.23) han decidido modificar parte de la aplicaci\u00f3n para que esta tenga mayor interacci\u00f3n con el usuario. Es as\u00ed que decidieron eliminar el archivo de Notificaciones, provocando as\u00ed que la inserci\u00f3n nuevos amigos, la eliminaci\u00f3n de amistades y la escritura en los muros de otras personas est\u00e9 a cargo del usuario. Con estas consideraciones trabajaron con el siguiente archivo: AMIGOS Indexado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro El proceso para agregar o eliminar amigos y escribir en los muros de estos es ahora el siguiente: El usuario, al iniciar la sesi\u00f3n, ingresa su C\u00f3digo de Usuario y el C\u00f3digo del amigo. Luego, puede seleccionar tres opciones distintas: Agregar Amigo; Eliminar Amigo y Escribir en el Muro. Si selecciona Agregar Amigo se realizan las acciones necesarias para incorporar esta nueva amistad al usuario, y en caso de no poder realizarse, se muestra un mensaje por pantalla explicando el motivo que imposibilita la amistad. (por ej. Cod_Usuario inexistente, Amistad entre Usuario y Amigo ya existente, etc.). En cambio, si selecciona Eliminar Amigo el algoritmo deber\u00e1 eliminar la amistad en caso de existir, en caso contrario informar el error por pantalla. Por \u00faltimo, al seleccionar Escribir en el Muro el usuario debe ingresar el mensaje que desea escribir a su amigo y luego el algoritmo deber\u00e1 registrar este mensaje. De ser necesario informar alg\u00fan error que pueda ocurrir (por ej. Amistad entre el Usuario y Amigo inexistente, etc).","title":"Ejercicio 2.3.8"},{"location":"practica/2.3/#ejercicio-239","text":"Pepsico S.A.I.C. desea que Ud. realice el algoritmo para poner al corriente los saldos de sus clientes y el stock de la empresa. Para ello cuentan con: CLIENTES Indexado por ClienteID ClienteID Cliente_Nombre Cliente_CUIT Cliente_Saldo DETALLE_CLIENTES Indexado por Nro_Operacion Nro_Operacion Fecha_Operacion ClienteID Importe Factura_Numero VENTAS Ordenado por Venta_Numero Venta_Numero Venta_Fecha Factura_Numero ProductoID Cantidad_Vendida ClienteID PRODUCTOS Indexado por ProductoID ProductoID Stock Producto_Detalle Costo_Unitario Se debe actualizar el saldo del cliente y adem\u00e1s agregar el detalle de la compra que figura en el archivo de Ventas al archivo Detalle_Clientes, por cada venta realizada se deber\u00e1 descontar la cantidad vendida del stock. Por final del proceso se desea saber el total de productos vendidos, y un listado de los clientes con su saldo actualizado.","title":"Ejercicio 2.3.9"},{"location":"practica/2.3/#ejercicio-2310","text":"Una empresa dedicada a la venta de combustibles para automotores anunci\u00f3 una promoci\u00f3n mediante la cual los clientes pueden acceder a descuentos importantes. En cada carga los clientes suman 10 puntos por cada \\$100 de combustible, y una vez que el cliente llega a los 100 puntos, este los puede canjear por un descuento de $100 en el importe total. La cantidad de puntos que tiene cada cliente est\u00e1 almacenado en el archivo indexado PUNTOS el cual tiene el siguiente formato: PUNTOS Indexado por DNI DNI Cant_Puntos Ult_Carga Los datos de cada cliente se encuentran almacenados en el archivo CLIENTE tambi\u00e9n indexado con el siguiente formato CLIENTE Indexado por DNI DNI Ape_Nom Edad Ciudad Se pide realizar el algoritmo que permita: Realizar la carga interactiva de las cargas de combustible (ingresando monto), actualizando la cantidad de Puntos y la Fecha de \u00daltima Carga en el archivo PUNTOS. Si no existe el Cliente, se lo debe inicializar en ambos archivos con los datos correspondientes. Permitir al cliente aplicar descuentos a las cargas realizadas siempre y cuando tenga puntos suficientes (s\u00f3lo se puede canjear 100 puntos por carga). Determinar la cantidad de cargas realizadas de usuarios no existentes.","title":"Ejercicio 2.3.10"},{"location":"practica/2.3/#ejercicio-2311","text":"Una empresa dedicada a la venta de combustibles para automotores anunci\u00f3 una promoci\u00f3n mediante la cual los clientes pueden acceder a beneficios importantes. En cada carga los clientes suman 10 puntos por cada $100 de combustible y dependiendo del medio de pago se le aplica un factor multiplicador, el cual se encuentra en un arreglo (ya est\u00e1 cargado). Los medios de pago posible son: Efectivo, Debito o Credito La cantidad de puntos que tiene cada cliente est\u00e1n almacenados en el archivo indexado PUNTOS el cual tiene el siguiente formato: PUNTOS Indexado por DNI DNI Cant_Puntos Ult_Carga Los datos de cada cliente se encuentran almacenados en el archivo CLIENTE tambi\u00e9n indexado con el siguiente formato CLIENTE Indexado por DNI DNI Ape_Nom Edad Ciudad Se pide realizar el algoritmo que permita: Actualizar el archivo PUNTOS a partir del siguiente archivo secuencial (puede haber m\u00e1s de una carga por cliente), agregando los clientes que no existen en los archivos anteriores cuando sea necesario CARGAS Indexado por DNI DNI Medio_Pago Ape_Nom Fecha Ciudad Determinar la cantidad de cargas mayor a $1000 Informar la cantidad de Clientes nuevos cargados","title":"Ejercicio 2.3.11"},{"location":"practica/3/","text":"3. Arreglos \u00b6 Ejercicio 3.1 \u00b6 Para cada una de las consignas siguientes, genere un algoritmo que permita solucionarla (3 algoritmos) usando un arreglo de 100 n\u00fameros enteros: Almacenar 100 n\u00fameros. Localizar el n\u00famero de mayor valor y el de menor valor, informar sus valores y sus posiciones. Contar y sumar todos los n\u00fameros pares. Ejercicio 3.2 \u00b6 Genere un \u00fanico algoritmo que resuelva las 3 consignas del ejercicio anterior. Ejercicio 3.3 \u00b6 Dados un vector de reales a de n elementos, con n \u2208 N 0 , y un n\u00famero real x >= 0, calcular el valor y tal que: $$y = \\sum_{i=1}^n (a_i \\times x^i)$$ Ejercicio 3.4 \u00b6 Considerando un arreglo de 50 n\u00fameros enteros, confeccione un algoritmo para resolver las siguientes consignas: Modificar el arreglo dado, de modo que todos sus elementos sean m\u00faltiplos de 3. Crear otro arreglo que contenga los n\u00fameros que no cumplieron la condici\u00f3n. Informar cu\u00e1ntos n\u00fameros cumplieron la condici\u00f3n. Ejercicio 3.5 \u00b6 Dados 2 vectores: A: arreglo [1 .. 30] de reales B: arreglo [1 .. 30] de reales Ambos ordenados de forma creciente, escribir un algoritmo que realice la mezcla de ambos para obtener otro vector tambien ordenado de forma creciente C: arreglo [1 .. 60] de reales Ejercicio 3.6 \u00b6 Escribir un algoritmo que permita cargar un arreglo de N nombres, considerando que cada nombre debe tener entre 1 y 10 caracteres. Ejercicio 3.7 \u00b6 Escribir un algoritmo que permita localizar un nombre en un arreglo de N nombres, ordenados alfab\u00e9ticamente. Cada nombre puede tener, como m\u00e1ximo, 10 caracteres. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9. Ejercicio 3.8 \u00b6 Repita el ejercicio anterior, pero suponiendo que se precisa localizar todos los nombres que comienzan con una letra dada. Ejercicio 3.9 \u00b6 Se posee un arreglo de 200 libros con el siguiente formato: NRO_LIBRO TITULO AUTOR CANT_HOJAS ordenado por AUTOR y se presentan las siguientes premisas: Se necesita saber que libros se poseen de \u201cNicklaus Wirth\u201d. Se necesita saber en qu\u00e9 posici\u00f3n se encuentra \u201cAlgoritmos + Estructuras de Datos=Programa\u201d. Se necesita saber cual es el libro de \u201cNicklaus Wirth\u201d de mayor volumen. Ejercicio 3.10 \u00b6 Dado un arreglo de 50 elementos, cada uno de los cuales tiene los siguientes datos: C\u00f3digo de localidad y Lluvia ca\u00edda en un a\u00f1o. Escribir un algoritmo que permita saber dada una localidad, cuanto llovi\u00f3 en el a\u00f1o. Aplicar el m\u00e9todo m\u00e1s adecuado considerando que el arreglo esta ordenado por C\u00f3digo de localidad. Ejercicio 3.11 \u00b6 Dado un arreglo de 100 elementos, que contiene la siguiente informaci\u00f3n sobre videos: T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron, Alquilado (si/no); y est\u00e1 ordenado por el T\u00edtulo de la pel\u00edcula, dise\u00f1e un algoritmo que, ingresando una categor\u00eda, liste todas las pel\u00edculas que pertenecen a dicha categor\u00eda. Ejercicio 3.12 \u00b6 A partir del arreglo de videos descrito en el ejercicio anterior, dise\u00f1e un algoritmo que permita atender un pedido de alquiler, para lo cual debe verificar si es posible o no y, cuando corresponda, actualizar la cantidad de personas que vieron dicha pel\u00edcula. Ejercicio 3.13 \u00b6 Se precisa ordenar un arreglo de N alumnos de mayor a menor, de acuerdo a la cantidad de materias aprobadas. Cada elemento del arreglo contiene Nro. de Legajo y Cantidad de materias aprobadas. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9. Ejercicio 3.14 \u00b6 El mes que viene se realizar\u00e1 en Buenos Aires el desfile \u201cAlta Moda 2018\u201d, el cual re\u00fane a los dise\u00f1adores m\u00e1s reconocidos del pa\u00eds. Para organizar las pasadas, se dispone de un arreglo por dise\u00f1ador, con la siguiente informaci\u00f3n: nombre de el/la modelo y altura. La directora del evento necesita que se imprima cada lista ordenada de acuerdo a la altura de el/la modelo. Escribir un algoritmo que permita ingresar los datos de cada dise\u00f1ador e imprimirlos de acuerdo a lo solicitado. Ejercicio 3.15 \u00b6 Se precisa ordenar un arreglo de enteros de menor a mayor, eliminando los n\u00fameros repetidos Ejercicio 3.16 \u00b6 Una empresa que comercializa una cierta cantidad de art\u00edculos diferentes desea confeccionar un ranking de ventas de los mismos, a partir de una secuencia ordenada por articulo que contiene: NRO_ARTICULO TIPO CANT_VENDIDA Escribir un algoritmo que emita el ranking deseado en orden decreciente por cantidad. Ejercicio 3.17 \u00b6 Se precisa generar una secuencia con los datos de los 10 videos m\u00e1s vistos de una categor\u00eda, a partir de una secuencia de entrada de 200 registros que contiene el T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron y que est\u00e1 ordenada por el T\u00edtulo de la pel\u00edcula. Ejercicio 3.18 \u00b6 Se precisa dise\u00f1ar una agenda electr\u00f3nica, donde se archivar\u00e1 el nombre, la direcci\u00f3n y el tel\u00e9fono de hasta 50 personas. Dise\u00f1e un algoritmo que permita efectuar consultas, modificaciones, eliminaciones de los datos de una persona y agregados de nuevas personas (s\u00f3lo ser\u00e1 posible incorporar una persona si hay menos de 50 archivadas en la agenda). Los datos se hallan almacenados en una secuencia. Considere que la agenda siempre debe mantenerse ordenada alfab\u00e9ticamente. Ejercicio 3.19 \u00b6 Escribir un algoritmo que emita cu\u00e1l es y d\u00f3nde est\u00e1 ubicado el mayor elemento de cada fila de una matriz, e imprima un mensaje si todos los mayores se encuentran en la misma columna. Ejercicio 3.20 \u00b6 Dadas dos matrices A y B, cuadradas, de 5 x 5, con n\u00fameros enteros, cargar una matriz C, de 5 x 5 teniendo en cuenta las siguientes condiciones: la diagonal principal completar con ceros, en las posiciones que est\u00e1n por encima de la diagonal principal, copiar los correspondientes elementos de la matriz A y en las posiciones que est\u00e1n por debajo de la diagonal principal, copiar los elementos correspondientes de la matriz B. Ejercicio 3.21 \u00b6 Dada una matriz de 6 x 6 de enteros, cuya \u00faltima fila y columna contienen ceros, calcular la suma de cada fila y guardar en la \u00faltima celda de la misma; y la suma de cada columna y guardar en la \u00faltima celda de la misma. Calcular tambi\u00e9n el total general y guardar en la posici\u00f3n (6,6). Ejercicio 3.22 \u00b6 Dada una matriz cuadrada de 5 x 5 de n\u00fameros, sumar filas y columnas y guardar en una matriz de 2 x 5, de modo que la fila 1 contenga la suma de cada fila y la fila 2, la suma de cada columna) Ejercicio 3.23 \u00b6 En un sector de un hospital, donde se encuentran internados 50 pacientes, se toma la temperatura de cada paciente 4 veces al d\u00eda durante una semana. Lectura Dom Lun Mar Mie Jue Vie Sab 1 XX XX XX XX XX XX XX 2 XX XX XX XX XX XX XX 3 XX XX XX XX XX XX XX 4 XX XX XX XX XX XX XX Se dispone de un arreglo con la informaci\u00f3n recopilada de todos los pacientes. Construir un algoritmo que: Liste por pantalla las temperaturas m\u00e1xima y m\u00ednima de cada paciente, indicando el d\u00eda y lectura en la que ocurrieron. Genere un nuevo arreglo que contenga la temperatura promedio por d\u00eda de cada paciente. Ejercicio 3.24 \u00b6 Se cuenta con informaci\u00f3n acerca de los cajeros de un Supermercado, el cual se halla estructurado en 10 cajas registradoras. Dicha informaci\u00f3n est\u00e1 registrada en una secuencia que contiene Apellido y Nombre del empleado, n\u00famero de caja que tiene asignada, importe facturado y horario de facturaci\u00f3n; la secuencia est\u00e1 ordenada alfab\u00e9ticamente por Apellido y Nombre. Se solicita una estad\u00edstica de los importes facturados, discriminado por n\u00famero de caja y franja de horas y adem\u00e1s los montos totales, seg\u00fan el siguiente formato: Cajas 8-10 10-12 12-16 16-18 18-20 Total x Cajas 1 ... ... ... ... ... ... .. ... ... ... ... ... ... 10 ... ... ... ... ... ... Total x horas ... ... ... ... ... ... Ejercicio 3.25 \u00b6 Una F\u00e1brica que posee 4 plantas de producci\u00f3n en nuestro pa\u00eds y compra materia prima a 3 proveedores distintos, desea realizar un control de los montos totales correspondientes a compras realizadas en cada planta durante el \u00faltimo a\u00f1o, discriminados por proveedor y por mes. Para ello dispone de un archivo con los datos de las facturas correspondientes. (Aclaraci\u00f3n: el archivo no est\u00e1 ordenado por ning\u00fan criterio) COMPRAS Nro_Factura Proveedor (A,B,C) Fecha dd/mm/aaaa Nro_Planta 1..4 Importe Ejercicio 3.26 \u00b6 Se dispone de un archivo secuencial de facturas de una empresa de energ\u00eda el\u00e9ctrica, correspondientes a un a\u00f1o, con el siguiente formato: Nro_Factura Nro_Usuario Zona Fecha Consumo Se desea obtener un cuadro estad\u00edstico que informe los consumos y los importes totales facturados por mes discriminados por zona, con el siguiente formato: Zona A Zona B Zona C Zona D Total por mes Enero ... ... ... ... ... Febrero ... ... ... ... ... ... ... ... ... ... ... Diciembre ... ... ... ... ... Total por zona ... ... ... ... Total General La ciudad est\u00e1 dividida en 4 Zonas (A,B,C,D), la tarifa por Kw. que cobra la empresa en cada una de ellas es: Zona A: $ 0,05, Zona B: $ 0,07, Zona C: $ 0,09 y Zona D: $ 0,13. Ejercicio 3.27 \u00b6 Se desea efectuar una estad\u00edstica de ventas. Se cuenta para ello con una secuencia de las facturas emitidas, las cuales son identificadas por un N\u00famero; dicha secuencia contiene informaci\u00f3n relativa al cliente: su N\u00famero y Zona a la cual pertenece, como as\u00ed tambi\u00e9n el Tipo de mercader\u00eda entregada, la Cantidad de unidades, el total gravado, el total exento de IVA y el valor del IVA. Construya un algoritmo que emita por zona, y dentro de la zona por tipo de mercader\u00eda el total de unidades vendidas, el total gravado, el total exento y el total de IVA, y adem\u00e1s un total general con la misma informaci\u00f3n. Hay 9 zonas y 4 tipos de mercader\u00eda. Ejercicio 3.28 \u00b6 La Municipalidad de Resistencia desea obtener una estad\u00edstica de los valores (en $) de los terrenos de la ciudad, discriminados por zona y ubicaci\u00f3n dentro de la manzana (en esquina, interna, etc.), y los totales por zona y ubicaci\u00f3n. El valor de cada final de cada terreno es igual a: Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo de los terrenos con los siguientes datos: Nro_Terreno Zona Ubicacion Superficie Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona. Ejercicio 3.29 \u00b6 Dada una secuencia de texto que contiene informaci\u00f3n sobre mascotas, se desea generar un archivo de mascotas, teniendo en cuenta lo siguiente: En el texto vienen los siguientes datos: nombre de la mascota, encerrado ente asteriscos (*), inmediatamente a continuaci\u00f3n una palabra de tres letras que identifica el tipo de documento y separado por un blanco, 8 posiciones num\u00e9ricas que corresponden al n\u00famero de documento del due\u00f1o, seguidas por un s\u00edmbolo numeral (#) y, a continuaci\u00f3n, la direcci\u00f3n de la persona, finalizando con un signo de fin de interrogaci\u00f3n (?). El final del texto est\u00e1 indicado por un s\u00edmbolo de admiraci\u00f3n (!). Se desconoce la longitud de la direcci\u00f3n, as\u00ed como la del nombre de la mascota. El formato del registro de salida es Tipo_Documento N(1) Numero AN(8) Nombre_Mascota AN(30) Direccion AN(40) Si la sigla es DNI, el tipo es 0, si dice LCE el tipo es 1, si dice LEN el tipo es 2, para PAS es 3, para cualquier otra cadena de letras el tipo es 4. Al final del proceso informar cuantos registros se grabaron en el archivo de salida. Ejercicio 3.30 \u00b6 Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, considerando que las palabras tienen como m\u00e1ximo 10 caracteres. Ejercicio 3.31 \u00b6 Se lleva a cabo una encuesta a fin de anticipar los posibles porcentajes de votos que obtendr\u00e1n cada uno de los 4 partidos pol\u00edticos de mayor peso en las elecciones. Los datos solicitados a los encuestados son: partido al que Algoritmos y Estructuras de Datos 2019 votara, edad, sexo y partido al que vot\u00f3 en las elecciones anteriores. Las respuestas se tabulan de acuerdo a los siguientes criterios: Partidos: P1, P2, P3, P4, Otro, En Blanco, Indeciso Edad: 18-25, 26-35, 36-45, 46-55, 56-65, +65 Sexo: Femenino, Masculino Dise\u00f1e un algoritmo que, utilizando un arreglo de 4 dimensiones (partido al que votara, edad, sexo , partido al que vot\u00f3), permita responder a las siguientes consultas: Cantidad de personas de cierta edad que votar\u00e1n a un Partido dado. Cantidad de personas de un sexo dado que votar\u00e1n a un determinado Partido. Cantidad de personas de cierta edad que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Cantidad de personas de un sexo dado que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Ejercicio 3.32 \u00b6 La municipalidad posee un archivo secuencial con los datos de todos los estacionamientos realizados en el mes de Octubre de 2018 ESTACIONAMIENTOS FECHA: fecha PATENTE: AN(7) HoraDesde: N(2) HoraHasta: N(2) Posta: 1..100 El costo es por multiplos de 1 hora. El costo por hora se calcula considerando la franja horaria del estacionamiento (siempre tomar el mayor costo), las franjas horarias son: de 00 a 06: costo por hora $9 de 07 a 13: costo por hora $14 de 14 a 19: costo por hora $12 de 20 a 23: costo por hora $6 Ejemplo: si una persona estaciona desde las 5 hasta las 10, son 6 horas de estacionamiento (10 - 5 + 1) y como se encuentra en dos franajas horarias se tiene que tomar la de mayor costo ($14 por hora). Por lo tanto el importe generado es 14 x 6 = 84. ( NOTA a efectos de simplificar los calculos, solo calcular el costo de la franja horaria con respecto a la hora desde y la hora hasta). Se pide realizar un algoritmo que permita determinar: Posta con mayor importe generado D\u00eda con mayor cantidad de estacionamientos. En qu\u00e9 d\u00eda y en que posta se gener\u00f3 la mayor cantidad de estacionamientos Otras Preguntas: \u00bfEs posible calcular cual fue la zona horaria con mayor cantidad de estacionamientos? En caso de ser posible, realizar el algoritmo. \u00bfEs posible determinar la cantidad maxima de permanencia que tienen los autos estacionados? En caso de ser posible, realizar el algoritmo.","title":"3. Arreglos"},{"location":"practica/3/#3-arreglos","text":"","title":"3. Arreglos"},{"location":"practica/3/#ejercicio-31","text":"Para cada una de las consignas siguientes, genere un algoritmo que permita solucionarla (3 algoritmos) usando un arreglo de 100 n\u00fameros enteros: Almacenar 100 n\u00fameros. Localizar el n\u00famero de mayor valor y el de menor valor, informar sus valores y sus posiciones. Contar y sumar todos los n\u00fameros pares.","title":"Ejercicio 3.1"},{"location":"practica/3/#ejercicio-32","text":"Genere un \u00fanico algoritmo que resuelva las 3 consignas del ejercicio anterior.","title":"Ejercicio 3.2"},{"location":"practica/3/#ejercicio-33","text":"Dados un vector de reales a de n elementos, con n \u2208 N 0 , y un n\u00famero real x >= 0, calcular el valor y tal que: $$y = \\sum_{i=1}^n (a_i \\times x^i)$$","title":"Ejercicio 3.3"},{"location":"practica/3/#ejercicio-34","text":"Considerando un arreglo de 50 n\u00fameros enteros, confeccione un algoritmo para resolver las siguientes consignas: Modificar el arreglo dado, de modo que todos sus elementos sean m\u00faltiplos de 3. Crear otro arreglo que contenga los n\u00fameros que no cumplieron la condici\u00f3n. Informar cu\u00e1ntos n\u00fameros cumplieron la condici\u00f3n.","title":"Ejercicio 3.4"},{"location":"practica/3/#ejercicio-35","text":"Dados 2 vectores: A: arreglo [1 .. 30] de reales B: arreglo [1 .. 30] de reales Ambos ordenados de forma creciente, escribir un algoritmo que realice la mezcla de ambos para obtener otro vector tambien ordenado de forma creciente C: arreglo [1 .. 60] de reales","title":"Ejercicio 3.5"},{"location":"practica/3/#ejercicio-36","text":"Escribir un algoritmo que permita cargar un arreglo de N nombres, considerando que cada nombre debe tener entre 1 y 10 caracteres.","title":"Ejercicio 3.6"},{"location":"practica/3/#ejercicio-37","text":"Escribir un algoritmo que permita localizar un nombre en un arreglo de N nombres, ordenados alfab\u00e9ticamente. Cada nombre puede tener, como m\u00e1ximo, 10 caracteres. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9.","title":"Ejercicio 3.7"},{"location":"practica/3/#ejercicio-38","text":"Repita el ejercicio anterior, pero suponiendo que se precisa localizar todos los nombres que comienzan con una letra dada.","title":"Ejercicio 3.8"},{"location":"practica/3/#ejercicio-39","text":"Se posee un arreglo de 200 libros con el siguiente formato: NRO_LIBRO TITULO AUTOR CANT_HOJAS ordenado por AUTOR y se presentan las siguientes premisas: Se necesita saber que libros se poseen de \u201cNicklaus Wirth\u201d. Se necesita saber en qu\u00e9 posici\u00f3n se encuentra \u201cAlgoritmos + Estructuras de Datos=Programa\u201d. Se necesita saber cual es el libro de \u201cNicklaus Wirth\u201d de mayor volumen.","title":"Ejercicio 3.9"},{"location":"practica/3/#ejercicio-310","text":"Dado un arreglo de 50 elementos, cada uno de los cuales tiene los siguientes datos: C\u00f3digo de localidad y Lluvia ca\u00edda en un a\u00f1o. Escribir un algoritmo que permita saber dada una localidad, cuanto llovi\u00f3 en el a\u00f1o. Aplicar el m\u00e9todo m\u00e1s adecuado considerando que el arreglo esta ordenado por C\u00f3digo de localidad.","title":"Ejercicio 3.10"},{"location":"practica/3/#ejercicio-311","text":"Dado un arreglo de 100 elementos, que contiene la siguiente informaci\u00f3n sobre videos: T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron, Alquilado (si/no); y est\u00e1 ordenado por el T\u00edtulo de la pel\u00edcula, dise\u00f1e un algoritmo que, ingresando una categor\u00eda, liste todas las pel\u00edculas que pertenecen a dicha categor\u00eda.","title":"Ejercicio 3.11"},{"location":"practica/3/#ejercicio-312","text":"A partir del arreglo de videos descrito en el ejercicio anterior, dise\u00f1e un algoritmo que permita atender un pedido de alquiler, para lo cual debe verificar si es posible o no y, cuando corresponda, actualizar la cantidad de personas que vieron dicha pel\u00edcula.","title":"Ejercicio 3.12"},{"location":"practica/3/#ejercicio-313","text":"Se precisa ordenar un arreglo de N alumnos de mayor a menor, de acuerdo a la cantidad de materias aprobadas. Cada elemento del arreglo contiene Nro. de Legajo y Cantidad de materias aprobadas. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9.","title":"Ejercicio 3.13"},{"location":"practica/3/#ejercicio-314","text":"El mes que viene se realizar\u00e1 en Buenos Aires el desfile \u201cAlta Moda 2018\u201d, el cual re\u00fane a los dise\u00f1adores m\u00e1s reconocidos del pa\u00eds. Para organizar las pasadas, se dispone de un arreglo por dise\u00f1ador, con la siguiente informaci\u00f3n: nombre de el/la modelo y altura. La directora del evento necesita que se imprima cada lista ordenada de acuerdo a la altura de el/la modelo. Escribir un algoritmo que permita ingresar los datos de cada dise\u00f1ador e imprimirlos de acuerdo a lo solicitado.","title":"Ejercicio 3.14"},{"location":"practica/3/#ejercicio-315","text":"Se precisa ordenar un arreglo de enteros de menor a mayor, eliminando los n\u00fameros repetidos","title":"Ejercicio 3.15"},{"location":"practica/3/#ejercicio-316","text":"Una empresa que comercializa una cierta cantidad de art\u00edculos diferentes desea confeccionar un ranking de ventas de los mismos, a partir de una secuencia ordenada por articulo que contiene: NRO_ARTICULO TIPO CANT_VENDIDA Escribir un algoritmo que emita el ranking deseado en orden decreciente por cantidad.","title":"Ejercicio 3.16"},{"location":"practica/3/#ejercicio-317","text":"Se precisa generar una secuencia con los datos de los 10 videos m\u00e1s vistos de una categor\u00eda, a partir de una secuencia de entrada de 200 registros que contiene el T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron y que est\u00e1 ordenada por el T\u00edtulo de la pel\u00edcula.","title":"Ejercicio 3.17"},{"location":"practica/3/#ejercicio-318","text":"Se precisa dise\u00f1ar una agenda electr\u00f3nica, donde se archivar\u00e1 el nombre, la direcci\u00f3n y el tel\u00e9fono de hasta 50 personas. Dise\u00f1e un algoritmo que permita efectuar consultas, modificaciones, eliminaciones de los datos de una persona y agregados de nuevas personas (s\u00f3lo ser\u00e1 posible incorporar una persona si hay menos de 50 archivadas en la agenda). Los datos se hallan almacenados en una secuencia. Considere que la agenda siempre debe mantenerse ordenada alfab\u00e9ticamente.","title":"Ejercicio 3.18"},{"location":"practica/3/#ejercicio-319","text":"Escribir un algoritmo que emita cu\u00e1l es y d\u00f3nde est\u00e1 ubicado el mayor elemento de cada fila de una matriz, e imprima un mensaje si todos los mayores se encuentran en la misma columna.","title":"Ejercicio 3.19"},{"location":"practica/3/#ejercicio-320","text":"Dadas dos matrices A y B, cuadradas, de 5 x 5, con n\u00fameros enteros, cargar una matriz C, de 5 x 5 teniendo en cuenta las siguientes condiciones: la diagonal principal completar con ceros, en las posiciones que est\u00e1n por encima de la diagonal principal, copiar los correspondientes elementos de la matriz A y en las posiciones que est\u00e1n por debajo de la diagonal principal, copiar los elementos correspondientes de la matriz B.","title":"Ejercicio 3.20"},{"location":"practica/3/#ejercicio-321","text":"Dada una matriz de 6 x 6 de enteros, cuya \u00faltima fila y columna contienen ceros, calcular la suma de cada fila y guardar en la \u00faltima celda de la misma; y la suma de cada columna y guardar en la \u00faltima celda de la misma. Calcular tambi\u00e9n el total general y guardar en la posici\u00f3n (6,6).","title":"Ejercicio 3.21"},{"location":"practica/3/#ejercicio-322","text":"Dada una matriz cuadrada de 5 x 5 de n\u00fameros, sumar filas y columnas y guardar en una matriz de 2 x 5, de modo que la fila 1 contenga la suma de cada fila y la fila 2, la suma de cada columna)","title":"Ejercicio 3.22"},{"location":"practica/3/#ejercicio-323","text":"En un sector de un hospital, donde se encuentran internados 50 pacientes, se toma la temperatura de cada paciente 4 veces al d\u00eda durante una semana. Lectura Dom Lun Mar Mie Jue Vie Sab 1 XX XX XX XX XX XX XX 2 XX XX XX XX XX XX XX 3 XX XX XX XX XX XX XX 4 XX XX XX XX XX XX XX Se dispone de un arreglo con la informaci\u00f3n recopilada de todos los pacientes. Construir un algoritmo que: Liste por pantalla las temperaturas m\u00e1xima y m\u00ednima de cada paciente, indicando el d\u00eda y lectura en la que ocurrieron. Genere un nuevo arreglo que contenga la temperatura promedio por d\u00eda de cada paciente.","title":"Ejercicio 3.23"},{"location":"practica/3/#ejercicio-324","text":"Se cuenta con informaci\u00f3n acerca de los cajeros de un Supermercado, el cual se halla estructurado en 10 cajas registradoras. Dicha informaci\u00f3n est\u00e1 registrada en una secuencia que contiene Apellido y Nombre del empleado, n\u00famero de caja que tiene asignada, importe facturado y horario de facturaci\u00f3n; la secuencia est\u00e1 ordenada alfab\u00e9ticamente por Apellido y Nombre. Se solicita una estad\u00edstica de los importes facturados, discriminado por n\u00famero de caja y franja de horas y adem\u00e1s los montos totales, seg\u00fan el siguiente formato: Cajas 8-10 10-12 12-16 16-18 18-20 Total x Cajas 1 ... ... ... ... ... ... .. ... ... ... ... ... ... 10 ... ... ... ... ... ... Total x horas ... ... ... ... ... ...","title":"Ejercicio 3.24"},{"location":"practica/3/#ejercicio-325","text":"Una F\u00e1brica que posee 4 plantas de producci\u00f3n en nuestro pa\u00eds y compra materia prima a 3 proveedores distintos, desea realizar un control de los montos totales correspondientes a compras realizadas en cada planta durante el \u00faltimo a\u00f1o, discriminados por proveedor y por mes. Para ello dispone de un archivo con los datos de las facturas correspondientes. (Aclaraci\u00f3n: el archivo no est\u00e1 ordenado por ning\u00fan criterio) COMPRAS Nro_Factura Proveedor (A,B,C) Fecha dd/mm/aaaa Nro_Planta 1..4 Importe","title":"Ejercicio 3.25"},{"location":"practica/3/#ejercicio-326","text":"Se dispone de un archivo secuencial de facturas de una empresa de energ\u00eda el\u00e9ctrica, correspondientes a un a\u00f1o, con el siguiente formato: Nro_Factura Nro_Usuario Zona Fecha Consumo Se desea obtener un cuadro estad\u00edstico que informe los consumos y los importes totales facturados por mes discriminados por zona, con el siguiente formato: Zona A Zona B Zona C Zona D Total por mes Enero ... ... ... ... ... Febrero ... ... ... ... ... ... ... ... ... ... ... Diciembre ... ... ... ... ... Total por zona ... ... ... ... Total General La ciudad est\u00e1 dividida en 4 Zonas (A,B,C,D), la tarifa por Kw. que cobra la empresa en cada una de ellas es: Zona A: $ 0,05, Zona B: $ 0,07, Zona C: $ 0,09 y Zona D: $ 0,13.","title":"Ejercicio 3.26"},{"location":"practica/3/#ejercicio-327","text":"Se desea efectuar una estad\u00edstica de ventas. Se cuenta para ello con una secuencia de las facturas emitidas, las cuales son identificadas por un N\u00famero; dicha secuencia contiene informaci\u00f3n relativa al cliente: su N\u00famero y Zona a la cual pertenece, como as\u00ed tambi\u00e9n el Tipo de mercader\u00eda entregada, la Cantidad de unidades, el total gravado, el total exento de IVA y el valor del IVA. Construya un algoritmo que emita por zona, y dentro de la zona por tipo de mercader\u00eda el total de unidades vendidas, el total gravado, el total exento y el total de IVA, y adem\u00e1s un total general con la misma informaci\u00f3n. Hay 9 zonas y 4 tipos de mercader\u00eda.","title":"Ejercicio 3.27"},{"location":"practica/3/#ejercicio-328","text":"La Municipalidad de Resistencia desea obtener una estad\u00edstica de los valores (en $) de los terrenos de la ciudad, discriminados por zona y ubicaci\u00f3n dentro de la manzana (en esquina, interna, etc.), y los totales por zona y ubicaci\u00f3n. El valor de cada final de cada terreno es igual a: Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo de los terrenos con los siguientes datos: Nro_Terreno Zona Ubicacion Superficie Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona.","title":"Ejercicio 3.28"},{"location":"practica/3/#ejercicio-329","text":"Dada una secuencia de texto que contiene informaci\u00f3n sobre mascotas, se desea generar un archivo de mascotas, teniendo en cuenta lo siguiente: En el texto vienen los siguientes datos: nombre de la mascota, encerrado ente asteriscos (*), inmediatamente a continuaci\u00f3n una palabra de tres letras que identifica el tipo de documento y separado por un blanco, 8 posiciones num\u00e9ricas que corresponden al n\u00famero de documento del due\u00f1o, seguidas por un s\u00edmbolo numeral (#) y, a continuaci\u00f3n, la direcci\u00f3n de la persona, finalizando con un signo de fin de interrogaci\u00f3n (?). El final del texto est\u00e1 indicado por un s\u00edmbolo de admiraci\u00f3n (!). Se desconoce la longitud de la direcci\u00f3n, as\u00ed como la del nombre de la mascota. El formato del registro de salida es Tipo_Documento N(1) Numero AN(8) Nombre_Mascota AN(30) Direccion AN(40) Si la sigla es DNI, el tipo es 0, si dice LCE el tipo es 1, si dice LEN el tipo es 2, para PAS es 3, para cualquier otra cadena de letras el tipo es 4. Al final del proceso informar cuantos registros se grabaron en el archivo de salida.","title":"Ejercicio 3.29"},{"location":"practica/3/#ejercicio-330","text":"Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, considerando que las palabras tienen como m\u00e1ximo 10 caracteres.","title":"Ejercicio 3.30"},{"location":"practica/3/#ejercicio-331","text":"Se lleva a cabo una encuesta a fin de anticipar los posibles porcentajes de votos que obtendr\u00e1n cada uno de los 4 partidos pol\u00edticos de mayor peso en las elecciones. Los datos solicitados a los encuestados son: partido al que Algoritmos y Estructuras de Datos 2019 votara, edad, sexo y partido al que vot\u00f3 en las elecciones anteriores. Las respuestas se tabulan de acuerdo a los siguientes criterios: Partidos: P1, P2, P3, P4, Otro, En Blanco, Indeciso Edad: 18-25, 26-35, 36-45, 46-55, 56-65, +65 Sexo: Femenino, Masculino Dise\u00f1e un algoritmo que, utilizando un arreglo de 4 dimensiones (partido al que votara, edad, sexo , partido al que vot\u00f3), permita responder a las siguientes consultas: Cantidad de personas de cierta edad que votar\u00e1n a un Partido dado. Cantidad de personas de un sexo dado que votar\u00e1n a un determinado Partido. Cantidad de personas de cierta edad que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado. Cantidad de personas de un sexo dado que votaron a un determinado Partido y actualmente votar\u00e1n a otro Partido dado.","title":"Ejercicio 3.31"},{"location":"practica/3/#ejercicio-332","text":"La municipalidad posee un archivo secuencial con los datos de todos los estacionamientos realizados en el mes de Octubre de 2018 ESTACIONAMIENTOS FECHA: fecha PATENTE: AN(7) HoraDesde: N(2) HoraHasta: N(2) Posta: 1..100 El costo es por multiplos de 1 hora. El costo por hora se calcula considerando la franja horaria del estacionamiento (siempre tomar el mayor costo), las franjas horarias son: de 00 a 06: costo por hora $9 de 07 a 13: costo por hora $14 de 14 a 19: costo por hora $12 de 20 a 23: costo por hora $6 Ejemplo: si una persona estaciona desde las 5 hasta las 10, son 6 horas de estacionamiento (10 - 5 + 1) y como se encuentra en dos franajas horarias se tiene que tomar la de mayor costo ($14 por hora). Por lo tanto el importe generado es 14 x 6 = 84. ( NOTA a efectos de simplificar los calculos, solo calcular el costo de la franja horaria con respecto a la hora desde y la hora hasta). Se pide realizar un algoritmo que permita determinar: Posta con mayor importe generado D\u00eda con mayor cantidad de estacionamientos. En qu\u00e9 d\u00eda y en que posta se gener\u00f3 la mayor cantidad de estacionamientos Otras Preguntas: \u00bfEs posible calcular cual fue la zona horaria con mayor cantidad de estacionamientos? En caso de ser posible, realizar el algoritmo. \u00bfEs posible determinar la cantidad maxima de permanencia que tienen los autos estacionados? En caso de ser posible, realizar el algoritmo.","title":"Ejercicio 3.32"},{"location":"practica/4/","text":"4. Listas \u00b6 Ejercicio 4.1 \u00b6 Dise\u00f1ar un algoritmo para acceder, eliminar o insertar el k-\u00e9simo elemento de una lista (siendo k una posici\u00f3n dada). Si la lista est\u00e1 vac\u00eda o si el valor de k esta fuera del rango del \u00edndice de la lista, invocar al procedimiento de ERROR. En cualquier otro caso, efectuar el procedimiento solicitado. Ejercicio 4.2 \u00b6 Se dispone de una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos terminan en cero; dichos elementos, deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada, y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento. Ejercicio 4.3 \u00b6 Dada una lista simplemente encadenada de n\u00fameros dise\u00f1ar un algoritmo que calcule en forma independiente: La suma de los n\u00fameros impares, y la suma de los n\u00fameros pares. Ejercicio 4.4 \u00b6 Se dispone de una lista simplemente encadenada cuyos registros est\u00e1n ordenados en forma ascendente por una clave de tipo entero; dise\u00f1ar un algoritmo que invierta el orden de la lista. Ejercicio 4.5 \u00b6 Dada una lista simplemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada en forma decreciente por n\u00famero de habitantes analfabetos, generar otras tres listas que contengan el nombre, la capital y el porcentaje de analfabetos de las Provincias que respondan a las siguientes restricciones. L1: <= 10 % analfabetos L2: 16 a 25 % analfabetos L3: => 26 % analfabetos Ejercicio 4.6 \u00b6 En el restaurante \u00d1OQUIS se est\u00e1 pensando en una soluci\u00f3n inform\u00e1tica para el soporte de datos del nuevo sistema de atenci\u00f3n a clientes. Se han decidido por LISTAS por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: A\u00f1adir cliente al ser atendido (lista simple ordenada por Nombre del Cliente). Registrar su consumo (Acumular el Total Consumido en valores de montos). Realizar el cobro (emitir ticket con Nombre, Fecha, N\u00famero de Mesa y Total). Eliminar del listado de atenci\u00f3n. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente. Ejercicio 4.7 \u00b6 Genere un algoritmo que recorra una secuencia texto y genere una lista simplemente encadenada con la frecuencia de utilizaci\u00f3n de cada letra. La lista debe mantenerse ordenada alfab\u00e9ticamente y al final informar cual fue la frecuencia de cada letra y cu\u00e1les fueron la de mayor y menor frecuencia. Ejercicio 4.8 \u00b6 Escribir un algoritmo que permita buscar, insertar o borrar un elemento identificado con una clave determinada en una lista circular simplemente encadenada. Ejercicio 4.9 \u00b6 Dada una lista circular de 8 elementos que contienen, cada uno, un valor num\u00e9rico entero para encriptaci\u00f3n, encriptar un texto ingresado por teclado (arreglo de caracteres de 255 elementos como m\u00e1ximo). El texto encriptado debe almacenarse en una lista de salida simplemente encadenada y, por \u00faltimo mostrar por pantalla. ENCRIPTAR Multiplicador N(5) Prox Puntero La encriptaci\u00f3n se realiza seg\u00fan las siguientes pautas: Dada la posici\u00f3n del car\u00e1cter dentro del texto, buscar en la lista circular de encriptaci\u00f3n el multiplicador correspondiente, de acuerdo a su posici\u00f3n l\u00f3gica en la lista. Por ejemplo: como solo hay 8 multiplicadores, si se ingresa un arreglo de 10 caracteres, para encriptar los ultimos dos se utilizar\u00edan los multiplicadores 1 y 2. Se usa la funci\u00f3n ASCII(Car\u00e1cter) para convertir cada car\u00e1cter del arreglo en un entero. Luego se lo multiplican los valores obtenidos en los 2 pasos anteriores. Por \u00faltimo se descompone el resultado obtenido en 3 en cada uno de sus d\u00edgitos, se los suma y se guarda en la lista de salida. Ej: si en el paso 3 me dio 123, 1+2+3=6. Ejercicio 4.10 \u00b6 Se dispone de una lista circular con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 6 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista doblemente encadenada en la cual cada nodo contendr\u00e1 el promedio de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l fue el m\u00e1ximo y el m\u00ednimo promedio de todo el conjunto de n\u00fameros. Ejercicio 4.11 \u00b6 En una empresa de servicios motorizados que NO posee una cantidad fija de integrantes, pero siempre es mayor que 1 (uno). Los datos de las personas est\u00e1 almacenados en un archivo (DNI, Nombre, Antig\u00fcedad) ordenado por DNI. Realizar un algoritmo que permita generar una lista de asignaci\u00f3n (usando una estructura de lista doblemente encadenada), ordenada al principio por antig\u00fcedad, y un proceso que realice dicha asignaci\u00f3n, en cada solicitud, por turno seg\u00fan orden en la lista. Una vez asignado dicha persona se va al final de la lista para esperar su nueva asignaci\u00f3n. Al final del d\u00eda informar cuantas asignaciones tuvo cada integrante. PERSONAL Nro_Personal N(5) Nombre AN(50) Asignaciones N(5) Antig\u00fcedad N(2) Ejercicio 4.12 \u00b6 En el nuevo DELIVERY VAMOS-RAPIDO se est\u00e1 dise\u00f1ando una soluci\u00f3n inform\u00e1tica para la atenci\u00f3n de clientes. Se ha pensado en una LISTA por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: Registrar su pedido en una lista Doble (se agrega en Estado P (Pendiente), y se mantiene ordenado por Nombre del Cliente). Realizar el env\u00edo (cambia estado del pedido de P (pendiente) a E (Enviado)). Eliminar del listado de atenci\u00f3n una vez recibido el cobro (al atender el cobro del cadete que hizo el trabajo). Datos a almacenar por pedido: Nombre, Direcci\u00f3n, Tel\u00e9fono y Total. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente. Ejercicio 4.13 \u00b6 Dada una lista doblemente encadenada de enteros, ordenada en forma creciente, escriba un algoritmo que elimine las entradas repetidas. El algoritmo debe verificar al inicio que la lista que se pasa como argumento est\u00e1 ordenada; en caso afirmativo realizar la depuraci\u00f3n y emitir un mensaje de '\u00c9XITO'; en caso contrario, emitir un mensaje de 'ERROR'. Ejercicio 4.14 \u00b6 Se desea ingresar una serie de n\u00fameros, e imprimirlos en el orden contrario al de ingreso. Dise\u00f1ar un algoritmo que satisfaga tal requerimiento, utilizando la estructura de datos m\u00e1s apropiada. Ejercicio 4.15 \u00b6 Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una cola Q (estructura 'FIFO', es decir, 'primero en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la cola est\u00e1 vac\u00eda o no. Ejercicio 4.16 \u00b6 Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una pila P (estructura 'LIFO', es decir, '\u00faltimo en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la pila est\u00e1 vac\u00eda o no. Ejercicio 4.17 \u00b6 Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, teniendo en cuenta que conoce la estructura de listas.","title":"4. Listas"},{"location":"practica/4/#4-listas","text":"","title":"4. Listas"},{"location":"practica/4/#ejercicio-41","text":"Dise\u00f1ar un algoritmo para acceder, eliminar o insertar el k-\u00e9simo elemento de una lista (siendo k una posici\u00f3n dada). Si la lista est\u00e1 vac\u00eda o si el valor de k esta fuera del rango del \u00edndice de la lista, invocar al procedimiento de ERROR. En cualquier otro caso, efectuar el procedimiento solicitado.","title":"Ejercicio 4.1"},{"location":"practica/4/#ejercicio-42","text":"Se dispone de una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos terminan en cero; dichos elementos, deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada, y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento.","title":"Ejercicio 4.2"},{"location":"practica/4/#ejercicio-43","text":"Dada una lista simplemente encadenada de n\u00fameros dise\u00f1ar un algoritmo que calcule en forma independiente: La suma de los n\u00fameros impares, y la suma de los n\u00fameros pares.","title":"Ejercicio 4.3"},{"location":"practica/4/#ejercicio-44","text":"Se dispone de una lista simplemente encadenada cuyos registros est\u00e1n ordenados en forma ascendente por una clave de tipo entero; dise\u00f1ar un algoritmo que invierta el orden de la lista.","title":"Ejercicio 4.4"},{"location":"practica/4/#ejercicio-45","text":"Dada una lista simplemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada en forma decreciente por n\u00famero de habitantes analfabetos, generar otras tres listas que contengan el nombre, la capital y el porcentaje de analfabetos de las Provincias que respondan a las siguientes restricciones. L1: <= 10 % analfabetos L2: 16 a 25 % analfabetos L3: => 26 % analfabetos","title":"Ejercicio 4.5"},{"location":"practica/4/#ejercicio-46","text":"En el restaurante \u00d1OQUIS se est\u00e1 pensando en una soluci\u00f3n inform\u00e1tica para el soporte de datos del nuevo sistema de atenci\u00f3n a clientes. Se han decidido por LISTAS por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: A\u00f1adir cliente al ser atendido (lista simple ordenada por Nombre del Cliente). Registrar su consumo (Acumular el Total Consumido en valores de montos). Realizar el cobro (emitir ticket con Nombre, Fecha, N\u00famero de Mesa y Total). Eliminar del listado de atenci\u00f3n. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente.","title":"Ejercicio 4.6"},{"location":"practica/4/#ejercicio-47","text":"Genere un algoritmo que recorra una secuencia texto y genere una lista simplemente encadenada con la frecuencia de utilizaci\u00f3n de cada letra. La lista debe mantenerse ordenada alfab\u00e9ticamente y al final informar cual fue la frecuencia de cada letra y cu\u00e1les fueron la de mayor y menor frecuencia.","title":"Ejercicio 4.7"},{"location":"practica/4/#ejercicio-48","text":"Escribir un algoritmo que permita buscar, insertar o borrar un elemento identificado con una clave determinada en una lista circular simplemente encadenada.","title":"Ejercicio 4.8"},{"location":"practica/4/#ejercicio-49","text":"Dada una lista circular de 8 elementos que contienen, cada uno, un valor num\u00e9rico entero para encriptaci\u00f3n, encriptar un texto ingresado por teclado (arreglo de caracteres de 255 elementos como m\u00e1ximo). El texto encriptado debe almacenarse en una lista de salida simplemente encadenada y, por \u00faltimo mostrar por pantalla. ENCRIPTAR Multiplicador N(5) Prox Puntero La encriptaci\u00f3n se realiza seg\u00fan las siguientes pautas: Dada la posici\u00f3n del car\u00e1cter dentro del texto, buscar en la lista circular de encriptaci\u00f3n el multiplicador correspondiente, de acuerdo a su posici\u00f3n l\u00f3gica en la lista. Por ejemplo: como solo hay 8 multiplicadores, si se ingresa un arreglo de 10 caracteres, para encriptar los ultimos dos se utilizar\u00edan los multiplicadores 1 y 2. Se usa la funci\u00f3n ASCII(Car\u00e1cter) para convertir cada car\u00e1cter del arreglo en un entero. Luego se lo multiplican los valores obtenidos en los 2 pasos anteriores. Por \u00faltimo se descompone el resultado obtenido en 3 en cada uno de sus d\u00edgitos, se los suma y se guarda en la lista de salida. Ej: si en el paso 3 me dio 123, 1+2+3=6.","title":"Ejercicio 4.9"},{"location":"practica/4/#ejercicio-410","text":"Se dispone de una lista circular con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 6 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista doblemente encadenada en la cual cada nodo contendr\u00e1 el promedio de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l fue el m\u00e1ximo y el m\u00ednimo promedio de todo el conjunto de n\u00fameros.","title":"Ejercicio 4.10"},{"location":"practica/4/#ejercicio-411","text":"En una empresa de servicios motorizados que NO posee una cantidad fija de integrantes, pero siempre es mayor que 1 (uno). Los datos de las personas est\u00e1 almacenados en un archivo (DNI, Nombre, Antig\u00fcedad) ordenado por DNI. Realizar un algoritmo que permita generar una lista de asignaci\u00f3n (usando una estructura de lista doblemente encadenada), ordenada al principio por antig\u00fcedad, y un proceso que realice dicha asignaci\u00f3n, en cada solicitud, por turno seg\u00fan orden en la lista. Una vez asignado dicha persona se va al final de la lista para esperar su nueva asignaci\u00f3n. Al final del d\u00eda informar cuantas asignaciones tuvo cada integrante. PERSONAL Nro_Personal N(5) Nombre AN(50) Asignaciones N(5) Antig\u00fcedad N(2)","title":"Ejercicio 4.11"},{"location":"practica/4/#ejercicio-412","text":"En el nuevo DELIVERY VAMOS-RAPIDO se est\u00e1 dise\u00f1ando una soluci\u00f3n inform\u00e1tica para la atenci\u00f3n de clientes. Se ha pensado en una LISTA por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: Registrar su pedido en una lista Doble (se agrega en Estado P (Pendiente), y se mantiene ordenado por Nombre del Cliente). Realizar el env\u00edo (cambia estado del pedido de P (pendiente) a E (Enviado)). Eliminar del listado de atenci\u00f3n una vez recibido el cobro (al atender el cobro del cadete que hizo el trabajo). Datos a almacenar por pedido: Nombre, Direcci\u00f3n, Tel\u00e9fono y Total. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente.","title":"Ejercicio 4.12"},{"location":"practica/4/#ejercicio-413","text":"Dada una lista doblemente encadenada de enteros, ordenada en forma creciente, escriba un algoritmo que elimine las entradas repetidas. El algoritmo debe verificar al inicio que la lista que se pasa como argumento est\u00e1 ordenada; en caso afirmativo realizar la depuraci\u00f3n y emitir un mensaje de '\u00c9XITO'; en caso contrario, emitir un mensaje de 'ERROR'.","title":"Ejercicio 4.13"},{"location":"practica/4/#ejercicio-414","text":"Se desea ingresar una serie de n\u00fameros, e imprimirlos en el orden contrario al de ingreso. Dise\u00f1ar un algoritmo que satisfaga tal requerimiento, utilizando la estructura de datos m\u00e1s apropiada.","title":"Ejercicio 4.14"},{"location":"practica/4/#ejercicio-415","text":"Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una cola Q (estructura 'FIFO', es decir, 'primero en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la cola est\u00e1 vac\u00eda o no.","title":"Ejercicio 4.15"},{"location":"practica/4/#ejercicio-416","text":"Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una pila P (estructura 'LIFO', es decir, '\u00faltimo en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la pila est\u00e1 vac\u00eda o no.","title":"Ejercicio 4.16"},{"location":"practica/4/#ejercicio-417","text":"Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, teniendo en cuenta que conoce la estructura de listas.","title":"Ejercicio 4.17"},{"location":"practica/5/","text":"5. Recursividad \u00b6 5.1 Funciones Recursivas \u00b6 Ejercicio 5.1.1 \u00b6 Calcular el factorial de un n\u00famero positivo $n$. Tener en cuenta la definici\u00f3n matem\u00e1tica de $n!$: $$ n! = \\begin{cases} 1, & \\text{si $n$ = 0} \\\\ n \\times (n-1)!, & \\text{si $n$ > 0} \\end{cases} $$ Ejercicio 5.1.2 \u00b6 Dado un n\u00famero $n$ como par\u00e1metro de entrada, calcular el $n$-\u00e9simo n\u00famero de la serie de Fibonacci. Tener en cuenta la siguiente definici\u00f3n: $$ Fib(n) = \\begin{cases} 1, & \\text{si $n$ = 1, $n$ = 2} \\\\ Fib(n-1) + Fib(n-2), & \\text{si $n$ > 2} \\end{cases} $$ Ejercicio 5.1.3 \u00b6 Dados dos n\u00fameros: $a$ y $b$. Calcule la potencia $a^b$, usando s\u00f3lo multiplicaciones sucesivas. Ejercicio 5.1.4 \u00b6 Construir un algoritmo recursivo que permita determinar si los d\u00edgitos de un n\u00famero $n$ dado son todos pares. Ejercicio 5.1.5 \u00b6 Dados dos n\u00fameros enteros, div\u00eddalos (divisi\u00f3n entera) y muestre el resultado, usando s\u00f3lo la operaci\u00f3n resta. Ejercicio 5.1.6 \u00b6 Determine recursivamente si un n\u00famero dado es par o impar, usando s\u00f3lo la operaci\u00f3n resta. Ejercicio 5.1.7 \u00b6 El algoritmo de Euclides para encontrar el MCD (m\u00e1ximo com\u00fan divisor) de dos n\u00fameros enteros positivos ( m y n ) se puede definir recursivamente. Algoritmo de Euclides: el MCD de dos enteros es el entero mayor que divide a ambos. Dividendo Divisor Cociente Resto m n q1 r1 n r1 q2 r2 r1 r2 q3 r3 Cuando el \u00faltimo resto es cero (por ej. r3 = 0), el MCD es el \u00faltimo divisor (en ese caso, r2). El algoritmo recursivo se puede definir con los siguientes pasos: MCD (m,n) = n, si n <= m, n divide a m MCD (m,n) = MCD (n, m), si m < n MCD (m,n) = MCD (n, resto de m dividio por n) Para simplificar el algoritmo considerar que siempre m > n Ejercicio 5.1.8 \u00b6 Dado un vector de 10 n\u00fameros enteros, calcular la suma de sus elementos 5.2 Procedimientos Recursivas \u00b6 Ejercicio 5.2.1 \u00b6 Imprimir las cifras de un n\u00famero $n$ (siendo $n \\ge 0$) en orden inverso al original. Por ej.: el inverso de 254 es 452. Ejercicio 5.2.2 \u00b6 Leer una palabra (una cadena de caracteres) y la cantidad de caracteres y generar su pal\u00edndromo. El pal\u00edndromo de \u201cVenezuela\u201d es \u201caleuzeneV\u201d. Ejercicio 5.2.3 \u00b6 Dada una lista de nombres ordenada en forma ascendente, construir un procedimiento recursivo que imprima como salida la misma lista, pero en orden descendente, sin modificar la lista original. Ejercicio 5.2.4 \u00b6 Para convertir un n\u00famero decimal a binario, simplemente debe dividirse sucesivas veces por dos (2) hasta quedarnos con el cociente cero (0). Todos los restos de las divisiones, tomados en orden inverso, forman el n\u00famero binario objetivo. Escribir un procedimiento recursivo que, recibiendo como par\u00e1metro un n\u00famero entero positivo, muestre en pantalla el mismo n\u00famero codificado en binario. 5.3 Arboles \u00b6 Ejercicio 5.3.1 \u00b6 Responda las siguientes preguntas para el \u00e1rbol de la figura: \u00bfQu\u00e9 nodos son hojas? \u00bfQu\u00e9 nodo es ra\u00edz? \u00bfCu\u00e1l es el padre del nodo C? \u00bfQu\u00e9 nodos son los hijos de C? \u00bfQu\u00e9 nodos son los antecesores de C? \u00bfQu\u00e9 nodos son los descendientes de E? \u00bfCu\u00e1les son los hermanos derechos de D y E? \u00bfQu\u00e9 nodos est\u00e1n a izquierda y qu\u00e9 nodos a derecha de G? \u00bfCu\u00e1l es la profundidad del \u00e1rbol? \u00bfCu\u00e1l es la altura del nodo C? Ejercicio 5.3.2 \u00b6 \u00bfCu\u00e1ntos caminos de longitud 3 hay en el \u00e1rbol representado en la figura anterior? Ejercicio 5.3.3 \u00b6 Dada la expresi\u00f3n de la siguiente l\u00ednea, dibujar el \u00e1rbol equivalente [ ( x - y ) * z ] / ( m + n ** p) Ejercicio 5.3.4 \u00b6 Dado el siguiente \u00e1rbol: Indique el resultado del recorrido post-orden Indique el resultado del recorrido en-orden Elabore un algoritmo para el recorrido en-orden Ejercicio 5.3.5 \u00b6 Para las siguientes expresiones: ( 5 + 7 ) / 8 \u2013 ( 6 * 7 ) ** 2 3 \u2013 6 + 6 * ( 8 / 3 ) 4 / ( 8 \u2013 6 * ( 8 + 3 ) ) Grafique el \u00e1rbol equivalente Indique las expresiones resultantes de los recorridos EN-ORDEN, PRE-ORDEN y POST-ORDEN Calcule los resultados num\u00e9ricos que arroja la ejecuci\u00f3n de cada uno de los recorridos. Ejercicio 5.3.6 \u00b6 Escriba un algoritmo que permita recorrer el siguiente \u00e1rbol en los tres procedimientos, realice la prueba de escritorio Ejercicio 5.3.7 \u00b6 Escribir una funci\u00f3n recursiva que encuentre el n\u00famero de nodos de un \u00e1rbol binario. Ejercicio 5.3.8 \u00b6 Escribir una funci\u00f3n recursiva que encuentre la altura de un \u00e1rbol binario. Ejercicio 5.3.9 \u00b6 Se dispone de un \u00e1rbol binario de enteros. Escribir funciones que calculen: La suma de sus elementos. La suma de sus elementos que son m\u00faltiplos de 3. Ejercicio 5.3.10 \u00b6 Suponiendo que un \u00e1rbol est\u00e1 definido como la estructura recursiva de datos: arbol = registro x: entero izq, der: puntero a arbol fin registro Escribir un algoritmo que encuentre un elemento con una clave dada C, y realice una operaci\u00f3n P con \u00e9l. Ejercicio 5.3.11 \u00b6 Convi\u00e9rtase la expresi\u00f3n ((a + b) + c * (d + e) + f) * (g + h) en expresi\u00f3n prefija expresi\u00f3n postfija Ejercicio 5.3.12 \u00b6 El recorrido en pre-orden de un determinado \u00e1rbol binario es: GEAIBMCLDFKJH y en-orden IABEGLDCFMKHJ . Dibujar el \u00e1rbol binario. Dar el recorrido en post-orden. Dise\u00f1ar un algoritmo para recorrer el \u00e1rbol en post-orden. Ejercicio 5.3.13 \u00b6 Supongamos que tenemos una funci\u00f3n valor tal que dado un valor de tipo char (una letra del alfabeto) devuelve un valor entero asociado a dicho identificador. Supongamos tambi\u00e9n la existencia de un \u00e1rbol de expresi\u00f3n T cuyos nodos hoja son letras del alfabeto y cuyos nodos interiores son los caracteres *, +, -, /. Dise\u00f1ar una funci\u00f3n que tome como par\u00e1metros un nodo y un \u00e1rbol binario y devuelva el resultado entero de la evaluaci\u00f3n de la expresi\u00f3n representada. Ejercicio 5.3.14 \u00b6 \u00bfPuede reconstruirse de forma \u00fanica un ABB dado su inorden? \u00bfY dados el preorden y el postorden? Ejercicio 5.3.15 \u00b6 Construir un ABB con las claves 50, 25, 75, 10, 40, 60, 90, 35, 45, 70, 42. Ejercicio 5.3.16 \u00b6 Dados los siguientes \u00e1rboles indicar cu\u00e1l es AVL y cu\u00e1l no.","title":"5. Recursividad"},{"location":"practica/5/#5-recursividad","text":"","title":"5. Recursividad"},{"location":"practica/5/#51-funciones-recursivas","text":"","title":"5.1 Funciones Recursivas"},{"location":"practica/5/#ejercicio-511","text":"Calcular el factorial de un n\u00famero positivo $n$. Tener en cuenta la definici\u00f3n matem\u00e1tica de $n!$: $$ n! = \\begin{cases} 1, & \\text{si $n$ = 0} \\\\ n \\times (n-1)!, & \\text{si $n$ > 0} \\end{cases} $$","title":"Ejercicio 5.1.1"},{"location":"practica/5/#ejercicio-512","text":"Dado un n\u00famero $n$ como par\u00e1metro de entrada, calcular el $n$-\u00e9simo n\u00famero de la serie de Fibonacci. Tener en cuenta la siguiente definici\u00f3n: $$ Fib(n) = \\begin{cases} 1, & \\text{si $n$ = 1, $n$ = 2} \\\\ Fib(n-1) + Fib(n-2), & \\text{si $n$ > 2} \\end{cases} $$","title":"Ejercicio 5.1.2"},{"location":"practica/5/#ejercicio-513","text":"Dados dos n\u00fameros: $a$ y $b$. Calcule la potencia $a^b$, usando s\u00f3lo multiplicaciones sucesivas.","title":"Ejercicio 5.1.3"},{"location":"practica/5/#ejercicio-514","text":"Construir un algoritmo recursivo que permita determinar si los d\u00edgitos de un n\u00famero $n$ dado son todos pares.","title":"Ejercicio 5.1.4"},{"location":"practica/5/#ejercicio-515","text":"Dados dos n\u00fameros enteros, div\u00eddalos (divisi\u00f3n entera) y muestre el resultado, usando s\u00f3lo la operaci\u00f3n resta.","title":"Ejercicio 5.1.5"},{"location":"practica/5/#ejercicio-516","text":"Determine recursivamente si un n\u00famero dado es par o impar, usando s\u00f3lo la operaci\u00f3n resta.","title":"Ejercicio 5.1.6"},{"location":"practica/5/#ejercicio-517","text":"El algoritmo de Euclides para encontrar el MCD (m\u00e1ximo com\u00fan divisor) de dos n\u00fameros enteros positivos ( m y n ) se puede definir recursivamente. Algoritmo de Euclides: el MCD de dos enteros es el entero mayor que divide a ambos. Dividendo Divisor Cociente Resto m n q1 r1 n r1 q2 r2 r1 r2 q3 r3 Cuando el \u00faltimo resto es cero (por ej. r3 = 0), el MCD es el \u00faltimo divisor (en ese caso, r2). El algoritmo recursivo se puede definir con los siguientes pasos: MCD (m,n) = n, si n <= m, n divide a m MCD (m,n) = MCD (n, m), si m < n MCD (m,n) = MCD (n, resto de m dividio por n) Para simplificar el algoritmo considerar que siempre m > n","title":"Ejercicio 5.1.7"},{"location":"practica/5/#ejercicio-518","text":"Dado un vector de 10 n\u00fameros enteros, calcular la suma de sus elementos","title":"Ejercicio 5.1.8"},{"location":"practica/5/#52-procedimientos-recursivas","text":"","title":"5.2 Procedimientos Recursivas"},{"location":"practica/5/#ejercicio-521","text":"Imprimir las cifras de un n\u00famero $n$ (siendo $n \\ge 0$) en orden inverso al original. Por ej.: el inverso de 254 es 452.","title":"Ejercicio 5.2.1"},{"location":"practica/5/#ejercicio-522","text":"Leer una palabra (una cadena de caracteres) y la cantidad de caracteres y generar su pal\u00edndromo. El pal\u00edndromo de \u201cVenezuela\u201d es \u201caleuzeneV\u201d.","title":"Ejercicio 5.2.2"},{"location":"practica/5/#ejercicio-523","text":"Dada una lista de nombres ordenada en forma ascendente, construir un procedimiento recursivo que imprima como salida la misma lista, pero en orden descendente, sin modificar la lista original.","title":"Ejercicio 5.2.3"},{"location":"practica/5/#ejercicio-524","text":"Para convertir un n\u00famero decimal a binario, simplemente debe dividirse sucesivas veces por dos (2) hasta quedarnos con el cociente cero (0). Todos los restos de las divisiones, tomados en orden inverso, forman el n\u00famero binario objetivo. Escribir un procedimiento recursivo que, recibiendo como par\u00e1metro un n\u00famero entero positivo, muestre en pantalla el mismo n\u00famero codificado en binario.","title":"Ejercicio 5.2.4"},{"location":"practica/5/#53-arboles","text":"","title":"5.3 Arboles"},{"location":"practica/5/#ejercicio-531","text":"Responda las siguientes preguntas para el \u00e1rbol de la figura: \u00bfQu\u00e9 nodos son hojas? \u00bfQu\u00e9 nodo es ra\u00edz? \u00bfCu\u00e1l es el padre del nodo C? \u00bfQu\u00e9 nodos son los hijos de C? \u00bfQu\u00e9 nodos son los antecesores de C? \u00bfQu\u00e9 nodos son los descendientes de E? \u00bfCu\u00e1les son los hermanos derechos de D y E? \u00bfQu\u00e9 nodos est\u00e1n a izquierda y qu\u00e9 nodos a derecha de G? \u00bfCu\u00e1l es la profundidad del \u00e1rbol? \u00bfCu\u00e1l es la altura del nodo C?","title":"Ejercicio 5.3.1"},{"location":"practica/5/#ejercicio-532","text":"\u00bfCu\u00e1ntos caminos de longitud 3 hay en el \u00e1rbol representado en la figura anterior?","title":"Ejercicio 5.3.2"},{"location":"practica/5/#ejercicio-533","text":"Dada la expresi\u00f3n de la siguiente l\u00ednea, dibujar el \u00e1rbol equivalente [ ( x - y ) * z ] / ( m + n ** p)","title":"Ejercicio 5.3.3"},{"location":"practica/5/#ejercicio-534","text":"Dado el siguiente \u00e1rbol: Indique el resultado del recorrido post-orden Indique el resultado del recorrido en-orden Elabore un algoritmo para el recorrido en-orden","title":"Ejercicio 5.3.4"},{"location":"practica/5/#ejercicio-535","text":"Para las siguientes expresiones: ( 5 + 7 ) / 8 \u2013 ( 6 * 7 ) ** 2 3 \u2013 6 + 6 * ( 8 / 3 ) 4 / ( 8 \u2013 6 * ( 8 + 3 ) ) Grafique el \u00e1rbol equivalente Indique las expresiones resultantes de los recorridos EN-ORDEN, PRE-ORDEN y POST-ORDEN Calcule los resultados num\u00e9ricos que arroja la ejecuci\u00f3n de cada uno de los recorridos.","title":"Ejercicio 5.3.5"},{"location":"practica/5/#ejercicio-536","text":"Escriba un algoritmo que permita recorrer el siguiente \u00e1rbol en los tres procedimientos, realice la prueba de escritorio","title":"Ejercicio 5.3.6"},{"location":"practica/5/#ejercicio-537","text":"Escribir una funci\u00f3n recursiva que encuentre el n\u00famero de nodos de un \u00e1rbol binario.","title":"Ejercicio 5.3.7"},{"location":"practica/5/#ejercicio-538","text":"Escribir una funci\u00f3n recursiva que encuentre la altura de un \u00e1rbol binario.","title":"Ejercicio 5.3.8"},{"location":"practica/5/#ejercicio-539","text":"Se dispone de un \u00e1rbol binario de enteros. Escribir funciones que calculen: La suma de sus elementos. La suma de sus elementos que son m\u00faltiplos de 3.","title":"Ejercicio 5.3.9"},{"location":"practica/5/#ejercicio-5310","text":"Suponiendo que un \u00e1rbol est\u00e1 definido como la estructura recursiva de datos: arbol = registro x: entero izq, der: puntero a arbol fin registro Escribir un algoritmo que encuentre un elemento con una clave dada C, y realice una operaci\u00f3n P con \u00e9l.","title":"Ejercicio 5.3.10"},{"location":"practica/5/#ejercicio-5311","text":"Convi\u00e9rtase la expresi\u00f3n ((a + b) + c * (d + e) + f) * (g + h) en expresi\u00f3n prefija expresi\u00f3n postfija","title":"Ejercicio 5.3.11"},{"location":"practica/5/#ejercicio-5312","text":"El recorrido en pre-orden de un determinado \u00e1rbol binario es: GEAIBMCLDFKJH y en-orden IABEGLDCFMKHJ . Dibujar el \u00e1rbol binario. Dar el recorrido en post-orden. Dise\u00f1ar un algoritmo para recorrer el \u00e1rbol en post-orden.","title":"Ejercicio 5.3.12"},{"location":"practica/5/#ejercicio-5313","text":"Supongamos que tenemos una funci\u00f3n valor tal que dado un valor de tipo char (una letra del alfabeto) devuelve un valor entero asociado a dicho identificador. Supongamos tambi\u00e9n la existencia de un \u00e1rbol de expresi\u00f3n T cuyos nodos hoja son letras del alfabeto y cuyos nodos interiores son los caracteres *, +, -, /. Dise\u00f1ar una funci\u00f3n que tome como par\u00e1metros un nodo y un \u00e1rbol binario y devuelva el resultado entero de la evaluaci\u00f3n de la expresi\u00f3n representada.","title":"Ejercicio 5.3.13"},{"location":"practica/5/#ejercicio-5314","text":"\u00bfPuede reconstruirse de forma \u00fanica un ABB dado su inorden? \u00bfY dados el preorden y el postorden?","title":"Ejercicio 5.3.14"},{"location":"practica/5/#ejercicio-5315","text":"Construir un ABB con las claves 50, 25, 75, 10, 40, 60, 90, 35, 45, 70, 42.","title":"Ejercicio 5.3.15"},{"location":"practica/5/#ejercicio-5316","text":"Dados los siguientes \u00e1rboles indicar cu\u00e1l es AVL y cu\u00e1l no.","title":"Ejercicio 5.3.16"},{"location":"practica/x/","text":"Ejercicio 1 \u00b6 La Municipalidad de Resistencia desea actualizar los valores de los terrenos luego de una rezonificacion de los mismos. El valor final de cada terreno se calcula de la siguiente manera Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo maestro de los terrenos con los siguientes datos: MAESTRO Ordenado por Nro_Terreno Nro_Terreno Zona Ubicacion Superficie Valor Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona. Un archivo de movimientos MOVIMIENTO Ordenado por Nro_Terreno Nro_Terreno Zona Ubicacion Superficie Cod_Mov Se solicita actualizar (Alta Baja y Modificacion) los valores del archivo maestro, teniendo en cuenta que los unicos valores que se pueden actualizar es la zona y su valor.","title":"X. Parcial"},{"location":"practica/x/#ejercicio-1","text":"La Municipalidad de Resistencia desea actualizar los valores de los terrenos luego de una rezonificacion de los mismos. El valor final de cada terreno se calcula de la siguiente manera Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo maestro de los terrenos con los siguientes datos: MAESTRO Ordenado por Nro_Terreno Nro_Terreno Zona Ubicacion Superficie Valor Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona. Un archivo de movimientos MOVIMIENTO Ordenado por Nro_Terreno Nro_Terreno Zona Ubicacion Superficie Cod_Mov Se solicita actualizar (Alta Baja y Modificacion) los valores del archivo maestro, teniendo en cuenta que los unicos valores que se pueden actualizar es la zona y su valor.","title":"Ejercicio 1"},{"location":"teoria/actualizacion/","text":"Actualizacion \u00b6 Tipos de Actualizaci\u00f3n \u00b6 POR LOTES Varios registros de movimiento para un registro maestro. UNITARIA Un registro movimiento para un registro maestro. Ficheros \u00b6 Ficheros de entrada: por lo menos dos: MAESTRO Y MOVIMIENTOS. Ficheros de salida: como m\u00ednimo uno. Tipos de Ficheros Maestros \u00b6 Hist\u00f3rico Com\u00fan o Normal Tipos de Ficheros de Movimientos \u00b6 Actualizaci\u00f3n General o Combinado Actualizaci\u00f3n Parcial o Individual Tipos de Movimientos \u00b6 Alta Baja Modificaci\u00f3n Algoritmo Actualizaci\u00f3n Unitaria \u00b6 Utilizando ciclo incluyente Accion Act_Uni es Algoritmo Abrir_Archivos Leer_Maestro Leer_Movimiento Mientras (Clave_Mae <> HV) o (Clave_Mov <> HV) hacer Si (Clave_Mae = Clave_Mov) entonces Proceso_Iguales sino Si (Clave_Mae < Clave_Mov) entonces Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Leer_Maestro sino Proceso_Distintos Fin Si Fin Si Fin Mientras Cerrar_Archivos Fin Accion Subaccion Leer_Movimiento es Leer(Arch_mov, Reg_mov) Si FDA(Arch_mov) entonces Clave_mov:= HV Fin Si Fin Subaccion Subaccion Leer_Maestro es Leer(Arch_mae, Reg_mae) Si FDA(Arch_mae) entonces Clave_mae : = HV Fin Si Fin Subaccion Subacci\u00f3n Proceso_Iguales es Si Reg_mov.Cod_mov = 'ALTA' entonces Escribir('Error alta no existe') Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Proceso_Mod_Maestro Reg_sal : = Reg_mae Escribir(Arch_sal, Reg_sal) Sino // eliminaci\u00f3n l\u00f3gica Marcar_Registro Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Maestro Leer_Movimiento Fin Subacci\u00f3n. Subaccion Proceso_Distintos es Si (Reg_mov.Cod_Mov = 'BAJA') entonces Escribir('Error baja no existe') Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Escribir('Error mofificaci\u00f3n no existe') Sino // Asigna campo por campo, porque Reg_sal y Reg_mov tienen distinto formato Reg_sal.clave:= Reg_mov.clave Reg_sal.campo1:= Reg_mov.campo1 Reg_sal.campo2:= Reg_mov.campo2 ........ Reg_sal.campoN:= Reg_mov.campoN Reg_sal.Marca_baja:= '' Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Movimiento Fin Subaccion Subaccion Proceso_Modif_Maestro es Si (Reg_Mov.campo1 <> '') entonces Reg_mae.campo1:= Reg_mov.campo1 Fin Si Si (Reg_Mov.campo2 <> '') entonces Reg_mae.campo2 := Reg_mov.campo2 Fin Si Si (Reg_Mov.campo3 <> '') entonces Reg_mae.campo3 := Reg_mov.campo3 Fin Si // ... y as\u00ed sucesivamente para todos los campos del registro... Fin Subaccion Subaccion Marcar_Registro es Reg_mae.Marca_baja:= '*' // en vez de asterisco, se puede asignar la fecha del d\u00eda, o cualquier otro dato, seg\u00fan el problema // Fin Subaccion Actualizacion Secuencial Por lotes \u00b6 Consideraciones \u00b6 Utilizamos un ciclo incluyente . Los tipos de movimientos son: Alta: Siempre el primer registro va a ser del tipo alta, y luego modificaciones. Modificaci\u00f3n: pueden existir varias modificaciones a un maestro. Baja: son bajas logicas. Solo el ultimo movimiento puede ser una baja logica. No existen altas o bajas entre las modificaciones. Ambiente \u00b6 El ambiente esta formado por 2 archivos con la siguiente estructura: Formato_Clave = Registro clave1: ... clave2: ... ... claven: ... fin registro formato_Maestro = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro formato_Movimiento = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... cod_mov: (\"A\", \"M\", \"B\") fin registro mae, mae_sal: archivo de formato_Maestro ordenado por clave reg_sal, reg_mae, aux: formato_Maestro mov: archivo de formato_movimiento ordenado por clave reg_mov: formato_movimiento Algoritmo \u00b6 Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (reg_mov.clave <> High_Value) o (reg_mae.clave <> High_Value) HACER SI Creg_mae.clave < Creg_mov.clave ENTONCES //Maestro sin Movimiento Reg_sal : = Reg_mae ESCRIBIR(mae_sal, Reg_sal) Leer_Maestro SINO SI Creg_mae.clave = Creg_mov.clave Movimiento aux : = reg_mae MIENTRAS (Creg_mae.clave = Creg_mov.clave) HACER Proceso_Movim Leer_Movimiento Fin Mientras reg_sal : = Aux ESCRIBIR(mae_sal, reg_sal) Leer_Maestro SINO // Movimiento sin Maestro ~ 1 Alta y 0-1 Modific. y/o Bajas // Asigna campo por campo, porque Aux y Reg_mov tienen distinto formato Aux.clave := Reg_mov.clave Aux.campo1 := Reg_mov.campo3 Aux.campo2 := Reg_mov.campo4 ........ Aux.campon := Reg_mov.campon Aux.Marca_baja := \"\" Leer_Movimiento MIENTRAS (Clave_Aux = Clave_Mov) HACER Proceso_Movim Leer_Movimiento FMientras reg_sal : = aux ESCRIBIR(mae_sal, reg_sal) FIN SI FIN SI FIN MIENTRAS CERRAR(mae) CERRAR(mae_sal) CERRAR(mov) Subacciones \u00b6 Subacci\u00f3n Leer_Movimiento es LEER(mov, Reg_mov) SI FDA(mov) ENTONCES reg_mov.clave := High_value FSI; FAcci\u00f3n Subacci\u00f3n Leer_Maestro es LEER(mae, reg_mae) SI FDA(mae) ENTONCES reg_mae.clave : = High_value FSI; FAcci\u00f3n Subacci\u00f3n Proceso_Movim es //Comparar la informaci\u00f3n del Registro de Movimientos y, de acuerdo a los valores que //tengan, y alterar los contenidos del Registro Auxiliar (Aux). SI reg_mov.Cod_Mov = \"M\" ENTONCES //Modificaci\u00f3n Proceso_modif_maestro SINO SI reg_mov.Cod_Mov = \"B\" ENTONCES //eliminaci\u00f3n l\u00f3gica Marcar_registro Fsi Fsi FAcci\u00f3n Subacci\u00f3n Proceso_modif_maestro es Si Reg_Mov.campo1 <> \"\" entonces // No se actualizan los campos claves. Aux.campo1 := Reg_mov.campo1 fsi; Si Reg_Mov.campo2 <> \"\" entonces Aux.campo2 := Reg_mov.campo2 fsi; .............................. //... y as\u00ed sucesivamente para todos los campos del registro... .............................. Si Reg_Mov.campon <> \"\" entonces Aux.campon := Reg_mov.campon fsi; FAcci\u00f3n. Subacci\u00f3n Marcar_registro es //en vez de asterisco, se puede asignar la fecha del d\u00eda, //o cualquier otro dato, seg\u00fan el problema Aux.Marca_baja:= \"*\" FAcci\u00f3n. Modificar \u00b6 Que pasa si se pide que se tengan en cuenta los siguientes errores: Las altas no siempre estan al principio. Las bajas no siempre estan al final. Actualizacion Indexada \u00b6 Consideraciones \u00b6 Archivo maestro indexado por clave Se ingresan movimientos por terminal Ambiente \u00b6 El ambiente esta formado por 1 solo archivos con la siguiente estructura: formato_mae = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro arch_mae: Archivo de formato_mae indexado por clave. reg_mae: formato cod_mov: AN(1) valido = ('A', 'B', 'M') clave: formato_clave Algoritmo \u00b6 Abrir E/S (arch) Escribir (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: modificaciones) Para finalizar ingrese cualquier otra letra.\u2019) Leer(clave, cod_mov) MIENTRAS (cod_mov en valido) HACER reg_mae.clave := clave LEER (arch_mae, reg_mae) SI no existe ENTONCES SI cod_mov = 'B' ENTONCES ESCRIBIR(\u2018Error baja no existe\u2019) SINO SI cod_mov = 'M' ENTONCES ESCRIBIR(\u2018Error modificaci\u00f3n no existe\u2019) SINO // Ingresar por teclado los datos correspondientes a la nueva clave LEER(reg_mae.campo1) LEER(reg_mae.campo2) ... LEER(reg_mae.campon) ESCRIBIR(arch_mae, reg_mae) FSI FSI SINO SI cod_mov = 'A' ENTONCES ESCRIBIR(\u2018Error clave existe, alta no es posible\u2019) SINO SI cod_mov = 'M' ENTONCES // Ingresar por teclado los datos que se desean modificar LEER(campo1) SI campo1 <> '' ENTONCES reg_mae.campo1 := campo1 FSI LEER(campo2) SI campo2 <> '' ENTONCES reg_mae.campo2 := campo2 FSI ... LEER(campon) SI campon <> '' ENTONCES reg_mae.campon := campon FSI RE-ESCRIBIR(arch_mae, reg_mae) SINO // Baja l\u00f3gica reg_mae.Marca_baja := \"*\" RE-ESCRIBIR(arch_mae, Reg_mae) // Baja F\u00edsica BORRAR(arch_mae, reg_mae) FSI FSI FSI ESCRIBIR (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: odificaciones) Para finalizar ingrese cualquier otra letra.\u2019) LEER(clave, cod_mov) FIN MIENTRAS CERRAR(arch_mae)","title":"Actualizaci\u00f3n"},{"location":"teoria/actualizacion/#actualizacion","text":"","title":"Actualizacion"},{"location":"teoria/actualizacion/#tipos-de-actualizacion","text":"POR LOTES Varios registros de movimiento para un registro maestro. UNITARIA Un registro movimiento para un registro maestro.","title":"Tipos de Actualizaci\u00f3n"},{"location":"teoria/actualizacion/#ficheros","text":"Ficheros de entrada: por lo menos dos: MAESTRO Y MOVIMIENTOS. Ficheros de salida: como m\u00ednimo uno.","title":"Ficheros"},{"location":"teoria/actualizacion/#tipos-de-ficheros-maestros","text":"Hist\u00f3rico Com\u00fan o Normal","title":"Tipos de Ficheros Maestros"},{"location":"teoria/actualizacion/#tipos-de-ficheros-de-movimientos","text":"Actualizaci\u00f3n General o Combinado Actualizaci\u00f3n Parcial o Individual","title":"Tipos de Ficheros de Movimientos"},{"location":"teoria/actualizacion/#tipos-de-movimientos","text":"Alta Baja Modificaci\u00f3n","title":"Tipos de Movimientos"},{"location":"teoria/actualizacion/#algoritmo-actualizacion-unitaria","text":"Utilizando ciclo incluyente Accion Act_Uni es Algoritmo Abrir_Archivos Leer_Maestro Leer_Movimiento Mientras (Clave_Mae <> HV) o (Clave_Mov <> HV) hacer Si (Clave_Mae = Clave_Mov) entonces Proceso_Iguales sino Si (Clave_Mae < Clave_Mov) entonces Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Leer_Maestro sino Proceso_Distintos Fin Si Fin Si Fin Mientras Cerrar_Archivos Fin Accion Subaccion Leer_Movimiento es Leer(Arch_mov, Reg_mov) Si FDA(Arch_mov) entonces Clave_mov:= HV Fin Si Fin Subaccion Subaccion Leer_Maestro es Leer(Arch_mae, Reg_mae) Si FDA(Arch_mae) entonces Clave_mae : = HV Fin Si Fin Subaccion Subacci\u00f3n Proceso_Iguales es Si Reg_mov.Cod_mov = 'ALTA' entonces Escribir('Error alta no existe') Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Proceso_Mod_Maestro Reg_sal : = Reg_mae Escribir(Arch_sal, Reg_sal) Sino // eliminaci\u00f3n l\u00f3gica Marcar_Registro Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Maestro Leer_Movimiento Fin Subacci\u00f3n. Subaccion Proceso_Distintos es Si (Reg_mov.Cod_Mov = 'BAJA') entonces Escribir('Error baja no existe') Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Escribir('Error mofificaci\u00f3n no existe') Sino // Asigna campo por campo, porque Reg_sal y Reg_mov tienen distinto formato Reg_sal.clave:= Reg_mov.clave Reg_sal.campo1:= Reg_mov.campo1 Reg_sal.campo2:= Reg_mov.campo2 ........ Reg_sal.campoN:= Reg_mov.campoN Reg_sal.Marca_baja:= '' Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Movimiento Fin Subaccion Subaccion Proceso_Modif_Maestro es Si (Reg_Mov.campo1 <> '') entonces Reg_mae.campo1:= Reg_mov.campo1 Fin Si Si (Reg_Mov.campo2 <> '') entonces Reg_mae.campo2 := Reg_mov.campo2 Fin Si Si (Reg_Mov.campo3 <> '') entonces Reg_mae.campo3 := Reg_mov.campo3 Fin Si // ... y as\u00ed sucesivamente para todos los campos del registro... Fin Subaccion Subaccion Marcar_Registro es Reg_mae.Marca_baja:= '*' // en vez de asterisco, se puede asignar la fecha del d\u00eda, o cualquier otro dato, seg\u00fan el problema // Fin Subaccion","title":"Algoritmo Actualizaci\u00f3n Unitaria"},{"location":"teoria/actualizacion/#actualizacion-secuencial-por-lotes","text":"","title":"Actualizacion Secuencial Por lotes"},{"location":"teoria/actualizacion/#consideraciones","text":"Utilizamos un ciclo incluyente . Los tipos de movimientos son: Alta: Siempre el primer registro va a ser del tipo alta, y luego modificaciones. Modificaci\u00f3n: pueden existir varias modificaciones a un maestro. Baja: son bajas logicas. Solo el ultimo movimiento puede ser una baja logica. No existen altas o bajas entre las modificaciones.","title":"Consideraciones"},{"location":"teoria/actualizacion/#ambiente","text":"El ambiente esta formado por 2 archivos con la siguiente estructura: Formato_Clave = Registro clave1: ... clave2: ... ... claven: ... fin registro formato_Maestro = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro formato_Movimiento = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... cod_mov: (\"A\", \"M\", \"B\") fin registro mae, mae_sal: archivo de formato_Maestro ordenado por clave reg_sal, reg_mae, aux: formato_Maestro mov: archivo de formato_movimiento ordenado por clave reg_mov: formato_movimiento","title":"Ambiente"},{"location":"teoria/actualizacion/#algoritmo","text":"Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (reg_mov.clave <> High_Value) o (reg_mae.clave <> High_Value) HACER SI Creg_mae.clave < Creg_mov.clave ENTONCES //Maestro sin Movimiento Reg_sal : = Reg_mae ESCRIBIR(mae_sal, Reg_sal) Leer_Maestro SINO SI Creg_mae.clave = Creg_mov.clave Movimiento aux : = reg_mae MIENTRAS (Creg_mae.clave = Creg_mov.clave) HACER Proceso_Movim Leer_Movimiento Fin Mientras reg_sal : = Aux ESCRIBIR(mae_sal, reg_sal) Leer_Maestro SINO // Movimiento sin Maestro ~ 1 Alta y 0-1 Modific. y/o Bajas // Asigna campo por campo, porque Aux y Reg_mov tienen distinto formato Aux.clave := Reg_mov.clave Aux.campo1 := Reg_mov.campo3 Aux.campo2 := Reg_mov.campo4 ........ Aux.campon := Reg_mov.campon Aux.Marca_baja := \"\" Leer_Movimiento MIENTRAS (Clave_Aux = Clave_Mov) HACER Proceso_Movim Leer_Movimiento FMientras reg_sal : = aux ESCRIBIR(mae_sal, reg_sal) FIN SI FIN SI FIN MIENTRAS CERRAR(mae) CERRAR(mae_sal) CERRAR(mov)","title":"Algoritmo"},{"location":"teoria/actualizacion/#subacciones","text":"Subacci\u00f3n Leer_Movimiento es LEER(mov, Reg_mov) SI FDA(mov) ENTONCES reg_mov.clave := High_value FSI; FAcci\u00f3n Subacci\u00f3n Leer_Maestro es LEER(mae, reg_mae) SI FDA(mae) ENTONCES reg_mae.clave : = High_value FSI; FAcci\u00f3n Subacci\u00f3n Proceso_Movim es //Comparar la informaci\u00f3n del Registro de Movimientos y, de acuerdo a los valores que //tengan, y alterar los contenidos del Registro Auxiliar (Aux). SI reg_mov.Cod_Mov = \"M\" ENTONCES //Modificaci\u00f3n Proceso_modif_maestro SINO SI reg_mov.Cod_Mov = \"B\" ENTONCES //eliminaci\u00f3n l\u00f3gica Marcar_registro Fsi Fsi FAcci\u00f3n Subacci\u00f3n Proceso_modif_maestro es Si Reg_Mov.campo1 <> \"\" entonces // No se actualizan los campos claves. Aux.campo1 := Reg_mov.campo1 fsi; Si Reg_Mov.campo2 <> \"\" entonces Aux.campo2 := Reg_mov.campo2 fsi; .............................. //... y as\u00ed sucesivamente para todos los campos del registro... .............................. Si Reg_Mov.campon <> \"\" entonces Aux.campon := Reg_mov.campon fsi; FAcci\u00f3n. Subacci\u00f3n Marcar_registro es //en vez de asterisco, se puede asignar la fecha del d\u00eda, //o cualquier otro dato, seg\u00fan el problema Aux.Marca_baja:= \"*\" FAcci\u00f3n.","title":"Subacciones"},{"location":"teoria/actualizacion/#modificar","text":"Que pasa si se pide que se tengan en cuenta los siguientes errores: Las altas no siempre estan al principio. Las bajas no siempre estan al final.","title":"Modificar"},{"location":"teoria/actualizacion/#actualizacion-indexada","text":"","title":"Actualizacion Indexada"},{"location":"teoria/actualizacion/#consideraciones_1","text":"Archivo maestro indexado por clave Se ingresan movimientos por terminal","title":"Consideraciones"},{"location":"teoria/actualizacion/#ambiente_1","text":"El ambiente esta formado por 1 solo archivos con la siguiente estructura: formato_mae = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro arch_mae: Archivo de formato_mae indexado por clave. reg_mae: formato cod_mov: AN(1) valido = ('A', 'B', 'M') clave: formato_clave","title":"Ambiente"},{"location":"teoria/actualizacion/#algoritmo_1","text":"Abrir E/S (arch) Escribir (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: modificaciones) Para finalizar ingrese cualquier otra letra.\u2019) Leer(clave, cod_mov) MIENTRAS (cod_mov en valido) HACER reg_mae.clave := clave LEER (arch_mae, reg_mae) SI no existe ENTONCES SI cod_mov = 'B' ENTONCES ESCRIBIR(\u2018Error baja no existe\u2019) SINO SI cod_mov = 'M' ENTONCES ESCRIBIR(\u2018Error modificaci\u00f3n no existe\u2019) SINO // Ingresar por teclado los datos correspondientes a la nueva clave LEER(reg_mae.campo1) LEER(reg_mae.campo2) ... LEER(reg_mae.campon) ESCRIBIR(arch_mae, reg_mae) FSI FSI SINO SI cod_mov = 'A' ENTONCES ESCRIBIR(\u2018Error clave existe, alta no es posible\u2019) SINO SI cod_mov = 'M' ENTONCES // Ingresar por teclado los datos que se desean modificar LEER(campo1) SI campo1 <> '' ENTONCES reg_mae.campo1 := campo1 FSI LEER(campo2) SI campo2 <> '' ENTONCES reg_mae.campo2 := campo2 FSI ... LEER(campon) SI campon <> '' ENTONCES reg_mae.campon := campon FSI RE-ESCRIBIR(arch_mae, reg_mae) SINO // Baja l\u00f3gica reg_mae.Marca_baja := \"*\" RE-ESCRIBIR(arch_mae, Reg_mae) // Baja F\u00edsica BORRAR(arch_mae, reg_mae) FSI FSI FSI ESCRIBIR (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: odificaciones) Para finalizar ingrese cualquier otra letra.\u2019) LEER(clave, cod_mov) FIN MIENTRAS CERRAR(arch_mae)","title":"Algoritmo"},{"location":"teoria/arreglos/","text":"Arreglos \u00b6 B\u00fasqueda \u00b6 B\u00fasqueda lineal \u00b6 LEER(x) PARA i:= 1 a N HACER SI A[i] = x ENTONCES Escribir ('El elemento', x, 'est\u00e1 en la posici\u00f3n', i) FIN SI FIN PARA B\u00fasqueda lineal con centinela \u00b6 LEER(x) i:=1 MIENTRAS (i < N) y A[i] <> x HACER i:=i+1 FIN MIENTRAS SI A[i] = x ENTONCES ESCRIBIR ('El elemento', x, 'se encontr\u00f3 en la posici\u00f3n', i) SINO ESCRIBIR ('No encontrado') FIN SI B\u00fasqueda binaria o dicot\u00f3mica \u00b6 LEER(x) iz:=1 de:=N cen:=(iz+de) DIV 2 MIENTRAS (iz < de) y (nom[cen] <> x) HACER SI (nom[cen] > x) ENTONCES de:=cen-1 SINO iz:=cen+1 FIN SI cen:=(iz+de) div 2; FIN MIENTRAS SI (nom[cen] = x) ENTONCES ESCRIBIR ('El elemento buscado est\u00e1 en la posici\u00f3n ',cen) SINO ESCRIBIR ('El elemento buscado no est\u00e1 en el arreglo'); FIN SI Ordenamiento \u00b6 Inserci\u00f3n directa \u00b6 // Ordena de menor a mayor CARGAR_ARREGLO PARA i:= 2 a n HACER x:=a[i] j:=i-1 MIENTRAS (j > 0) y (x < a[j]) HACER a[j+1]:=a[j] j:=j-1 FIN MIENTRAS a[j+1]:=x FIN PARA Seleccion directa \u00b6 // Ordena de mayor a menor CARGAR_ARREGLO PARA i:= 1 a n-1 HACER x:=a[i] max:=i PARA j:= i+1 a n HACER SI (x < a[j]) ENTONCES max:=j x:=a[j] FIN SI FIN PARA a[max]:=a[i] a[i]:=x FIN PARA Intercambio directo / Burbuja \u00b6 // Ordena de mayor a menor CARGAR_ARREGLO Bandera:= Falso MIENTRAS No Bandera HACER Bandera:= Verdadero PARA j:=1 a n-1 HACER SI (a[j] < a[j+1]) ENTONCES x:=a[j] a[j]:=a[j+1] a[j+1]:=x Bandera:= Falso FIN SI FIN PARA FIN MIENTRAS","title":"Arreglos"},{"location":"teoria/arreglos/#arreglos","text":"","title":"Arreglos"},{"location":"teoria/arreglos/#busqueda","text":"","title":"B\u00fasqueda"},{"location":"teoria/arreglos/#busqueda-lineal","text":"LEER(x) PARA i:= 1 a N HACER SI A[i] = x ENTONCES Escribir ('El elemento', x, 'est\u00e1 en la posici\u00f3n', i) FIN SI FIN PARA","title":"B\u00fasqueda lineal"},{"location":"teoria/arreglos/#busqueda-lineal-con-centinela","text":"LEER(x) i:=1 MIENTRAS (i < N) y A[i] <> x HACER i:=i+1 FIN MIENTRAS SI A[i] = x ENTONCES ESCRIBIR ('El elemento', x, 'se encontr\u00f3 en la posici\u00f3n', i) SINO ESCRIBIR ('No encontrado') FIN SI","title":"B\u00fasqueda lineal con centinela"},{"location":"teoria/arreglos/#busqueda-binaria-o-dicotomica","text":"LEER(x) iz:=1 de:=N cen:=(iz+de) DIV 2 MIENTRAS (iz < de) y (nom[cen] <> x) HACER SI (nom[cen] > x) ENTONCES de:=cen-1 SINO iz:=cen+1 FIN SI cen:=(iz+de) div 2; FIN MIENTRAS SI (nom[cen] = x) ENTONCES ESCRIBIR ('El elemento buscado est\u00e1 en la posici\u00f3n ',cen) SINO ESCRIBIR ('El elemento buscado no est\u00e1 en el arreglo'); FIN SI","title":"B\u00fasqueda binaria o dicot\u00f3mica"},{"location":"teoria/arreglos/#ordenamiento","text":"","title":"Ordenamiento"},{"location":"teoria/arreglos/#insercion-directa","text":"// Ordena de menor a mayor CARGAR_ARREGLO PARA i:= 2 a n HACER x:=a[i] j:=i-1 MIENTRAS (j > 0) y (x < a[j]) HACER a[j+1]:=a[j] j:=j-1 FIN MIENTRAS a[j+1]:=x FIN PARA","title":"Inserci\u00f3n directa"},{"location":"teoria/arreglos/#seleccion-directa","text":"// Ordena de mayor a menor CARGAR_ARREGLO PARA i:= 1 a n-1 HACER x:=a[i] max:=i PARA j:= i+1 a n HACER SI (x < a[j]) ENTONCES max:=j x:=a[j] FIN SI FIN PARA a[max]:=a[i] a[i]:=x FIN PARA","title":"Seleccion directa"},{"location":"teoria/arreglos/#intercambio-directo-burbuja","text":"// Ordena de mayor a menor CARGAR_ARREGLO Bandera:= Falso MIENTRAS No Bandera HACER Bandera:= Verdadero PARA j:=1 a n-1 HACER SI (a[j] < a[j+1]) ENTONCES x:=a[j] a[j]:=a[j+1] a[j+1]:=x Bandera:= Falso FIN SI FIN PARA FIN MIENTRAS","title":"Intercambio directo / Burbuja"},{"location":"teoria/corte/","text":"Corte de Control \u00b6 Estructura del Corte de Control \u00b6 Primero vamos a ver la estructura generica del algoritmo (o el esqueleto): Definimos un registro que tiene 3 claves: reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Nota: de esta forma la clave3 es la de mayor peso, seguido por la clave2, y luego por la clave1. Ahora el archivo y la variable para recorrer: Arch: Archivo de reg ordenado por clave3, clave2, clave1 y clave0 r: reg Las variables que se van a ocupar son: Resguardo de clave (Reg1, Reg2, Reg3) Contadores y Acumuladores La subaccion corte_n va a tener las siguientes acciones: subaccion corte_n es llamada al corte_n-1 Emitir resultados del nivel Acumular totales al nivel superior Reiniciar totales de este nivel Resguardar la nueva clave fin subaccion Nota: la primera accion no se va a realizar si estamos en el corte de menor peso. Esqueleto del algoritmo: Algoritmo Inicializar_archivos Inicializar_totalizadores Inicializar_resguardos Mientras NFDA(Arch) Hacer Tratar_corte Tratar_registro Leer_registro Fin Mientras Corte_3 Emitir_totales cerrar_archivo Fin accion Ahora la subaccion Tratar_corte: Subaccion Tratar_Corte es Si r.clave3 <> Reg3 entonces Corte_3 sino Si r.clave2 <> Reg2 entonces Corte_2 sino Si r.clave1 <> Reg1 entonces Corte_1 fin si fin si fin si fin subaccion Nota: las subacciones: Inicializar, tratar_registro y Emitir_totales, no se escribieron dado a que dependen del enunciado. Un ejemplo \u00b6 Ahora un ejemplo con el mismo archivo, con el siguiente enunciado: \"Se pide mostrar cuantas entradas existen en el archivo, discriminando por la clave1, clave2, clave3 y total general.\" Accion ejemplo es Ambiente reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Arch : archivo de reg ordenado por clave3, clave2, clave1 y clave0 r : reg Reg3: N(8) Reg2: N(4) Reg1: N(2) contt, cont3, cont2, cont1: entero subaccion inicializar es Abrir E/(Arch) leer(Arch, r) contt := 0 cont3 := 0 cont2 := 0 cont1 := 0 Reg3 := r.clave3 Reg2 := r.clave2 Reg1 := r.clave1 Fin subaccion subaccion corte_1 es Esc(\"Para el \", Reg1, \" existen: \", cont1) cont2 := cont2 + cont1 cont1 := 0 Reg1 := r.clave1 fin subaccion subaccion corte_2 es corte_1 Esc(\"Para el \", Reg2, \" existen: \", cont2) cont3 := cont3 + cont2 cont2 := 0 Reg2 := r.clave2 fin subaccion subaccion corte_3 es corte_2 Esc(\"Para el \", Reg3, \" existen: \", cont3) contt := contt + cont3 cont3 := 0 Reg3 := r.clave3 fin subaccion Subaccion tratar_corte es Si r.clave3 <> Reg3 entonces corte_3 sino si r.clave2 <> Reg2 entonces corte_2 sino si r.clave1 <> Reg1 entonces corte_1 fin si fin si fin si fin subaccion subaccion tratar_registro es cont1 := cont1 + 1 Fin subaccion subaccion emitir_totales es Esc(\"El total general de entradas es: \", contt) fin subaccion Algoritmo Inicializar Mientras NFDA(Arch) hacer tratar_corte tratar_registro leer(Arch, r) Fin Mientras corte_3 emitir_totales cerrar(arch) fin accion Otro ejercicios \u00b6 Manteniendo el mismo archivo pero cambiando un poco el enunciado: Se pide mostrar cuantas entradas que tengan el campo1 = \"Si\" existen en el archivo, discriminando por la clave1, clave2, clave3 y total general. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave1, clave2 y clave3. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave2, clave3 y total general. Se pide mostrar cuantas entradas poseen un numero mayores o iguales a 50 en el campo2 y cuantas entradas (en el campo2) se tienen menores a 50 del archivo, discriminando por la clave1, clave2, clave3 y total general. Generar un archivo con el siguiente formato: Clave3, clave2, total de Si y total de No, para el archivo anterior explicado.","title":"Corte de Control"},{"location":"teoria/corte/#corte-de-control","text":"","title":"Corte de Control"},{"location":"teoria/corte/#estructura-del-corte-de-control","text":"Primero vamos a ver la estructura generica del algoritmo (o el esqueleto): Definimos un registro que tiene 3 claves: reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Nota: de esta forma la clave3 es la de mayor peso, seguido por la clave2, y luego por la clave1. Ahora el archivo y la variable para recorrer: Arch: Archivo de reg ordenado por clave3, clave2, clave1 y clave0 r: reg Las variables que se van a ocupar son: Resguardo de clave (Reg1, Reg2, Reg3) Contadores y Acumuladores La subaccion corte_n va a tener las siguientes acciones: subaccion corte_n es llamada al corte_n-1 Emitir resultados del nivel Acumular totales al nivel superior Reiniciar totales de este nivel Resguardar la nueva clave fin subaccion Nota: la primera accion no se va a realizar si estamos en el corte de menor peso. Esqueleto del algoritmo: Algoritmo Inicializar_archivos Inicializar_totalizadores Inicializar_resguardos Mientras NFDA(Arch) Hacer Tratar_corte Tratar_registro Leer_registro Fin Mientras Corte_3 Emitir_totales cerrar_archivo Fin accion Ahora la subaccion Tratar_corte: Subaccion Tratar_Corte es Si r.clave3 <> Reg3 entonces Corte_3 sino Si r.clave2 <> Reg2 entonces Corte_2 sino Si r.clave1 <> Reg1 entonces Corte_1 fin si fin si fin si fin subaccion Nota: las subacciones: Inicializar, tratar_registro y Emitir_totales, no se escribieron dado a que dependen del enunciado.","title":"Estructura del Corte de Control"},{"location":"teoria/corte/#un-ejemplo","text":"Ahora un ejemplo con el mismo archivo, con el siguiente enunciado: \"Se pide mostrar cuantas entradas existen en el archivo, discriminando por la clave1, clave2, clave3 y total general.\" Accion ejemplo es Ambiente reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Arch : archivo de reg ordenado por clave3, clave2, clave1 y clave0 r : reg Reg3: N(8) Reg2: N(4) Reg1: N(2) contt, cont3, cont2, cont1: entero subaccion inicializar es Abrir E/(Arch) leer(Arch, r) contt := 0 cont3 := 0 cont2 := 0 cont1 := 0 Reg3 := r.clave3 Reg2 := r.clave2 Reg1 := r.clave1 Fin subaccion subaccion corte_1 es Esc(\"Para el \", Reg1, \" existen: \", cont1) cont2 := cont2 + cont1 cont1 := 0 Reg1 := r.clave1 fin subaccion subaccion corte_2 es corte_1 Esc(\"Para el \", Reg2, \" existen: \", cont2) cont3 := cont3 + cont2 cont2 := 0 Reg2 := r.clave2 fin subaccion subaccion corte_3 es corte_2 Esc(\"Para el \", Reg3, \" existen: \", cont3) contt := contt + cont3 cont3 := 0 Reg3 := r.clave3 fin subaccion Subaccion tratar_corte es Si r.clave3 <> Reg3 entonces corte_3 sino si r.clave2 <> Reg2 entonces corte_2 sino si r.clave1 <> Reg1 entonces corte_1 fin si fin si fin si fin subaccion subaccion tratar_registro es cont1 := cont1 + 1 Fin subaccion subaccion emitir_totales es Esc(\"El total general de entradas es: \", contt) fin subaccion Algoritmo Inicializar Mientras NFDA(Arch) hacer tratar_corte tratar_registro leer(Arch, r) Fin Mientras corte_3 emitir_totales cerrar(arch) fin accion","title":"Un ejemplo"},{"location":"teoria/corte/#otro-ejercicios","text":"Manteniendo el mismo archivo pero cambiando un poco el enunciado: Se pide mostrar cuantas entradas que tengan el campo1 = \"Si\" existen en el archivo, discriminando por la clave1, clave2, clave3 y total general. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave1, clave2 y clave3. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave2, clave3 y total general. Se pide mostrar cuantas entradas poseen un numero mayores o iguales a 50 en el campo2 y cuantas entradas (en el campo2) se tienen menores a 50 del archivo, discriminando por la clave1, clave2, clave3 y total general. Generar un archivo con el siguiente formato: Clave3, clave2, total de Si y total de No, para el archivo anterior explicado.","title":"Otro ejercicios"},{"location":"teoria/listas/","text":"Listas \u00b6 Listas Simplemente enlazadas \u00b6 Definicion de un nodo Nodo = Registro Dato: <tipo> Prox: Puntero a Nodo Fin Registro Prim, p, a, q: puntero a Nodo; valor: <tipo> B\u00fasqueda \u00b6 LEER (valor) p:= Prim MIENTRAS (p <> nil) y (*p.dato <> valor) HACER p = *p.prox FIN MIENTRAS SI (p <> nil) ENTONCES Escribir ('Se encontro el elemento') SINO Escribir ('No se encontro el elemento') FIN SI Carga Apilada \u00b6 LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= Prim Prim:= p LEER(valor) FIN MIENTRAS Carga Encolada \u00b6 LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= nil SI Prim = nil ENTONCES Prim = p SINO *a.Prox:= p FIN SI a:=p LEER(valor) FIN MIENTRAS Carga Ordenada \u00b6 Prim:= nil A:= nil; LEER (valor) NUEVO (p) *p.dato:= valor q:= Prim MIENTRAS (q <> nil) y (*q.dato < valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (a = nil) ENTONCES *p.prox:= Prim Prim:= p SINO *p.prox:= q *a.prox:= p FIN SI Eliminacion \u00b6 LEER (valor) q:= Prim MIENTRAS (q <> nil) y (*q.dato <> valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (q = nil) ENTONCES Escribir ('Error, el valor no existe') SINO SI (a = nil) ENTONCES Prim = *q.prox SINO *a.prox:= *q.prox FIN SI DISPONER(q) FIN SI","title":"Listas"},{"location":"teoria/listas/#listas","text":"","title":"Listas"},{"location":"teoria/listas/#listas-simplemente-enlazadas","text":"Definicion de un nodo Nodo = Registro Dato: <tipo> Prox: Puntero a Nodo Fin Registro Prim, p, a, q: puntero a Nodo; valor: <tipo>","title":"Listas Simplemente enlazadas"},{"location":"teoria/listas/#busqueda","text":"LEER (valor) p:= Prim MIENTRAS (p <> nil) y (*p.dato <> valor) HACER p = *p.prox FIN MIENTRAS SI (p <> nil) ENTONCES Escribir ('Se encontro el elemento') SINO Escribir ('No se encontro el elemento') FIN SI","title":"B\u00fasqueda"},{"location":"teoria/listas/#carga-apilada","text":"LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= Prim Prim:= p LEER(valor) FIN MIENTRAS","title":"Carga Apilada"},{"location":"teoria/listas/#carga-encolada","text":"LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= nil SI Prim = nil ENTONCES Prim = p SINO *a.Prox:= p FIN SI a:=p LEER(valor) FIN MIENTRAS","title":"Carga Encolada"},{"location":"teoria/listas/#carga-ordenada","text":"Prim:= nil A:= nil; LEER (valor) NUEVO (p) *p.dato:= valor q:= Prim MIENTRAS (q <> nil) y (*q.dato < valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (a = nil) ENTONCES *p.prox:= Prim Prim:= p SINO *p.prox:= q *a.prox:= p FIN SI","title":"Carga Ordenada"},{"location":"teoria/listas/#eliminacion","text":"LEER (valor) q:= Prim MIENTRAS (q <> nil) y (*q.dato <> valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (q = nil) ENTONCES Escribir ('Error, el valor no existe') SINO SI (a = nil) ENTONCES Prim = *q.prox SINO *a.prox:= *q.prox FIN SI DISPONER(q) FIN SI","title":"Eliminacion"},{"location":"teoria/mezcla/","text":"Mezcla \u00b6 Caracter\u00edsticas \u00b6 Se aplica la \u201ct\u00e9cnica de apareo\u201d Las estructuras de los ficheros deben tener un elemento com\u00fan: la \u201cclave de apareo\u201d o \u201ccampo clave\u201d Los ficheros deben estar ordenados por el \u201ccampo clave\u201d Ficheros de entrada: por lo menos dos. Ficheros de salida: uno (resultado de la combinaci\u00f3n de los dos de entrada). Tipos de Mezcla \u00b6 Caracteristicas Directa Indirecta Formato de los registros de los Ficheros de entrada Igual Distinto Formato de los registros del Fichero de Salida Igual al de los Ficheros de Entrada Igual a Alguno de los ficheros de entrada o una combinacion de estos Cantidad de registros del Fichero de Salida Es igual a la sumatoria de las cantidades de los registros de los ficheros de entrada No es posible predecir Ciclos de Apareo \u00b6 Incluyente \u00b6 Mientras (Clave1 <> HV) o (Clave2 <> HV) o .... (ClaveN <> HV) hacer PROCESO Fin Mientras Excluyente \u00b6 Mientras NFDA (Arch_1) y NFDA(Arch_2) hacer PROCESO de registros comunes Fin Mientras Mientras NFDA (Arch_1) hacer ** Uno de estos ciclos por cada fichero interviniente** PROCESO de Registros del Arch_1 Fin Mientras Mientras NFDA (Arch_2) hacer PROCESO de Registros del Arch_2 Fin Mientras Si hay m\u00e1s de 2 ficheros se necesitar\u00e1n m\u00e1s ciclos, adem\u00e1s del ciclo principal. Por ej: para 3 ficheros se necesitar\u00e1n 7 ciclos: Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) y NFDA (Arch_3) - Ciclo principal que procesa registros comunes. Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_2) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_1) Condici\u00f3n: NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_3)","title":"Mezcla"},{"location":"teoria/mezcla/#mezcla","text":"","title":"Mezcla"},{"location":"teoria/mezcla/#caracteristicas","text":"Se aplica la \u201ct\u00e9cnica de apareo\u201d Las estructuras de los ficheros deben tener un elemento com\u00fan: la \u201cclave de apareo\u201d o \u201ccampo clave\u201d Los ficheros deben estar ordenados por el \u201ccampo clave\u201d Ficheros de entrada: por lo menos dos. Ficheros de salida: uno (resultado de la combinaci\u00f3n de los dos de entrada).","title":"Caracter\u00edsticas"},{"location":"teoria/mezcla/#tipos-de-mezcla","text":"Caracteristicas Directa Indirecta Formato de los registros de los Ficheros de entrada Igual Distinto Formato de los registros del Fichero de Salida Igual al de los Ficheros de Entrada Igual a Alguno de los ficheros de entrada o una combinacion de estos Cantidad de registros del Fichero de Salida Es igual a la sumatoria de las cantidades de los registros de los ficheros de entrada No es posible predecir","title":"Tipos de Mezcla"},{"location":"teoria/mezcla/#ciclos-de-apareo","text":"","title":"Ciclos de Apareo"},{"location":"teoria/mezcla/#incluyente","text":"Mientras (Clave1 <> HV) o (Clave2 <> HV) o .... (ClaveN <> HV) hacer PROCESO Fin Mientras","title":"Incluyente"},{"location":"teoria/mezcla/#excluyente","text":"Mientras NFDA (Arch_1) y NFDA(Arch_2) hacer PROCESO de registros comunes Fin Mientras Mientras NFDA (Arch_1) hacer ** Uno de estos ciclos por cada fichero interviniente** PROCESO de Registros del Arch_1 Fin Mientras Mientras NFDA (Arch_2) hacer PROCESO de Registros del Arch_2 Fin Mientras Si hay m\u00e1s de 2 ficheros se necesitar\u00e1n m\u00e1s ciclos, adem\u00e1s del ciclo principal. Por ej: para 3 ficheros se necesitar\u00e1n 7 ciclos: Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) y NFDA (Arch_3) - Ciclo principal que procesa registros comunes. Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_2) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_1) Condici\u00f3n: NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_3)","title":"Excluyente"}]}